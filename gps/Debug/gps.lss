
gps.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000272a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a0  00800060  0000272a  000027be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000027c  00800100  00800100  0000285e  2**0
                  ALLOC
  3 .debug_aranges 000000e0  00000000  00000000  0000285e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000005d4  00000000  00000000  0000293e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000015f8  00000000  00000000  00002f12  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fd  00000000  00000000  0000450a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ef2  00000000  00000000  00004c07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000320  00000000  00000000  00005afc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000675  00000000  00000000  00005e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005ee  00000000  00000000  00006491  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  00006a7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 4b 01 	jmp	0x296	; 0x296 <__vector_7>
      20:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__vector_13>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__c.1790>:
      54:	6e 61 6e 00                                         nan.

00000058 <__c.1788>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_inf>:
     156:	49 4e 46                                            INF

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_nan>:
     15e:	4e 41 4e                                            NAN

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d8 e0       	ldi	r29, 0x08	; 8
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	11 e0       	ldi	r17, 0x01	; 1
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	ea e2       	ldi	r30, 0x2A	; 42
     1a6:	f7 e2       	ldi	r31, 0x27	; 39
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <.do_copy_data_start>

000001aa <.do_copy_data_loop>:
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0

000001ae <.do_copy_data_start>:
     1ae:	a0 30       	cpi	r26, 0x00	; 0
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <.do_copy_data_loop>

000001b4 <__do_clear_bss>:
     1b4:	13 e0       	ldi	r17, 0x03	; 3
     1b6:	a0 e0       	ldi	r26, 0x00	; 0
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	ac 37       	cpi	r26, 0x7C	; 124
     1c0:	b1 07       	cpc	r27, r17
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 7f 01 	call	0x2fe	; 0x2fe <main>
     1c8:	0c 94 93 13 	jmp	0x2726	; 0x2726 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <readFromBuffer>:
		}
}


int isFull(){return (currentSize==BUFFER_SIZE-1);}
int isEmpty(){return (currentSize==0);}
     1d0:	20 91 00 01 	lds	r18, 0x0100
     1d4:	30 91 01 01 	lds	r19, 0x0101
volatile char data[BUFFER_SIZE];//data

     
char readFromBuffer(){
       char ret='@'; 
		if(!isEmpty()){
     1d8:	21 15       	cp	r18, r1
     1da:	31 05       	cpc	r19, r1
     1dc:	11 f4       	brne	.+4      	; 0x1e2 <readFromBuffer+0x12>
     1de:	e0 e4       	ldi	r30, 0x40	; 64
     1e0:	14 c0       	rjmp	.+40     	; 0x20a <readFromBuffer+0x3a>
	        ret= data[readPointer];
     1e2:	80 91 04 01 	lds	r24, 0x0104
     1e6:	90 91 05 01 	lds	r25, 0x0105
     1ea:	fc 01       	movw	r30, r24
     1ec:	e7 5d       	subi	r30, 0xD7	; 215
     1ee:	fe 4f       	sbci	r31, 0xFE	; 254
     1f0:	e0 81       	ld	r30, Z
			currentSize--;
     1f2:	21 50       	subi	r18, 0x01	; 1
     1f4:	30 40       	sbci	r19, 0x00	; 0
     1f6:	30 93 01 01 	sts	0x0101, r19
     1fa:	20 93 00 01 	sts	0x0100, r18
	        readPointer = (readPointer + 1) & (BUFFER_SIZE-1); // This is the useful point is choosing the array length to be a power of two
     1fe:	01 96       	adiw	r24, 0x01	; 1
     200:	91 70       	andi	r25, 0x01	; 1
     202:	90 93 05 01 	sts	0x0105, r25
     206:	80 93 04 01 	sts	0x0104, r24
		}else ret='@';
		return ret;
}
     20a:	8e 2f       	mov	r24, r30
     20c:	08 95       	ret

0000020e <writeToBuffer>:
 
void writeToBuffer(char newByte){
     20e:	48 2f       	mov	r20, r24
	        writePointer = (writePointer + 1) & (BUFFER_SIZE-1); // This is the useful point is choosing the array length to be a power of two
		}
}


int isFull(){return (currentSize==BUFFER_SIZE-1);}
     210:	20 91 00 01 	lds	r18, 0x0100
     214:	30 91 01 01 	lds	r19, 0x0101
		}else ret='@';
		return ret;
}
 
void writeToBuffer(char newByte){
 		if(!isFull()){
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	2f 3f       	cpi	r18, 0xFF	; 255
     21c:	38 07       	cpc	r19, r24
     21e:	a1 f0       	breq	.+40     	; 0x248 <writeToBuffer+0x3a>
	        data[writePointer] = newByte;
     220:	80 91 02 01 	lds	r24, 0x0102
     224:	90 91 03 01 	lds	r25, 0x0103
     228:	fc 01       	movw	r30, r24
     22a:	e7 5d       	subi	r30, 0xD7	; 215
     22c:	fe 4f       	sbci	r31, 0xFE	; 254
     22e:	40 83       	st	Z, r20
			currentSize++;
     230:	2f 5f       	subi	r18, 0xFF	; 255
     232:	3f 4f       	sbci	r19, 0xFF	; 255
     234:	30 93 01 01 	sts	0x0101, r19
     238:	20 93 00 01 	sts	0x0100, r18
	        writePointer = (writePointer + 1) & (BUFFER_SIZE-1); // This is the useful point is choosing the array length to be a power of two
     23c:	01 96       	adiw	r24, 0x01	; 1
     23e:	91 70       	andi	r25, 0x01	; 1
     240:	90 93 03 01 	sts	0x0103, r25
     244:	80 93 02 01 	sts	0x0102, r24
     248:	08 95       	ret

0000024a <isFull>:
		}
}


int isFull(){return (currentSize==BUFFER_SIZE-1);}
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	80 91 00 01 	lds	r24, 0x0100
     252:	90 91 01 01 	lds	r25, 0x0101
     256:	8f 5f       	subi	r24, 0xFF	; 255
     258:	91 40       	sbci	r25, 0x01	; 1
     25a:	11 f4       	brne	.+4      	; 0x260 <isFull+0x16>
     25c:	21 e0       	ldi	r18, 0x01	; 1
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	c9 01       	movw	r24, r18
     262:	08 95       	ret

00000264 <isEmpty>:
int isEmpty(){return (currentSize==0);}
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	80 91 00 01 	lds	r24, 0x0100
     26c:	90 91 01 01 	lds	r25, 0x0101
     270:	89 2b       	or	r24, r25
     272:	11 f4       	brne	.+4      	; 0x278 <isEmpty+0x14>
     274:	21 e0       	ldi	r18, 0x01	; 1
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	c9 01       	movw	r24, r18
     27a:	08 95       	ret

0000027c <initButtonHandler>:
volatile short buttonChanged=0;

			
 void initButtonHandler(){
	
	DDRC|=(1<<DDC7);//PIN 7 of PORT C is input
     27c:	a7 9a       	sbi	0x14, 7	; 20
	PORTC|=(1<<PC7);//Enable pull-up of PIN 7 of PORT C
     27e:	af 9a       	sbi	0x15, 7	; 21
	
	TCCR1B|=/*(0<<CS12)|(0<<CS10)|*/(1 << WGM12)|(1<<CS11);// clock, ctc mode
     280:	8e b5       	in	r24, 0x2e	; 46
     282:	8a 60       	ori	r24, 0x0A	; 10
     284:	8e bd       	out	0x2e, r24	; 46
	OCR1A=64000;
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	9a ef       	ldi	r25, 0xFA	; 250
     28a:	9b bd       	out	0x2b, r25	; 43
     28c:	8a bd       	out	0x2a, r24	; 42
	TIMSK|=(1<<OCIE1A);//enable interrupt for output compare	
     28e:	89 b7       	in	r24, 0x39	; 57
     290:	80 61       	ori	r24, 0x10	; 16
     292:	89 bf       	out	0x39, r24	; 57
}
     294:	08 95       	ret

00000296 <__vector_7>:


ISR(TIMER1_COMPA_vect){
     296:	1f 92       	push	r1
     298:	0f 92       	push	r0
     29a:	0f b6       	in	r0, 0x3f	; 63
     29c:	0f 92       	push	r0
     29e:	11 24       	eor	r1, r1
     2a0:	2f 93       	push	r18
     2a2:	3f 93       	push	r19
     2a4:	8f 93       	push	r24
     2a6:	9f 93       	push	r25
	if(!(PINC & (1<<PC7) )){
     2a8:	9f 99       	sbic	0x13, 7	; 19
     2aa:	20 c0       	rjmp	.+64     	; 0x2ec <__vector_7+0x56>
		
		while(!(PINC & (1<<PC7) ));//wait for the button to be released
     2ac:	9f 9b       	sbis	0x13, 7	; 19
     2ae:	fe cf       	rjmp	.-4      	; 0x2ac <__vector_7+0x16>
		if(flag<2){
     2b0:	20 91 60 00 	lds	r18, 0x0060
     2b4:	30 91 61 00 	lds	r19, 0x0061
     2b8:	22 30       	cpi	r18, 0x02	; 2
     2ba:	31 05       	cpc	r19, r1
     2bc:	6c f4       	brge	.+26     	; 0x2d8 <__vector_7+0x42>
			buttonChanged=1;
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	90 93 07 01 	sts	0x0107, r25
     2c6:	80 93 06 01 	sts	0x0106, r24
			flag++;
     2ca:	2f 5f       	subi	r18, 0xFF	; 255
     2cc:	3f 4f       	sbci	r19, 0xFF	; 255
     2ce:	30 93 61 00 	sts	0x0061, r19
     2d2:	20 93 60 00 	sts	0x0060, r18
     2d6:	0a c0       	rjmp	.+20     	; 0x2ec <__vector_7+0x56>
		}else{
			flag=1;
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	90 93 61 00 	sts	0x0061, r25
     2e0:	80 93 60 00 	sts	0x0060, r24
			buttonChanged=1;
     2e4:	90 93 07 01 	sts	0x0107, r25
     2e8:	80 93 06 01 	sts	0x0106, r24
		}
	}			
		
		
     2ec:	9f 91       	pop	r25
     2ee:	8f 91       	pop	r24
     2f0:	3f 91       	pop	r19
     2f2:	2f 91       	pop	r18
     2f4:	0f 90       	pop	r0
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	0f 90       	pop	r0
     2fa:	1f 90       	pop	r1
     2fc:	18 95       	reti

000002fe <main>:
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	90 e9       	ldi	r25, 0x90	; 144
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <main+0x4>
#include <util/delay.h>
//nmea.h is no longer used. instead, nmea_fsm.h will be used
int main(void)
{
	_delay_ms(20);//wait for the LCD to startup before sending commands
	init_HD44780();
     306:	0e 94 a3 01 	call	0x346	; 0x346 <init_HD44780>
	initButtonHandler();
     30a:	0e 94 3e 01 	call	0x27c	; 0x27c <initButtonHandler>
	init_USART();
     30e:	0e 94 bc 09 	call	0x1378	; 0x1378 <init_USART>
	
	write_HD44780_Command(DIS_ON_CUR_OFF_BLNK_OFF);
     312:	8c e0       	ldi	r24, 0x0C	; 12
     314:	0e 94 92 01 	call	0x324	; 0x324 <write_HD44780_Command>
	sei();//Enable global interrupts.
     318:	78 94       	sei
	init_NMEA_FSM();
     31a:	0e 94 33 06 	call	0xc66	; 0xc66 <init_NMEA_FSM>
	return 0;
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	08 95       	ret

00000324 <write_HD44780_Command>:
	_delay_ms(1);
	write_HD44780_Command(DIS_FUNC_SET);
}

void write_HD44780_Command(unsigned char cmd){
	LCD_PORT=0x0;
     324:	18 ba       	out	0x18, r1	; 24
	LCD_PORT|=cmd;
     326:	98 b3       	in	r25, 0x18	; 24
     328:	98 2b       	or	r25, r24
     32a:	98 bb       	out	0x18, r25	; 24
	CLR_RW_PIN;
     32c:	d9 98       	cbi	0x1b, 1	; 27
	CLR_RS_PIN;
     32e:	d8 98       	cbi	0x1b, 0	; 27
	CLR_E_PIN;	
     330:	da 98       	cbi	0x1b, 2	; 27
	SET_E_PIN;
     332:	da 9a       	sbi	0x1b, 2	; 27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	8a 95       	dec	r24
     338:	f1 f7       	brne	.-4      	; 0x336 <write_HD44780_Command+0x12>
	_delay_us(1);// wait
	CLR_E_PIN;
     33a:	da 98       	cbi	0x1b, 2	; 27
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     33c:	83 e3       	ldi	r24, 0x33	; 51
     33e:	97 e0       	ldi	r25, 0x07	; 7
     340:	01 97       	sbiw	r24, 0x01	; 1
     342:	f1 f7       	brne	.-4      	; 0x340 <write_HD44780_Command+0x1c>
	_delay_ms(1);
}
     344:	08 95       	ret

00000346 <init_HD44780>:
#include "hd44780.h"

void init_HD44780(){
     346:	0f 93       	push	r16
     348:	1f 93       	push	r17
	DDRB=0xFF;//All pins output of LCD_PORT
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	87 bb       	out	0x17, r24	; 23
	DDRA=(1<<DDB0)|(1<<DDB1)|(1<<DDB2);
     34e:	87 e0       	ldi	r24, 0x07	; 7
     350:	8a bb       	out	0x1a, r24	; 26
     352:	03 e3       	ldi	r16, 0x33	; 51
     354:	17 e0       	ldi	r17, 0x07	; 7
     356:	c8 01       	movw	r24, r16
     358:	01 97       	sbiw	r24, 0x01	; 1
     35a:	f1 f7       	brne	.-4      	; 0x358 <init_HD44780+0x12>
	
	_delay_ms(1);
	write_HD44780_Command(CLEAR_DISPLAY);
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	0e 94 92 01 	call	0x324	; 0x324 <write_HD44780_Command>
     362:	c8 01       	movw	r24, r16
     364:	01 97       	sbiw	r24, 0x01	; 1
     366:	f1 f7       	brne	.-4      	; 0x364 <init_HD44780+0x1e>
	_delay_ms(1);
	write_HD44780_Command(DIS_ON_CUR_ON_BLNK_ON);
     368:	8f e0       	ldi	r24, 0x0F	; 15
     36a:	0e 94 92 01 	call	0x324	; 0x324 <write_HD44780_Command>
     36e:	c8 01       	movw	r24, r16
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <init_HD44780+0x2a>
	_delay_ms(1);
	write_HD44780_Command(DIS_FUNC_SET);
     374:	88 e3       	ldi	r24, 0x38	; 56
     376:	0e 94 92 01 	call	0x324	; 0x324 <write_HD44780_Command>
}
     37a:	1f 91       	pop	r17
     37c:	0f 91       	pop	r16
     37e:	08 95       	ret

00000380 <write_HD44780_Data>:
	address+=x-1;
	
	write_HD44780_DataAt(address,data);
}

void write_HD44780_Data(char* data){
     380:	fc 01       	movw	r30, r24
	SET_RS_PIN;
     382:	d8 9a       	sbi	0x1b, 0	; 27
	CLR_RW_PIN;
     384:	d9 98       	cbi	0x1b, 1	; 27
	CLR_E_PIN;
     386:	da 98       	cbi	0x1b, 2	; 27
     388:	63 e3       	ldi	r22, 0x33	; 51
     38a:	77 e0       	ldi	r23, 0x07	; 7
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     38c:	32 e0       	ldi	r19, 0x02	; 2
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     38e:	40 e7       	ldi	r20, 0x70	; 112
     390:	51 e0       	ldi	r21, 0x01	; 1
     392:	0e c0       	rjmp	.+28     	; 0x3b0 <write_HD44780_Data+0x30>
     394:	cb 01       	movw	r24, r22
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <write_HD44780_Data+0x16>
	while(*data){
		_delay_ms(1);
		LCD_PORT=0x0;
     39a:	18 ba       	out	0x18, r1	; 24
		LCD_PORT=*data;
     39c:	28 bb       	out	0x18, r18	; 24
		SET_E_PIN;
     39e:	da 9a       	sbi	0x1b, 2	; 27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     3a0:	83 2f       	mov	r24, r19
     3a2:	8a 95       	dec	r24
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <write_HD44780_Data+0x22>
		_delay_us(1);
		CLR_E_PIN;
     3a6:	da 98       	cbi	0x1b, 2	; 27
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3a8:	ca 01       	movw	r24, r20
     3aa:	01 97       	sbiw	r24, 0x01	; 1
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <write_HD44780_Data+0x2a>
		_delay_us(200);
		data++;
     3ae:	31 96       	adiw	r30, 0x01	; 1

void write_HD44780_Data(char* data){
	SET_RS_PIN;
	CLR_RW_PIN;
	CLR_E_PIN;
	while(*data){
     3b0:	20 81       	ld	r18, Z
     3b2:	22 23       	and	r18, r18
     3b4:	79 f7       	brne	.-34     	; 0x394 <write_HD44780_Data+0x14>
		_delay_us(1);
		CLR_E_PIN;
		_delay_us(200);
		data++;
	}
}
     3b6:	08 95       	ret

000003b8 <set_HD44780_DDRAM_Address>:

void set_HD44780_DDRAM_Address(unsigned char address){
	CLR_RS_PIN;//select IR
     3b8:	d8 98       	cbi	0x1b, 0	; 27
	CLR_RW_PIN;//Going to write
     3ba:	d9 98       	cbi	0x1b, 1	; 27
	LCD_PORT=0x0;
     3bc:	18 ba       	out	0x18, r1	; 24
	LCD_PORT|=(1<<7); //|=0b10000000
     3be:	c7 9a       	sbi	0x18, 7	; 24
	//Now set address
	LCD_PORT|=address;
     3c0:	98 b3       	in	r25, 0x18	; 24
     3c2:	98 2b       	or	r25, r24
     3c4:	98 bb       	out	0x18, r25	; 24
	CLR_E_PIN;
     3c6:	da 98       	cbi	0x1b, 2	; 27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     3c8:	84 e0       	ldi	r24, 0x04	; 4
     3ca:	98 2f       	mov	r25, r24
     3cc:	9a 95       	dec	r25
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <set_HD44780_DDRAM_Address+0x14>
	_delay_us(2);
	SET_E_PIN;
     3d0:	da 9a       	sbi	0x1b, 2	; 27
     3d2:	8a 95       	dec	r24
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <set_HD44780_DDRAM_Address+0x1a>
	_delay_us(2);
	CLR_E_PIN;
     3d6:	da 98       	cbi	0x1b, 2	; 27
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3d8:	83 e3       	ldi	r24, 0x33	; 51
     3da:	97 e0       	ldi	r25, 0x07	; 7
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <set_HD44780_DDRAM_Address+0x24>
	_delay_ms(1);

}
     3e0:	08 95       	ret

000003e2 <write_HD44780_DataAt>:
	_delay_us(1);// wait
	CLR_E_PIN;
	_delay_ms(1);
}

void write_HD44780_DataAt(unsigned char address,char* data){
     3e2:	0f 93       	push	r16
     3e4:	1f 93       	push	r17
     3e6:	8b 01       	movw	r16, r22
	set_HD44780_DDRAM_Address(address);
     3e8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <set_HD44780_DDRAM_Address>
	write_HD44780_Data(data);
     3ec:	c8 01       	movw	r24, r16
     3ee:	0e 94 c0 01 	call	0x380	; 0x380 <write_HD44780_Data>
}
     3f2:	1f 91       	pop	r17
     3f4:	0f 91       	pop	r16
     3f6:	08 95       	ret

000003f8 <write_HD44780_DataAtRowCol>:

void write_HD44780_DataAtRowCol(unsigned char y,unsigned char x,char* data){
     3f8:	26 2f       	mov	r18, r22
	unsigned char address=0;
	switch(y){
     3fa:	83 30       	cpi	r24, 0x03	; 3
     3fc:	41 f0       	breq	.+16     	; 0x40e <write_HD44780_DataAtRowCol+0x16>
     3fe:	84 30       	cpi	r24, 0x04	; 4
     400:	41 f0       	breq	.+16     	; 0x412 <write_HD44780_DataAtRowCol+0x1a>
     402:	82 30       	cpi	r24, 0x02	; 2
     404:	11 f4       	brne	.+4      	; 0x40a <write_HD44780_DataAtRowCol+0x12>
     406:	90 e4       	ldi	r25, 0x40	; 64
     408:	05 c0       	rjmp	.+10     	; 0x414 <write_HD44780_DataAtRowCol+0x1c>
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	03 c0       	rjmp	.+6      	; 0x414 <write_HD44780_DataAtRowCol+0x1c>
     40e:	90 e1       	ldi	r25, 0x10	; 16
     410:	01 c0       	rjmp	.+2      	; 0x414 <write_HD44780_DataAtRowCol+0x1c>
		case 2:
			address=0x40;
			break;
		case 3:
			address=0x10;
			break;
     412:	90 e5       	ldi	r25, 0x50	; 80
			break;	
	}

	address+=x-1;
	
	write_HD44780_DataAt(address,data);
     414:	21 50       	subi	r18, 0x01	; 1
     416:	82 2f       	mov	r24, r18
     418:	89 0f       	add	r24, r25
     41a:	ba 01       	movw	r22, r20
     41c:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_HD44780_DataAt>
}
     420:	08 95       	ret

00000422 <clearDisplay>:
	CLR_E_PIN;
	_delay_ms(1);

}

void clearDisplay(short row,short fromCol,short toCol){
     422:	bf 92       	push	r11
     424:	cf 92       	push	r12
     426:	df 92       	push	r13
     428:	ef 92       	push	r14
     42a:	ff 92       	push	r15
     42c:	0f 93       	push	r16
     42e:	1f 93       	push	r17
     430:	df 93       	push	r29
     432:	cf 93       	push	r28
     434:	00 d0       	rcall	.+0      	; 0x436 <clearDisplay+0x14>
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	b8 2e       	mov	r11, r24
     43c:	6a 01       	movw	r12, r20
	char c[]=" ";
     43e:	80 91 62 00 	lds	r24, 0x0062
     442:	90 91 63 00 	lds	r25, 0x0063
     446:	9a 83       	std	Y+2, r25	; 0x02
     448:	89 83       	std	Y+1, r24	; 0x01
     44a:	8b 01       	movw	r16, r22
	for(int j=fromCol;j<=toCol;j++){
		write_HD44780_DataAtRowCol(row,j,c);
     44c:	7e 01       	movw	r14, r28
     44e:	08 94       	sec
     450:	e1 1c       	adc	r14, r1
     452:	f1 1c       	adc	r15, r1
     454:	07 c0       	rjmp	.+14     	; 0x464 <clearDisplay+0x42>
     456:	8b 2d       	mov	r24, r11
     458:	60 2f       	mov	r22, r16
     45a:	a7 01       	movw	r20, r14
     45c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>

}

void clearDisplay(short row,short fromCol,short toCol){
	char c[]=" ";
	for(int j=fromCol;j<=toCol;j++){
     460:	0f 5f       	subi	r16, 0xFF	; 255
     462:	1f 4f       	sbci	r17, 0xFF	; 255
     464:	c0 16       	cp	r12, r16
     466:	d1 06       	cpc	r13, r17
     468:	b4 f7       	brge	.-20     	; 0x456 <clearDisplay+0x34>
		write_HD44780_DataAtRowCol(row,j,c);
		
	}
}
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	cf 91       	pop	r28
     470:	df 91       	pop	r29
     472:	1f 91       	pop	r17
     474:	0f 91       	pop	r16
     476:	ff 90       	pop	r15
     478:	ef 90       	pop	r14
     47a:	df 90       	pop	r13
     47c:	cf 90       	pop	r12
     47e:	bf 90       	pop	r11
     480:	08 95       	ret

00000482 <handleTimeOut>:
		
		current_state=Idle;
}

void handleTimeOut(){
	current_state=Idle;
     482:	10 92 28 01 	sts	0x0128, r1
}
     486:	08 95       	ret

00000488 <clearBuffer>:
	readNextParameter(date,6);
	
}


void clearBuffer(char* buffer,short length){
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     48c:	61 50       	subi	r22, 0x01	; 1
     48e:	70 40       	sbci	r23, 0x00	; 0
		buffer[i]=' ';
     490:	40 e2       	ldi	r20, 0x20	; 32
     492:	06 c0       	rjmp	.+12     	; 0x4a0 <clearBuffer+0x18>
     494:	fc 01       	movw	r30, r24
     496:	e2 0f       	add	r30, r18
     498:	f3 1f       	adc	r31, r19
     49a:	40 83       	st	Z, r20
	
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     49c:	2f 5f       	subi	r18, 0xFF	; 255
     49e:	3f 4f       	sbci	r19, 0xFF	; 255
     4a0:	26 17       	cp	r18, r22
     4a2:	37 07       	cpc	r19, r23
     4a4:	bc f3       	brlt	.-18     	; 0x494 <clearBuffer+0xc>
		buffer[i]=' ';
	}
}
     4a6:	08 95       	ret

000004a8 <makeNullTerminating>:
		if(temp=='\n' &&temp2=='\r')break;// end of sentence
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
     4a8:	fb 01       	movw	r30, r22
	str[length-1]='\0';
     4aa:	e8 0f       	add	r30, r24
     4ac:	f9 1f       	adc	r31, r25
     4ae:	31 97       	sbiw	r30, 0x01	; 1
     4b0:	10 82       	st	Z, r1
}
     4b2:	08 95       	ret

000004b4 <timeadd>:
	lon_min=tempLon-(lon_deg*100);
		
	lon_decimal=(lon_deg+(tempLon-(lon_deg*100))/60.0);
}

int timeadd(int a,int hours,int minutes){
     4b4:	cf 92       	push	r12
     4b6:	df 92       	push	r13
     4b8:	ef 92       	push	r14
     4ba:	ff 92       	push	r15
     4bc:	0f 93       	push	r16
     4be:	1f 93       	push	r17
     4c0:	cf 93       	push	r28
     4c2:	df 93       	push	r29
     4c4:	fc 01       	movw	r30, r24
     4c6:	6b 01       	movw	r12, r22
     4c8:	8a 01       	movw	r16, r20
	int i=0,j=0;//i hours,j minutes
	i=a/100;
     4ca:	64 e6       	ldi	r22, 0x64	; 100
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__divmodhi4>
     4d2:	7b 01       	movw	r14, r22
	j=a-(i*100);
     4d4:	8c e9       	ldi	r24, 0x9C	; 156
     4d6:	9f ef       	ldi	r25, 0xFF	; 255
     4d8:	68 9f       	mul	r22, r24
     4da:	e0 01       	movw	r28, r0
     4dc:	69 9f       	mul	r22, r25
     4de:	d0 0d       	add	r29, r0
     4e0:	78 9f       	mul	r23, r24
     4e2:	d0 0d       	add	r29, r0
     4e4:	11 24       	eor	r1, r1
     4e6:	c0 0f       	add	r28, r16
     4e8:	d1 1f       	adc	r29, r17
	
	j+=minutes;
     4ea:	ce 0f       	add	r28, r30
     4ec:	df 1f       	adc	r29, r31
	if(j>=60){
     4ee:	cc 33       	cpi	r28, 0x3C	; 60
     4f0:	d1 05       	cpc	r29, r1
     4f2:	6c f0       	brlt	.+26     	; 0x50e <timeadd+0x5a>
		i=i+(j/60);
     4f4:	ce 01       	movw	r24, r28
     4f6:	6c e3       	ldi	r22, 0x3C	; 60
     4f8:	70 e0       	ldi	r23, 0x00	; 0
     4fa:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__divmodhi4>
     4fe:	e6 0e       	add	r14, r22
     500:	f7 1e       	adc	r15, r23
		j=(j%60);
     502:	ce 01       	movw	r24, r28
     504:	6c e3       	ldi	r22, 0x3C	; 60
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__divmodhi4>
     50c:	ec 01       	movw	r28, r24
	}
	i+=hours;
     50e:	b7 01       	movw	r22, r14
     510:	6c 0d       	add	r22, r12
     512:	7d 1d       	adc	r23, r13
	if(i>=24)i-=24;
     514:	68 31       	cpi	r22, 0x18	; 24
     516:	71 05       	cpc	r23, r1
     518:	14 f0       	brlt	.+4      	; 0x51e <timeadd+0x6a>
     51a:	68 51       	subi	r22, 0x18	; 24
     51c:	70 40       	sbci	r23, 0x00	; 0
     51e:	84 e6       	ldi	r24, 0x64	; 100
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	68 9f       	mul	r22, r24
     524:	90 01       	movw	r18, r0
     526:	69 9f       	mul	r22, r25
     528:	30 0d       	add	r19, r0
     52a:	78 9f       	mul	r23, r24
     52c:	30 0d       	add	r19, r0
     52e:	11 24       	eor	r1, r1
     530:	2c 0f       	add	r18, r28
     532:	3d 1f       	adc	r19, r29
	
	return (i*100+j);
}
     534:	c9 01       	movw	r24, r18
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	ef 90       	pop	r14
     542:	df 90       	pop	r13
     544:	cf 90       	pop	r12
     546:	08 95       	ret

00000548 <skipNextParameter>:

void skipNextParameter(){
	char temp;
	temp=readFromBuffer();	
	while(temp!=',' && temp!='*'){
		temp=readFromBuffer();
     548:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <readFromBuffer>


void skipNextParameter(){
	char temp;
	temp=readFromBuffer();	
	while(temp!=',' && temp!='*'){
     54c:	8c 32       	cpi	r24, 0x2C	; 44
     54e:	11 f0       	breq	.+4      	; 0x554 <skipNextParameter+0xc>
     550:	8a 32       	cpi	r24, 0x2A	; 42
     552:	d1 f7       	brne	.-12     	; 0x548 <skipNextParameter>
     554:	08 95       	ret

00000556 <readNextParameter>:
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
	}
}

void readNextParameter(char* store,short amount){
     556:	cf 92       	push	r12
     558:	df 92       	push	r13
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	df 93       	push	r29
     564:	cf 93       	push	r28
     566:	0f 92       	push	r0
     568:	cd b7       	in	r28, 0x3d	; 61
     56a:	de b7       	in	r29, 0x3e	; 62
     56c:	8c 01       	movw	r16, r24
     56e:	7b 01       	movw	r14, r22
//$ DR Time : 15 *3D
//$ DATUM : WGS84 *3C
//
	char temp2=' ';
	
	temp=readFromBuffer();
     570:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <readFromBuffer>
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	c9 2e       	mov	r12, r25
     578:	d1 2c       	mov	r13, r1
     57a:	90 e2       	ldi	r25, 0x20	; 32
     57c:	99 83       	std	Y+1, r25	; 0x01
     57e:	17 c0       	rjmp	.+46     	; 0x5ae <readNextParameter+0x58>
	while(temp!=',' && temp!='*'){	
		
		if(temp!='@' && count<=amount){
     580:	80 34       	cpi	r24, 0x40	; 64
     582:	99 f0       	breq	.+38     	; 0x5aa <readNextParameter+0x54>
     584:	ec 14       	cp	r14, r12
     586:	fd 04       	cpc	r15, r13
     588:	34 f0       	brlt	.+12     	; 0x596 <readNextParameter+0x40>
		 *store=temp;//if temp=@, it means that buffer is empty. wait for data.
     58a:	f8 01       	movw	r30, r16
     58c:	81 93       	st	Z+, r24
     58e:	8f 01       	movw	r16, r30
		 store++;
		 count++;
     590:	08 94       	sec
     592:	c1 1c       	adc	r12, r1
     594:	d1 1c       	adc	r13, r1
		}	
		if(temp=='\r')temp2=temp;
     596:	8d 30       	cpi	r24, 0x0D	; 13
     598:	19 f4       	brne	.+6      	; 0x5a0 <readNextParameter+0x4a>
     59a:	fd e0       	ldi	r31, 0x0D	; 13
     59c:	f9 83       	std	Y+1, r31	; 0x01
     59e:	05 c0       	rjmp	.+10     	; 0x5aa <readNextParameter+0x54>
		if(temp=='\n' &&temp2=='\r')break;// end of sentence
     5a0:	8a 30       	cpi	r24, 0x0A	; 10
     5a2:	19 f4       	brne	.+6      	; 0x5aa <readNextParameter+0x54>
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	8d 30       	cpi	r24, 0x0D	; 13
     5a8:	31 f0       	breq	.+12     	; 0x5b6 <readNextParameter+0x60>
		temp=readFromBuffer();		
     5aa:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <readFromBuffer>
//$ DATUM : WGS84 *3C
//
	char temp2=' ';
	
	temp=readFromBuffer();
	while(temp!=',' && temp!='*'){	
     5ae:	8c 32       	cpi	r24, 0x2C	; 44
     5b0:	11 f0       	breq	.+4      	; 0x5b6 <readNextParameter+0x60>
     5b2:	8a 32       	cpi	r24, 0x2A	; 42
     5b4:	29 f7       	brne	.-54     	; 0x580 <readNextParameter+0x2a>
		}	
		if(temp=='\r')temp2=temp;
		if(temp=='\n' &&temp2=='\r')break;// end of sentence
		temp=readFromBuffer();		
	}
}
     5b6:	0f 90       	pop	r0
     5b8:	cf 91       	pop	r28
     5ba:	df 91       	pop	r29
     5bc:	1f 91       	pop	r17
     5be:	0f 91       	pop	r16
     5c0:	ff 90       	pop	r15
     5c2:	ef 90       	pop	r14
     5c4:	df 90       	pop	r13
     5c6:	cf 90       	pop	r12
     5c8:	08 95       	ret

000005ca <retrieveMsgId>:
	while(readFromBuffer()!='$'); //Wait for the $ to come along
	current_state=RetrieveMsgID;//Change the machine state
}

void retrieveMsgId(){
	readNextParameter(msgID,5);
     5ca:	81 e7       	ldi	r24, 0x71	; 113
     5cc:	93 e0       	ldi	r25, 0x03	; 3
     5ce:	65 e0       	ldi	r22, 0x05	; 5
     5d0:	70 e0       	ldi	r23, 0x00	; 0
     5d2:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	current_state=RetrieveSentenceData;
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	80 93 28 01 	sts	0x0128, r24
}
     5dc:	08 95       	ret

000005de <idle>:
		}
	}		
}

void idle(){
	while(readFromBuffer()!='$'); //Wait for the $ to come along
     5de:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <readFromBuffer>
     5e2:	84 32       	cpi	r24, 0x24	; 36
     5e4:	e1 f7       	brne	.-8      	; 0x5de <idle>
	current_state=RetrieveMsgID;//Change the machine state
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	80 93 28 01 	sts	0x0128, r24
}
     5ec:	08 95       	ret

000005ee <utcToLocalTime>:
	if(i>=24)i-=24;
	
	return (i*100+j);
}

void utcToLocalTime(){
     5ee:	df 93       	push	r29
     5f0:	cf 93       	push	r28
     5f2:	00 d0       	rcall	.+0      	; 0x5f4 <utcToLocalTime+0x6>
     5f4:	00 d0       	rcall	.+0      	; 0x5f6 <utcToLocalTime+0x8>
     5f6:	0f 92       	push	r0
     5f8:	cd b7       	in	r28, 0x3d	; 61
     5fa:	de b7       	in	r29, 0x3e	; 62
	char temp[5];
		
	memcpy(temp,utcTime,4);
     5fc:	80 91 49 03 	lds	r24, 0x0349
     600:	90 91 4a 03 	lds	r25, 0x034A
     604:	a0 91 4b 03 	lds	r26, 0x034B
     608:	b0 91 4c 03 	lds	r27, 0x034C
     60c:	89 83       	std	Y+1, r24	; 0x01
     60e:	9a 83       	std	Y+2, r25	; 0x02
     610:	ab 83       	std	Y+3, r26	; 0x03
     612:	bc 83       	std	Y+4, r27	; 0x04
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     614:	1d 82       	std	Y+5, r1	; 0x05
void utcToLocalTime(){
	char temp[5];
		
	memcpy(temp,utcTime,4);
	makeNullTerminating(temp,5);
	int ut=atoi(temp);
     616:	ce 01       	movw	r24, r28
     618:	01 96       	adiw	r24, 0x01	; 1
     61a:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <atoi>
	//5 Hours and 30mins ahead of UTC
	ut=timeadd(ut,5,30);
     61e:	65 e0       	ldi	r22, 0x05	; 5
     620:	70 e0       	ldi	r23, 0x00	; 0
     622:	4e e1       	ldi	r20, 0x1E	; 30
     624:	50 e0       	ldi	r21, 0x00	; 0
     626:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <timeadd>
     62a:	9c 01       	movw	r18, r24
	hour=(ut/100);
     62c:	64 e6       	ldi	r22, 0x64	; 100
     62e:	70 e0       	ldi	r23, 0x00	; 0
     630:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__divmodhi4>
     634:	70 93 55 03 	sts	0x0355, r23
     638:	60 93 54 03 	sts	0x0354, r22
	min=(ut%100);
     63c:	c9 01       	movw	r24, r18
     63e:	64 e6       	ldi	r22, 0x64	; 100
     640:	70 e0       	ldi	r23, 0x00	; 0
     642:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__divmodhi4>
     646:	90 93 6e 03 	sts	0x036E, r25
     64a:	80 93 6d 03 	sts	0x036D, r24
		
	if(ut<1200){
     64e:	20 5b       	subi	r18, 0xB0	; 176
     650:	34 40       	sbci	r19, 0x04	; 4
     652:	1c f4       	brge	.+6      	; 0x65a <utcToLocalTime+0x6c>
		memcpy(time_of_day,"AM",2);
     654:	81 e4       	ldi	r24, 0x41	; 65
     656:	9d e4       	ldi	r25, 0x4D	; 77
     658:	02 c0       	rjmp	.+4      	; 0x65e <utcToLocalTime+0x70>
	}
	else{
		memcpy(time_of_day,"PM",2);
     65a:	80 e5       	ldi	r24, 0x50	; 80
     65c:	9d e4       	ldi	r25, 0x4D	; 77
     65e:	90 93 2c 03 	sts	0x032C, r25
     662:	80 93 2b 03 	sts	0x032B, r24
	}		
		
	if(hour==0)hour=12;
     666:	80 91 54 03 	lds	r24, 0x0354
     66a:	90 91 55 03 	lds	r25, 0x0355
     66e:	00 97       	sbiw	r24, 0x00	; 0
     670:	19 f4       	brne	.+6      	; 0x678 <utcToLocalTime+0x8a>
     672:	8c e0       	ldi	r24, 0x0C	; 12
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	04 c0       	rjmp	.+8      	; 0x680 <utcToLocalTime+0x92>
	else if(hour>12)hour-=12;
     678:	8d 30       	cpi	r24, 0x0D	; 13
     67a:	91 05       	cpc	r25, r1
     67c:	2c f0       	brlt	.+10     	; 0x688 <utcToLocalTime+0x9a>
     67e:	0c 97       	sbiw	r24, 0x0c	; 12
     680:	90 93 55 03 	sts	0x0355, r25
     684:	80 93 54 03 	sts	0x0354, r24
}
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	0f 90       	pop	r0
     692:	cf 91       	pop	r28
     694:	df 91       	pop	r29
     696:	08 95       	ret

00000698 <cookLongitudeCoordinates>:
	lat_min=tempLat-(lat_deg*100);

	lat_decimal=(lat_deg+ (tempLat-(lat_deg*100))/60.0);
}

void cookLongitudeCoordinates(){
     698:	af 92       	push	r10
     69a:	bf 92       	push	r11
     69c:	cf 92       	push	r12
     69e:	df 92       	push	r13
     6a0:	ef 92       	push	r14
     6a2:	ff 92       	push	r15
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
	double tempLon=atof(longitude);
     6a8:	80 e6       	ldi	r24, 0x60	; 96
     6aa:	93 e0       	ldi	r25, 0x03	; 3
     6ac:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     6b0:	5b 01       	movw	r10, r22
     6b2:	6c 01       	movw	r12, r24
	lon_deg=floor(tempLon/100.00);
     6b4:	20 e0       	ldi	r18, 0x00	; 0
     6b6:	30 e0       	ldi	r19, 0x00	; 0
     6b8:	48 ec       	ldi	r20, 0xC8	; 200
     6ba:	52 e4       	ldi	r21, 0x42	; 66
     6bc:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
     6c0:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <floor>
     6c4:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <__fixsfsi>
     6c8:	7b 01       	movw	r14, r22
     6ca:	70 93 09 01 	sts	0x0109, r23
     6ce:	60 93 08 01 	sts	0x0108, r22
	lon_min=tempLon-(lon_deg*100);
     6d2:	84 e6       	ldi	r24, 0x64	; 100
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	e8 9e       	mul	r14, r24
     6d8:	b0 01       	movw	r22, r0
     6da:	e9 9e       	mul	r14, r25
     6dc:	70 0d       	add	r23, r0
     6de:	f8 9e       	mul	r15, r24
     6e0:	70 0d       	add	r23, r0
     6e2:	11 24       	eor	r1, r1
     6e4:	88 27       	eor	r24, r24
     6e6:	77 fd       	sbrc	r23, 7
     6e8:	80 95       	com	r24
     6ea:	98 2f       	mov	r25, r24
     6ec:	0e 94 76 0e 	call	0x1cec	; 0x1cec <__floatsisf>
     6f0:	9b 01       	movw	r18, r22
     6f2:	ac 01       	movw	r20, r24
     6f4:	c6 01       	movw	r24, r12
     6f6:	b5 01       	movw	r22, r10
     6f8:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__subsf3>
     6fc:	5b 01       	movw	r10, r22
     6fe:	6c 01       	movw	r12, r24
     700:	60 93 0a 01 	sts	0x010A, r22
     704:	70 93 0b 01 	sts	0x010B, r23
     708:	80 93 0c 01 	sts	0x010C, r24
     70c:	90 93 0d 01 	sts	0x010D, r25
		
	lon_decimal=(lon_deg+(tempLon-(lon_deg*100))/60.0);
     710:	00 27       	eor	r16, r16
     712:	f7 fc       	sbrc	r15, 7
     714:	00 95       	com	r16
     716:	10 2f       	mov	r17, r16
     718:	c8 01       	movw	r24, r16
     71a:	b7 01       	movw	r22, r14
     71c:	0e 94 76 0e 	call	0x1cec	; 0x1cec <__floatsisf>
     720:	7b 01       	movw	r14, r22
     722:	8c 01       	movw	r16, r24
     724:	c6 01       	movw	r24, r12
     726:	b5 01       	movw	r22, r10
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e7       	ldi	r20, 0x70	; 112
     72e:	52 e4       	ldi	r21, 0x42	; 66
     730:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
     734:	9b 01       	movw	r18, r22
     736:	ac 01       	movw	r20, r24
     738:	c8 01       	movw	r24, r16
     73a:	b7 01       	movw	r22, r14
     73c:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <__addsf3>
     740:	60 93 18 01 	sts	0x0118, r22
     744:	70 93 19 01 	sts	0x0119, r23
     748:	80 93 1a 01 	sts	0x011A, r24
     74c:	90 93 1b 01 	sts	0x011B, r25
}
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	ff 90       	pop	r15
     756:	ef 90       	pop	r14
     758:	df 90       	pop	r13
     75a:	cf 90       	pop	r12
     75c:	bf 90       	pop	r11
     75e:	af 90       	pop	r10
     760:	08 95       	ret

00000762 <cookLattitudeCoordinates>:

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
}

void cookLattitudeCoordinates(){
     762:	af 92       	push	r10
     764:	bf 92       	push	r11
     766:	cf 92       	push	r12
     768:	df 92       	push	r13
     76a:	ef 92       	push	r14
     76c:	ff 92       	push	r15
     76e:	0f 93       	push	r16
     770:	1f 93       	push	r17
	double tempLat=atof(lattitude);
     772:	86 e5       	ldi	r24, 0x56	; 86
     774:	93 e0       	ldi	r25, 0x03	; 3
     776:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     77a:	5b 01       	movw	r10, r22
     77c:	6c 01       	movw	r12, r24
	lat_deg=floor(tempLat/100.00);
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	48 ec       	ldi	r20, 0xC8	; 200
     784:	52 e4       	ldi	r21, 0x42	; 66
     786:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
     78a:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <floor>
     78e:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <__fixsfsi>
     792:	7b 01       	movw	r14, r22
     794:	70 93 0f 01 	sts	0x010F, r23
     798:	60 93 0e 01 	sts	0x010E, r22
	lat_min=tempLat-(lat_deg*100);
     79c:	84 e6       	ldi	r24, 0x64	; 100
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	e8 9e       	mul	r14, r24
     7a2:	b0 01       	movw	r22, r0
     7a4:	e9 9e       	mul	r14, r25
     7a6:	70 0d       	add	r23, r0
     7a8:	f8 9e       	mul	r15, r24
     7aa:	70 0d       	add	r23, r0
     7ac:	11 24       	eor	r1, r1
     7ae:	88 27       	eor	r24, r24
     7b0:	77 fd       	sbrc	r23, 7
     7b2:	80 95       	com	r24
     7b4:	98 2f       	mov	r25, r24
     7b6:	0e 94 76 0e 	call	0x1cec	; 0x1cec <__floatsisf>
     7ba:	9b 01       	movw	r18, r22
     7bc:	ac 01       	movw	r20, r24
     7be:	c6 01       	movw	r24, r12
     7c0:	b5 01       	movw	r22, r10
     7c2:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__subsf3>
     7c6:	5b 01       	movw	r10, r22
     7c8:	6c 01       	movw	r12, r24
     7ca:	60 93 10 01 	sts	0x0110, r22
     7ce:	70 93 11 01 	sts	0x0111, r23
     7d2:	80 93 12 01 	sts	0x0112, r24
     7d6:	90 93 13 01 	sts	0x0113, r25

	lat_decimal=(lat_deg+ (tempLat-(lat_deg*100))/60.0);
     7da:	00 27       	eor	r16, r16
     7dc:	f7 fc       	sbrc	r15, 7
     7de:	00 95       	com	r16
     7e0:	10 2f       	mov	r17, r16
     7e2:	c8 01       	movw	r24, r16
     7e4:	b7 01       	movw	r22, r14
     7e6:	0e 94 76 0e 	call	0x1cec	; 0x1cec <__floatsisf>
     7ea:	7b 01       	movw	r14, r22
     7ec:	8c 01       	movw	r16, r24
     7ee:	c6 01       	movw	r24, r12
     7f0:	b5 01       	movw	r22, r10
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	40 e7       	ldi	r20, 0x70	; 112
     7f8:	52 e4       	ldi	r21, 0x42	; 66
     7fa:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
     7fe:	9b 01       	movw	r18, r22
     800:	ac 01       	movw	r20, r24
     802:	c8 01       	movw	r24, r16
     804:	b7 01       	movw	r22, r14
     806:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <__addsf3>
     80a:	60 93 14 01 	sts	0x0114, r22
     80e:	70 93 15 01 	sts	0x0115, r23
     812:	80 93 16 01 	sts	0x0116, r24
     816:	90 93 17 01 	sts	0x0117, r25
}
     81a:	1f 91       	pop	r17
     81c:	0f 91       	pop	r16
     81e:	ff 90       	pop	r15
     820:	ef 90       	pop	r14
     822:	df 90       	pop	r13
     824:	cf 90       	pop	r12
     826:	bf 90       	pop	r11
     828:	af 90       	pop	r10
     82a:	08 95       	ret

0000082c <processRMC>:
	readNextParameter(geoidSeparationUnit,1);
	readNextParameter(tempBuffer,4);//skip DGPS field
	readNextParameter(tempBuffer,5);//skip DGPS field
}

void processRMC(){
     82c:	ef 92       	push	r14
     82e:	ff 92       	push	r15
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	df 93       	push	r29
     836:	cf 93       	push	r28
     838:	cd b7       	in	r28, 0x3d	; 61
     83a:	de b7       	in	r29, 0x3e	; 62
     83c:	27 97       	sbiw	r28, 0x07	; 7
     83e:	0f b6       	in	r0, 0x3f	; 63
     840:	f8 94       	cli
     842:	de bf       	out	0x3e, r29	; 62
     844:	0f be       	out	0x3f, r0	; 63
     846:	cd bf       	out	0x3d, r28	; 61
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     848:	10 92 53 03 	sts	0x0353, r1
	//$msgID,utcTime,A forFix V for invalid fix,lat,maker,lon,marker,speed,heading,date,
	char temp[3];

	makeNullTerminating(temp,3);
	makeNullTerminating(utcTime,11);
	readNextParameter(utcTime,10);
     84c:	89 e4       	ldi	r24, 0x49	; 73
     84e:	93 e0       	ldi	r25, 0x03	; 3
     850:	6a e0       	ldi	r22, 0x0A	; 10
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     858:	10 92 6c 03 	sts	0x036C, r1
	makeNullTerminating(utcTime,11);
	readNextParameter(utcTime,10);
	
	//Position validity	
	makeNullTerminating(fixMode,2);
	readNextParameter(fixMode,2);
     85c:	8b e6       	ldi	r24, 0x6B	; 107
     85e:	93 e0       	ldi	r25, 0x03	; 3
     860:	62 e0       	ldi	r22, 0x02	; 2
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     868:	10 92 5f 03 	sts	0x035F, r1
	//Position validity	
	makeNullTerminating(fixMode,2);
	readNextParameter(fixMode,2);
		
	makeNullTerminating(lattitude,10);
	readNextParameter(lattitude,9);
     86c:	86 e5       	ldi	r24, 0x56	; 86
     86e:	93 e0       	ldi	r25, 0x03	; 3
     870:	69 e0       	ldi	r22, 0x09	; 9
     872:	70 e0       	ldi	r23, 0x00	; 0
     874:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	cookLattitudeCoordinates();
     878:	0e 94 b1 03 	call	0x762	; 0x762 <cookLattitudeCoordinates>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     87c:	10 92 70 03 	sts	0x0370, r1
	makeNullTerminating(lattitude,10);
	readNextParameter(lattitude,9);
	cookLattitudeCoordinates();
	
	makeNullTerminating(lat_,2);
	readNextParameter(lat_,2);//N,S indicator
     880:	8f e6       	ldi	r24, 0x6F	; 111
     882:	93 e0       	ldi	r25, 0x03	; 3
     884:	62 e0       	ldi	r22, 0x02	; 2
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     88c:	10 92 6a 03 	sts	0x036A, r1
	
	makeNullTerminating(lat_,2);
	readNextParameter(lat_,2);//N,S indicator
		
	makeNullTerminating(longitude,11);
	readNextParameter(longitude,10);
     890:	80 e6       	ldi	r24, 0x60	; 96
     892:	93 e0       	ldi	r25, 0x03	; 3
     894:	6a e0       	ldi	r22, 0x0A	; 10
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	cookLongitudeCoordinates();
     89c:	0e 94 4c 03 	call	0x698	; 0x698 <cookLongitudeCoordinates>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     8a0:	10 92 42 03 	sts	0x0342, r1
	readNextParameter(longitude,10);
	cookLongitudeCoordinates();

	
	makeNullTerminating(lon_,2);
	readNextParameter(lon_,2);// E,W indicator
     8a4:	81 e4       	ldi	r24, 0x41	; 65
     8a6:	93 e0       	ldi	r25, 0x03	; 3
     8a8:	62 e0       	ldi	r22, 0x02	; 2
     8aa:	70 e0       	ldi	r23, 0x00	; 0
     8ac:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
     8b0:	2e e2       	ldi	r18, 0x2E	; 46
     8b2:	e2 2e       	mov	r14, r18
     8b4:	23 e0       	ldi	r18, 0x03	; 3
     8b6:	f2 2e       	mov	r15, r18
     8b8:	f7 01       	movw	r30, r14
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
     8ba:	80 e2       	ldi	r24, 0x20	; 32
     8bc:	81 93       	st	Z+, r24
	
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     8be:	93 e0       	ldi	r25, 0x03	; 3
     8c0:	ec 33       	cpi	r30, 0x3C	; 60
     8c2:	f9 07       	cpc	r31, r25
     8c4:	d9 f7       	brne	.-10     	; 0x8bc <__stack+0x5d>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     8c6:	10 82       	st	Z, r1
	readNextParameter(lon_,2);// E,W indicator
	
	
	clearBuffer(tempBuffer,15);
	makeNullTerminating(tempBuffer,15);
	readNextParameter(tempBuffer,5);
     8c8:	8f 01       	movw	r16, r30
     8ca:	0e 50       	subi	r16, 0x0E	; 14
     8cc:	10 40       	sbci	r17, 0x00	; 0
     8ce:	c8 01       	movw	r24, r16
     8d0:	65 e0       	ldi	r22, 0x05	; 5
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	speed=atof(tempBuffer);
     8d8:	c8 01       	movw	r24, r16
     8da:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     8de:	60 93 24 01 	sts	0x0124, r22
     8e2:	70 93 25 01 	sts	0x0125, r23
     8e6:	80 93 26 01 	sts	0x0126, r24
     8ea:	90 93 27 01 	sts	0x0127, r25
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
     8ee:	80 e2       	ldi	r24, 0x20	; 32
     8f0:	f7 01       	movw	r30, r14
     8f2:	81 93       	st	Z+, r24
     8f4:	7f 01       	movw	r14, r30
	
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     8f6:	fc e3       	ldi	r31, 0x3C	; 60
     8f8:	ef 16       	cp	r14, r31
     8fa:	f3 e0       	ldi	r31, 0x03	; 3
     8fc:	ff 06       	cpc	r15, r31
     8fe:	c1 f7       	brne	.-16     	; 0x8f0 <__stack+0x91>
	makeNullTerminating(tempBuffer,15);
	readNextParameter(tempBuffer,5);
	speed=atof(tempBuffer);
	
	clearBuffer(tempBuffer,15);
	readNextParameter(tempBuffer,5);
     900:	c7 01       	movw	r24, r14
     902:	0e 97       	sbiw	r24, 0x0e	; 14
     904:	65 e0       	ldi	r22, 0x05	; 5
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	course=atof(tempBuffer);
     90c:	c7 01       	movw	r24, r14
     90e:	0e 97       	sbiw	r24, 0x0e	; 14
     910:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     914:	60 93 20 01 	sts	0x0120, r22
     918:	70 93 21 01 	sts	0x0121, r23
     91c:	80 93 22 01 	sts	0x0122, r24
     920:	90 93 23 01 	sts	0x0123, r25
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     924:	1f 82       	std	Y+7, r1	; 0x07
	readNextParameter(tempBuffer,5);
	course=atof(tempBuffer);
	
	char date[7];
	makeNullTerminating(date,7);
	readNextParameter(date,6);
     926:	ce 01       	movw	r24, r28
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	66 e0       	ldi	r22, 0x06	; 6
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	
}
     932:	27 96       	adiw	r28, 0x07	; 7
     934:	0f b6       	in	r0, 0x3f	; 63
     936:	f8 94       	cli
     938:	de bf       	out	0x3e, r29	; 62
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	cd bf       	out	0x3d, r28	; 61
     93e:	cf 91       	pop	r28
     940:	df 91       	pop	r29
     942:	1f 91       	pop	r17
     944:	0f 91       	pop	r16
     946:	ff 90       	pop	r15
     948:	ef 90       	pop	r14
     94a:	08 95       	ret

0000094c <processGGA>:

void handleTimeOut(){
	current_state=Idle;
}

void processGGA(){
     94c:	cf 92       	push	r12
     94e:	df 92       	push	r13
     950:	ef 92       	push	r14
     952:	ff 92       	push	r15
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	df 93       	push	r29
     95a:	cf 93       	push	r28
     95c:	00 d0       	rcall	.+0      	; 0x95e <processGGA+0x12>
     95e:	0f 92       	push	r0
     960:	cd b7       	in	r28, 0x3d	; 61
     962:	de b7       	in	r29, 0x3e	; 62
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     964:	1b 82       	std	Y+3, r1	; 0x03
	//$msgId,utcTime,Lat,marker,Lon,market,fixmode,satsUsed,HDOP,altitude,unit_altitude,geoid_separation,units,DGPSFiled,DGPSField*checksum (*18),<CR><LF>
	char temp[3];
	
	makeNullTerminating(temp,3);
	makeNullTerminating(utcTime,11);
	readNextParameter(utcTime,10);
     966:	10 92 53 03 	sts	0x0353, r1
     96a:	89 e4       	ldi	r24, 0x49	; 73
     96c:	93 e0       	ldi	r25, 0x03	; 3
     96e:	6a e0       	ldi	r22, 0x0A	; 10
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     976:	10 92 5f 03 	sts	0x035F, r1
	makeNullTerminating(temp,3);
	makeNullTerminating(utcTime,11);
	readNextParameter(utcTime,10);
	
	makeNullTerminating(lattitude,10);
	readNextParameter(lattitude,9);
     97a:	86 e5       	ldi	r24, 0x56	; 86
     97c:	93 e0       	ldi	r25, 0x03	; 3
     97e:	69 e0       	ldi	r22, 0x09	; 9
     980:	70 e0       	ldi	r23, 0x00	; 0
     982:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	cookLattitudeCoordinates();
     986:	0e 94 b1 03 	call	0x762	; 0x762 <cookLattitudeCoordinates>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     98a:	10 92 70 03 	sts	0x0370, r1
	makeNullTerminating(lattitude,10);
	readNextParameter(lattitude,9);
	cookLattitudeCoordinates();
	
	makeNullTerminating(lat_,2);
	readNextParameter(lat_,1);//N,S indicator
     98e:	8f e6       	ldi	r24, 0x6F	; 111
     990:	93 e0       	ldi	r25, 0x03	; 3
     992:	61 e0       	ldi	r22, 0x01	; 1
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     99a:	10 92 6a 03 	sts	0x036A, r1
	
	makeNullTerminating(lat_,2);
	readNextParameter(lat_,1);//N,S indicator
		
	makeNullTerminating(longitude,11);
	readNextParameter(longitude,10);
     99e:	80 e6       	ldi	r24, 0x60	; 96
     9a0:	93 e0       	ldi	r25, 0x03	; 3
     9a2:	6a e0       	ldi	r22, 0x0A	; 10
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	cookLongitudeCoordinates();
     9aa:	0e 94 4c 03 	call	0x698	; 0x698 <cookLongitudeCoordinates>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     9ae:	10 92 42 03 	sts	0x0342, r1
	makeNullTerminating(longitude,11);
	readNextParameter(longitude,10);
	cookLongitudeCoordinates();

	makeNullTerminating(lon_,2);
	readNextParameter(lon_,1);// E,W indicator
     9b2:	81 e4       	ldi	r24, 0x41	; 65
     9b4:	93 e0       	ldi	r25, 0x03	; 3
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>

	skipNextParameter();//skip fixmode
     9be:	0e 94 a4 02 	call	0x548	; 0x548 <skipNextParameter>
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
     9c2:	80 e2       	ldi	r24, 0x20	; 32
     9c4:	89 83       	std	Y+1, r24	; 0x01
     9c6:	8a 83       	std	Y+2, r24	; 0x02
	readNextParameter(lon_,1);// E,W indicator

	skipNextParameter();//skip fixmode
	
	clearBuffer(temp,3);
	readNextParameter(temp,2);
     9c8:	8e 01       	movw	r16, r28
     9ca:	0f 5f       	subi	r16, 0xFF	; 255
     9cc:	1f 4f       	sbci	r17, 0xFF	; 255
     9ce:	c8 01       	movw	r24, r16
     9d0:	62 e0       	ldi	r22, 0x02	; 2
     9d2:	70 e0       	ldi	r23, 0x00	; 0
     9d4:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	satsUsed=atoi(temp);
     9d8:	c8 01       	movw	r24, r16
     9da:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <atoi>
     9de:	90 93 1d 01 	sts	0x011D, r25
     9e2:	80 93 1c 01 	sts	0x011C, r24
     9e6:	3e e2       	ldi	r19, 0x2E	; 46
     9e8:	c3 2e       	mov	r12, r19
     9ea:	33 e0       	ldi	r19, 0x03	; 3
     9ec:	d3 2e       	mov	r13, r19
     9ee:	f6 01       	movw	r30, r12
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
     9f0:	80 e2       	ldi	r24, 0x20	; 32
     9f2:	81 93       	st	Z+, r24
	
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     9f4:	93 e0       	ldi	r25, 0x03	; 3
     9f6:	ec 33       	cpi	r30, 0x3C	; 60
     9f8:	f9 07       	cpc	r31, r25
     9fa:	d9 f7       	brne	.-10     	; 0x9f2 <processGGA+0xa6>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     9fc:	10 82       	st	Z, r1
	readNextParameter(temp,2);
	satsUsed=atoi(temp);

	clearBuffer(tempBuffer,15);//ensure that i won't get strange values
	makeNullTerminating(tempBuffer,15);
	readNextParameter(tempBuffer,4); //HDOP
     9fe:	8f 01       	movw	r16, r30
     a00:	0e 50       	subi	r16, 0x0E	; 14
     a02:	10 40       	sbci	r17, 0x00	; 0
     a04:	c8 01       	movw	r24, r16
     a06:	64 e0       	ldi	r22, 0x04	; 4
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	HDOP=atof(tempBuffer);
     a0e:	c8 01       	movw	r24, r16
     a10:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     a14:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <__fixsfsi>
     a18:	70 93 1f 01 	sts	0x011F, r23
     a1c:	60 93 1e 01 	sts	0x011E, r22
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
     a20:	80 e2       	ldi	r24, 0x20	; 32
     a22:	f8 01       	movw	r30, r16
     a24:	81 93       	st	Z+, r24
     a26:	8f 01       	movw	r16, r30
	
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     a28:	f3 e0       	ldi	r31, 0x03	; 3
     a2a:	0c 33       	cpi	r16, 0x3C	; 60
     a2c:	1f 07       	cpc	r17, r31
     a2e:	c9 f7       	brne	.-14     	; 0xa22 <processGGA+0xd6>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     a30:	10 92 3c 03 	sts	0x033C, r1
	readNextParameter(tempBuffer,4); //HDOP
	HDOP=atof(tempBuffer);
	
	clearBuffer(tempBuffer,15);
	makeNullTerminating(tempBuffer,15);
	readNextParameter(tempBuffer,5);
     a34:	c8 01       	movw	r24, r16
     a36:	0e 97       	sbiw	r24, 0x0e	; 14
     a38:	65 e0       	ldi	r22, 0x05	; 5
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	MSL_Altitude=atof(tempBuffer);
     a40:	c8 01       	movw	r24, r16
     a42:	0e 97       	sbiw	r24, 0x0e	; 14
     a44:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     a48:	7b 01       	movw	r14, r22
     a4a:	8c 01       	movw	r16, r24
     a4c:	60 93 3d 03 	sts	0x033D, r22
     a50:	70 93 3e 03 	sts	0x033E, r23
     a54:	80 93 3f 03 	sts	0x033F, r24
     a58:	90 93 40 03 	sts	0x0340, r25
	
	if(MSL_Altitude<0)MSL_Altitude*=-1;
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	50 e0       	ldi	r21, 0x00	; 0
     a64:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__cmpsf2>
     a68:	88 23       	and	r24, r24
     a6a:	5c f4       	brge	.+22     	; 0xa82 <processGGA+0x136>
     a6c:	d8 01       	movw	r26, r16
     a6e:	c7 01       	movw	r24, r14
     a70:	b0 58       	subi	r27, 0x80	; 128
     a72:	80 93 3d 03 	sts	0x033D, r24
     a76:	90 93 3e 03 	sts	0x033E, r25
     a7a:	a0 93 3f 03 	sts	0x033F, r26
     a7e:	b0 93 40 03 	sts	0x0340, r27
	
	readNextParameter(altitudeUnit,1);
     a82:	89 e2       	ldi	r24, 0x29	; 41
     a84:	93 e0       	ldi	r25, 0x03	; 3
     a86:	61 e0       	ldi	r22, 0x01	; 1
     a88:	70 e0       	ldi	r23, 0x00	; 0
     a8a:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
		buffer[i]=' ';
     a8e:	80 e2       	ldi	r24, 0x20	; 32
     a90:	f6 01       	movw	r30, r12
     a92:	81 93       	st	Z+, r24
     a94:	6f 01       	movw	r12, r30
	
}


void clearBuffer(char* buffer,short length){
	for(int i=0;i<length-1;i++){//do not clear the last position. it holds nul
     a96:	fc e3       	ldi	r31, 0x3C	; 60
     a98:	cf 16       	cp	r12, r31
     a9a:	f3 e0       	ldi	r31, 0x03	; 3
     a9c:	df 06       	cpc	r13, r31
     a9e:	c1 f7       	brne	.-16     	; 0xa90 <processGGA+0x144>
	if(MSL_Altitude<0)MSL_Altitude*=-1;
	
	readNextParameter(altitudeUnit,1);
	
	clearBuffer(tempBuffer,15);
	readNextParameter(tempBuffer,4);
     aa0:	c6 01       	movw	r24, r12
     aa2:	0e 97       	sbiw	r24, 0x0e	; 14
     aa4:	64 e0       	ldi	r22, 0x04	; 4
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	geoidSeperation=atof(tempBuffer);
     aac:	c6 01       	movw	r24, r12
     aae:	0e 97       	sbiw	r24, 0x0e	; 14
     ab0:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <atof>
     ab4:	60 93 43 03 	sts	0x0343, r22
     ab8:	70 93 44 03 	sts	0x0344, r23
     abc:	80 93 45 03 	sts	0x0345, r24
     ac0:	90 93 46 03 	sts	0x0346, r25
	
	readNextParameter(geoidSeparationUnit,1);
     ac4:	87 e4       	ldi	r24, 0x47	; 71
     ac6:	93 e0       	ldi	r25, 0x03	; 3
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	readNextParameter(tempBuffer,4);//skip DGPS field
     ad0:	c6 01       	movw	r24, r12
     ad2:	0e 97       	sbiw	r24, 0x0e	; 14
     ad4:	64 e0       	ldi	r22, 0x04	; 4
     ad6:	70 e0       	ldi	r23, 0x00	; 0
     ad8:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
	readNextParameter(tempBuffer,5);//skip DGPS field
     adc:	c6 01       	movw	r24, r12
     ade:	0e 97       	sbiw	r24, 0x0e	; 14
     ae0:	65 e0       	ldi	r22, 0x05	; 5
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	0e 94 ab 02 	call	0x556	; 0x556 <readNextParameter>
}
     ae8:	0f 90       	pop	r0
     aea:	0f 90       	pop	r0
     aec:	0f 90       	pop	r0
     aee:	cf 91       	pop	r28
     af0:	df 91       	pop	r29
     af2:	1f 91       	pop	r17
     af4:	0f 91       	pop	r16
     af6:	ff 90       	pop	r15
     af8:	ef 90       	pop	r14
     afa:	df 90       	pop	r13
     afc:	cf 90       	pop	r12
     afe:	08 95       	ret

00000b00 <displayData>:
	//current_state=DisplayData;
//}

void displayData(){
			
		if(flag==1){
     b00:	80 91 60 00 	lds	r24, 0x0060
     b04:	90 91 61 00 	lds	r25, 0x0061
     b08:	81 30       	cpi	r24, 0x01	; 1
     b0a:	91 05       	cpc	r25, r1
     b0c:	09 f0       	breq	.+2      	; 0xb10 <displayData+0x10>
     b0e:	53 c0       	rjmp	.+166    	; 0xbb6 <displayData+0xb6>
			if(buttonChanged){
     b10:	80 91 06 01 	lds	r24, 0x0106
     b14:	90 91 07 01 	lds	r25, 0x0107
     b18:	89 2b       	or	r24, r25
     b1a:	21 f1       	breq	.+72     	; 0xb64 <displayData+0x64>
				clearDisplay(1,5,16);//Clear lattitude field
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	65 e0       	ldi	r22, 0x05	; 5
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	40 e1       	ldi	r20, 0x10	; 16
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				clearDisplay(2,5,16);//clear longitude field
     b2c:	82 e0       	ldi	r24, 0x02	; 2
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	65 e0       	ldi	r22, 0x05	; 5
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	40 e1       	ldi	r20, 0x10	; 16
     b36:	50 e0       	ldi	r21, 0x00	; 0
     b38:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				clearDisplay(4,1,16);//Clear the last row of the LCD
     b3c:	84 e0       	ldi	r24, 0x04	; 4
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	61 e0       	ldi	r22, 0x01	; 1
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	40 e1       	ldi	r20, 0x10	; 16
     b46:	50 e0       	ldi	r21, 0x00	; 0
     b48:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				clearDisplay(3,1,16);
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	61 e0       	ldi	r22, 0x01	; 1
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	40 e1       	ldi	r20, 0x10	; 16
     b56:	50 e0       	ldi	r21, 0x00	; 0
     b58:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				buttonChanged=0;
     b5c:	10 92 07 01 	sts	0x0107, r1
     b60:	10 92 06 01 	sts	0x0106, r1
			}	
		write_HD44780_DataAtRowCol(3,1,strSpeed);
     b64:	83 e0       	ldi	r24, 0x03	; 3
     b66:	61 e0       	ldi	r22, 0x01	; 1
     b68:	42 ee       	ldi	r20, 0xE2	; 226
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
		write_HD44780_DataAtRowCol(3,12,strFix);
     b70:	83 e0       	ldi	r24, 0x03	; 3
     b72:	6c e0       	ldi	r22, 0x0C	; 12
     b74:	47 ee       	ldi	r20, 0xE7	; 231
     b76:	50 e0       	ldi	r21, 0x00	; 0
     b78:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
		displayDecimalLattitude();
     b7c:	0e 94 e7 07 	call	0xfce	; 0xfce <displayDecimalLattitude>
		displayDecimalLongitude();
     b80:	0e 94 95 07 	call	0xf2a	; 0xf2a <displayDecimalLongitude>
		displayLocalTimeAtColRow(1,4);
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	64 e0       	ldi	r22, 0x04	; 4
     b8a:	70 e0       	ldi	r23, 0x00	; 0
     b8c:	0e 94 0e 09 	call	0x121c	; 0x121c <displayLocalTimeAtColRow>
		displaySatsUsed(9,4);
     b90:	89 e0       	ldi	r24, 0x09	; 9
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	64 e0       	ldi	r22, 0x04	; 4
     b96:	70 e0       	ldi	r23, 0x00	; 0
     b98:	0e 94 50 07 	call	0xea0	; 0xea0 <displaySatsUsed>
		displayFixMode(16,3);
     b9c:	80 e1       	ldi	r24, 0x10	; 16
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	63 e0       	ldi	r22, 0x03	; 3
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	0e 94 e5 08 	call	0x11ca	; 0x11ca <displayFixMode>
		displayVerticalSpeedAtColRow(5,3);
     ba8:	85 e0       	ldi	r24, 0x05	; 5
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	63 e0       	ldi	r22, 0x03	; 3
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	0e 94 50 06 	call	0xca0	; 0xca0 <displayVerticalSpeedAtColRow>
     bb4:	3c c0       	rjmp	.+120    	; 0xc2e <displayData+0x12e>
		}else if(flag==2){
     bb6:	02 97       	sbiw	r24, 0x02	; 2
     bb8:	d1 f5       	brne	.+116    	; 0xc2e <displayData+0x12e>
			if(buttonChanged){
     bba:	80 91 06 01 	lds	r24, 0x0106
     bbe:	90 91 07 01 	lds	r25, 0x0107
     bc2:	89 2b       	or	r24, r25
     bc4:	21 f1       	breq	.+72     	; 0xc0e <displayData+0x10e>
				clearDisplay(1,5,16);//Clear lattitude field
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	65 e0       	ldi	r22, 0x05	; 5
     bcc:	70 e0       	ldi	r23, 0x00	; 0
     bce:	40 e1       	ldi	r20, 0x10	; 16
     bd0:	50 e0       	ldi	r21, 0x00	; 0
     bd2:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				clearDisplay(2,5,16);//clear longitude field
     bd6:	82 e0       	ldi	r24, 0x02	; 2
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	65 e0       	ldi	r22, 0x05	; 5
     bdc:	70 e0       	ldi	r23, 0x00	; 0
     bde:	40 e1       	ldi	r20, 0x10	; 16
     be0:	50 e0       	ldi	r21, 0x00	; 0
     be2:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				clearDisplay(4,1,16);//Clear the last row of the LCD
     be6:	84 e0       	ldi	r24, 0x04	; 4
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	61 e0       	ldi	r22, 0x01	; 1
     bec:	70 e0       	ldi	r23, 0x00	; 0
     bee:	40 e1       	ldi	r20, 0x10	; 16
     bf0:	50 e0       	ldi	r21, 0x00	; 0
     bf2:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				clearDisplay(3,1,16);
     bf6:	83 e0       	ldi	r24, 0x03	; 3
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	61 e0       	ldi	r22, 0x01	; 1
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	40 e1       	ldi	r20, 0x10	; 16
     c00:	50 e0       	ldi	r21, 0x00	; 0
     c02:	0e 94 11 02 	call	0x422	; 0x422 <clearDisplay>
				buttonChanged=0;
     c06:	10 92 07 01 	sts	0x0107, r1
     c0a:	10 92 06 01 	sts	0x0106, r1
			}
			displayLattitudeDegressMinutes();
     c0e:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <displayLattitudeDegressMinutes>
			displayLongitudeDegressMinutes();
     c12:	0e 94 a0 06 	call	0xd40	; 0xd40 <displayLongitudeDegressMinutes>
			displayHeadingAt(1,3);
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	63 e0       	ldi	r22, 0x03	; 3
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	0e 94 8d 08 	call	0x111a	; 0x111a <displayHeadingAt>
			displayAltitudeAt(1,4);
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	64 e0       	ldi	r22, 0x04	; 4
     c28:	70 e0       	ldi	r23, 0x00	; 0
     c2a:	0e 94 39 08 	call	0x1072	; 0x1072 <displayAltitudeAt>
		}	
		
		
		current_state=Idle;
     c2e:	10 92 28 01 	sts	0x0128, r1
}
     c32:	08 95       	ret

00000c34 <retrieveSentenceData>:
	readNextParameter(msgID,5);
	current_state=RetrieveSentenceData;
}

void retrieveSentenceData(){
	if(strcmp(msgID,"GPRMC")==0){//processRMC
     c34:	81 e7       	ldi	r24, 0x71	; 113
     c36:	93 e0       	ldi	r25, 0x03	; 3
     c38:	64 e6       	ldi	r22, 0x64	; 100
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <strcmp>
     c40:	00 97       	sbiw	r24, 0x00	; 0
     c42:	19 f4       	brne	.+6      	; 0xc4a <retrieveSentenceData+0x16>
		processRMC();
     c44:	0e 94 16 04 	call	0x82c	; 0x82c <processRMC>
     c48:	0a c0       	rjmp	.+20     	; 0xc5e <retrieveSentenceData+0x2a>
	}else if(strcmp(msgID,"GPGGA")==0){//processGGA
     c4a:	81 e7       	ldi	r24, 0x71	; 113
     c4c:	93 e0       	ldi	r25, 0x03	; 3
     c4e:	6a e6       	ldi	r22, 0x6A	; 106
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <strcmp>
     c56:	00 97       	sbiw	r24, 0x00	; 0
     c58:	11 f4       	brne	.+4      	; 0xc5e <retrieveSentenceData+0x2a>
		processGGA();
     c5a:	0e 94 a6 04 	call	0x94c	; 0x94c <processGGA>
	}		
	current_state=DisplayData;	
     c5e:	86 e0       	ldi	r24, 0x06	; 6
     c60:	80 93 28 01 	sts	0x0128, r24
}
     c64:	08 95       	ret

00000c66 <init_NMEA_FSM>:
} State;

static State current_state;

void init_NMEA_FSM(){
	current_state=Idle;
     c66:	10 92 28 01 	sts	0x0128, r1
	lcdUI1();
     c6a:	0e 94 a0 09 	call	0x1340	; 0x1340 <lcdUI1>
		temp=readFromBuffer();		
	}
}

void makeNullTerminating(char* str,int length){
	str[length-1]='\0';
     c6e:	10 92 76 03 	sts	0x0376, r1
	current_state=Idle;
	lcdUI1();
	makeNullTerminating(msgID,6);
	
	while(1){
		switch(current_state){
     c72:	80 91 28 01 	lds	r24, 0x0128
     c76:	81 30       	cpi	r24, 0x01	; 1
     c78:	51 f0       	breq	.+20     	; 0xc8e <init_NMEA_FSM+0x28>
     c7a:	81 30       	cpi	r24, 0x01	; 1
     c7c:	28 f0       	brcs	.+10     	; 0xc88 <init_NMEA_FSM+0x22>
     c7e:	82 30       	cpi	r24, 0x02	; 2
     c80:	49 f0       	breq	.+18     	; 0xc94 <init_NMEA_FSM+0x2e>
     c82:	86 30       	cpi	r24, 0x06	; 6
     c84:	c1 f7       	brne	.-16     	; 0xc76 <init_NMEA_FSM+0x10>
     c86:	09 c0       	rjmp	.+18     	; 0xc9a <init_NMEA_FSM+0x34>
			case Idle:
			idle();
     c88:	0e 94 ef 02 	call	0x5de	; 0x5de <idle>
     c8c:	f2 cf       	rjmp	.-28     	; 0xc72 <init_NMEA_FSM+0xc>
			break;
			case RetrieveMsgID:
			retrieveMsgId();
     c8e:	0e 94 e5 02 	call	0x5ca	; 0x5ca <retrieveMsgId>
     c92:	ef cf       	rjmp	.-34     	; 0xc72 <init_NMEA_FSM+0xc>
			break;
			case RetrieveSentenceData:
			retrieveSentenceData();
     c94:	0e 94 1a 06 	call	0xc34	; 0xc34 <retrieveSentenceData>
     c98:	ec cf       	rjmp	.-40     	; 0xc72 <init_NMEA_FSM+0xc>
			//retrieveEndOfSentence();
			break;
			case WaitForNextMessage:
			break;
			case DisplayData:
			displayData();
     c9a:	0e 94 80 05 	call	0xb00	; 0xb00 <displayData>
     c9e:	e9 cf       	rjmp	.-46     	; 0xc72 <init_NMEA_FSM+0xc>

00000ca0 <displayVerticalSpeedAtColRow>:
	
	sprintf(buff,"%2d%c%6.4f'%s",lon_deg,c,lon_min,lon_);
	write_HD44780_DataAtRowCol(2,5,buff);
}

void displayVerticalSpeedAtColRow(short col,short row){
     ca0:	ef 92       	push	r14
     ca2:	ff 92       	push	r15
     ca4:	0f 93       	push	r16
     ca6:	1f 93       	push	r17
     ca8:	df 93       	push	r29
     caa:	cf 93       	push	r28
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	2f 97       	sbiw	r28, 0x0f	; 15
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	f8 94       	cli
     cb6:	de bf       	out	0x3e, r29	; 62
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	e8 2e       	mov	r14, r24
     cbe:	f6 2e       	mov	r15, r22
	char buff[15];
	sprintf(buff,"%.2f",speed);
     cc0:	8d b7       	in	r24, 0x3d	; 61
     cc2:	9e b7       	in	r25, 0x3e	; 62
     cc4:	08 97       	sbiw	r24, 0x08	; 8
     cc6:	0f b6       	in	r0, 0x3f	; 63
     cc8:	f8 94       	cli
     cca:	9e bf       	out	0x3e, r25	; 62
     ccc:	0f be       	out	0x3f, r0	; 63
     cce:	8d bf       	out	0x3d, r24	; 61
     cd0:	ed b7       	in	r30, 0x3d	; 61
     cd2:	fe b7       	in	r31, 0x3e	; 62
     cd4:	31 96       	adiw	r30, 0x01	; 1
     cd6:	8e 01       	movw	r16, r28
     cd8:	0f 5f       	subi	r16, 0xFF	; 255
     cda:	1f 4f       	sbci	r17, 0xFF	; 255
     cdc:	ad b7       	in	r26, 0x3d	; 61
     cde:	be b7       	in	r27, 0x3e	; 62
     ce0:	12 96       	adiw	r26, 0x02	; 2
     ce2:	1c 93       	st	X, r17
     ce4:	0e 93       	st	-X, r16
     ce6:	11 97       	sbiw	r26, 0x01	; 1
     ce8:	80 e7       	ldi	r24, 0x70	; 112
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	93 83       	std	Z+3, r25	; 0x03
     cee:	82 83       	std	Z+2, r24	; 0x02
     cf0:	80 91 24 01 	lds	r24, 0x0124
     cf4:	90 91 25 01 	lds	r25, 0x0125
     cf8:	a0 91 26 01 	lds	r26, 0x0126
     cfc:	b0 91 27 01 	lds	r27, 0x0127
     d00:	84 83       	std	Z+4, r24	; 0x04
     d02:	95 83       	std	Z+5, r25	; 0x05
     d04:	a6 83       	std	Z+6, r26	; 0x06
     d06:	b7 83       	std	Z+7, r27	; 0x07
     d08:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(row,col,buff);
     d0c:	8d b7       	in	r24, 0x3d	; 61
     d0e:	9e b7       	in	r25, 0x3e	; 62
     d10:	08 96       	adiw	r24, 0x08	; 8
     d12:	0f b6       	in	r0, 0x3f	; 63
     d14:	f8 94       	cli
     d16:	9e bf       	out	0x3e, r25	; 62
     d18:	0f be       	out	0x3f, r0	; 63
     d1a:	8d bf       	out	0x3d, r24	; 61
     d1c:	8f 2d       	mov	r24, r15
     d1e:	6e 2d       	mov	r22, r14
     d20:	a8 01       	movw	r20, r16
     d22:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
     d26:	2f 96       	adiw	r28, 0x0f	; 15
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	cf 91       	pop	r28
     d34:	df 91       	pop	r29
     d36:	1f 91       	pop	r17
     d38:	0f 91       	pop	r16
     d3a:	ff 90       	pop	r15
     d3c:	ef 90       	pop	r14
     d3e:	08 95       	ret

00000d40 <displayLongitudeDegressMinutes>:
	char buff[17];	
	sprintf(buff,"%2d%c%6.4f'%s",lat_deg,c,lat_min,lat_);	
	write_HD44780_DataAtRowCol(1,5,buff);
}

void displayLongitudeDegressMinutes(){
     d40:	0f 93       	push	r16
     d42:	1f 93       	push	r17
     d44:	df 93       	push	r29
     d46:	cf 93       	push	r28
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	61 97       	sbiw	r28, 0x11	; 17
     d4e:	0f b6       	in	r0, 0x3f	; 63
     d50:	f8 94       	cli
     d52:	de bf       	out	0x3e, r29	; 62
     d54:	0f be       	out	0x3f, r0	; 63
     d56:	cd bf       	out	0x3d, r28	; 61
	char buff[17];	
	
	sprintf(buff,"%2d%c%6.4f'%s",lon_deg,c,lon_min,lon_);
     d58:	8d b7       	in	r24, 0x3d	; 61
     d5a:	9e b7       	in	r25, 0x3e	; 62
     d5c:	0e 97       	sbiw	r24, 0x0e	; 14
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	f8 94       	cli
     d62:	9e bf       	out	0x3e, r25	; 62
     d64:	0f be       	out	0x3f, r0	; 63
     d66:	8d bf       	out	0x3d, r24	; 61
     d68:	ed b7       	in	r30, 0x3d	; 61
     d6a:	fe b7       	in	r31, 0x3e	; 62
     d6c:	31 96       	adiw	r30, 0x01	; 1
     d6e:	8e 01       	movw	r16, r28
     d70:	0f 5f       	subi	r16, 0xFF	; 255
     d72:	1f 4f       	sbci	r17, 0xFF	; 255
     d74:	ad b7       	in	r26, 0x3d	; 61
     d76:	be b7       	in	r27, 0x3e	; 62
     d78:	12 96       	adiw	r26, 0x02	; 2
     d7a:	1c 93       	st	X, r17
     d7c:	0e 93       	st	-X, r16
     d7e:	11 97       	sbiw	r26, 0x01	; 1
     d80:	85 e7       	ldi	r24, 0x75	; 117
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	93 83       	std	Z+3, r25	; 0x03
     d86:	82 83       	std	Z+2, r24	; 0x02
     d88:	80 91 08 01 	lds	r24, 0x0108
     d8c:	90 91 09 01 	lds	r25, 0x0109
     d90:	95 83       	std	Z+5, r25	; 0x05
     d92:	84 83       	std	Z+4, r24	; 0x04
     d94:	80 91 ec 00 	lds	r24, 0x00EC
     d98:	86 83       	std	Z+6, r24	; 0x06
     d9a:	17 82       	std	Z+7, r1	; 0x07
     d9c:	80 91 0a 01 	lds	r24, 0x010A
     da0:	90 91 0b 01 	lds	r25, 0x010B
     da4:	a0 91 0c 01 	lds	r26, 0x010C
     da8:	b0 91 0d 01 	lds	r27, 0x010D
     dac:	80 87       	std	Z+8, r24	; 0x08
     dae:	91 87       	std	Z+9, r25	; 0x09
     db0:	a2 87       	std	Z+10, r26	; 0x0a
     db2:	b3 87       	std	Z+11, r27	; 0x0b
     db4:	81 e4       	ldi	r24, 0x41	; 65
     db6:	93 e0       	ldi	r25, 0x03	; 3
     db8:	95 87       	std	Z+13, r25	; 0x0d
     dba:	84 87       	std	Z+12, r24	; 0x0c
     dbc:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(2,5,buff);
     dc0:	8d b7       	in	r24, 0x3d	; 61
     dc2:	9e b7       	in	r25, 0x3e	; 62
     dc4:	0e 96       	adiw	r24, 0x0e	; 14
     dc6:	0f b6       	in	r0, 0x3f	; 63
     dc8:	f8 94       	cli
     dca:	9e bf       	out	0x3e, r25	; 62
     dcc:	0f be       	out	0x3f, r0	; 63
     dce:	8d bf       	out	0x3d, r24	; 61
     dd0:	82 e0       	ldi	r24, 0x02	; 2
     dd2:	65 e0       	ldi	r22, 0x05	; 5
     dd4:	a8 01       	movw	r20, r16
     dd6:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
     dda:	61 96       	adiw	r28, 0x11	; 17
     ddc:	0f b6       	in	r0, 0x3f	; 63
     dde:	f8 94       	cli
     de0:	de bf       	out	0x3e, r29	; 62
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	cd bf       	out	0x3d, r28	; 61
     de6:	cf 91       	pop	r28
     de8:	df 91       	pop	r29
     dea:	1f 91       	pop	r17
     dec:	0f 91       	pop	r16
     dee:	08 95       	ret

00000df0 <displayLattitudeDegressMinutes>:
	char buff[7];
	sprintf(buff,"Sats:%d",satsUsed);
	write_HD44780_DataAtRowCol(row,col,buff);
}

void displayLattitudeDegressMinutes(){
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	df 93       	push	r29
     df6:	cf 93       	push	r28
     df8:	cd b7       	in	r28, 0x3d	; 61
     dfa:	de b7       	in	r29, 0x3e	; 62
     dfc:	61 97       	sbiw	r28, 0x11	; 17
     dfe:	0f b6       	in	r0, 0x3f	; 63
     e00:	f8 94       	cli
     e02:	de bf       	out	0x3e, r29	; 62
     e04:	0f be       	out	0x3f, r0	; 63
     e06:	cd bf       	out	0x3d, r28	; 61
	char buff[17];	
	sprintf(buff,"%2d%c%6.4f'%s",lat_deg,c,lat_min,lat_);	
     e08:	8d b7       	in	r24, 0x3d	; 61
     e0a:	9e b7       	in	r25, 0x3e	; 62
     e0c:	0e 97       	sbiw	r24, 0x0e	; 14
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	9e bf       	out	0x3e, r25	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	8d bf       	out	0x3d, r24	; 61
     e18:	ed b7       	in	r30, 0x3d	; 61
     e1a:	fe b7       	in	r31, 0x3e	; 62
     e1c:	31 96       	adiw	r30, 0x01	; 1
     e1e:	8e 01       	movw	r16, r28
     e20:	0f 5f       	subi	r16, 0xFF	; 255
     e22:	1f 4f       	sbci	r17, 0xFF	; 255
     e24:	ad b7       	in	r26, 0x3d	; 61
     e26:	be b7       	in	r27, 0x3e	; 62
     e28:	12 96       	adiw	r26, 0x02	; 2
     e2a:	1c 93       	st	X, r17
     e2c:	0e 93       	st	-X, r16
     e2e:	11 97       	sbiw	r26, 0x01	; 1
     e30:	85 e7       	ldi	r24, 0x75	; 117
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	93 83       	std	Z+3, r25	; 0x03
     e36:	82 83       	std	Z+2, r24	; 0x02
     e38:	80 91 0e 01 	lds	r24, 0x010E
     e3c:	90 91 0f 01 	lds	r25, 0x010F
     e40:	95 83       	std	Z+5, r25	; 0x05
     e42:	84 83       	std	Z+4, r24	; 0x04
     e44:	80 91 ec 00 	lds	r24, 0x00EC
     e48:	86 83       	std	Z+6, r24	; 0x06
     e4a:	17 82       	std	Z+7, r1	; 0x07
     e4c:	80 91 10 01 	lds	r24, 0x0110
     e50:	90 91 11 01 	lds	r25, 0x0111
     e54:	a0 91 12 01 	lds	r26, 0x0112
     e58:	b0 91 13 01 	lds	r27, 0x0113
     e5c:	80 87       	std	Z+8, r24	; 0x08
     e5e:	91 87       	std	Z+9, r25	; 0x09
     e60:	a2 87       	std	Z+10, r26	; 0x0a
     e62:	b3 87       	std	Z+11, r27	; 0x0b
     e64:	8f e6       	ldi	r24, 0x6F	; 111
     e66:	93 e0       	ldi	r25, 0x03	; 3
     e68:	95 87       	std	Z+13, r25	; 0x0d
     e6a:	84 87       	std	Z+12, r24	; 0x0c
     e6c:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(1,5,buff);
     e70:	8d b7       	in	r24, 0x3d	; 61
     e72:	9e b7       	in	r25, 0x3e	; 62
     e74:	0e 96       	adiw	r24, 0x0e	; 14
     e76:	0f b6       	in	r0, 0x3f	; 63
     e78:	f8 94       	cli
     e7a:	9e bf       	out	0x3e, r25	; 62
     e7c:	0f be       	out	0x3f, r0	; 63
     e7e:	8d bf       	out	0x3d, r24	; 61
     e80:	81 e0       	ldi	r24, 0x01	; 1
     e82:	65 e0       	ldi	r22, 0x05	; 5
     e84:	a8 01       	movw	r20, r16
     e86:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
     e8a:	61 96       	adiw	r28, 0x11	; 17
     e8c:	0f b6       	in	r0, 0x3f	; 63
     e8e:	f8 94       	cli
     e90:	de bf       	out	0x3e, r29	; 62
     e92:	0f be       	out	0x3f, r0	; 63
     e94:	cd bf       	out	0x3d, r28	; 61
     e96:	cf 91       	pop	r28
     e98:	df 91       	pop	r29
     e9a:	1f 91       	pop	r17
     e9c:	0f 91       	pop	r16
     e9e:	08 95       	ret

00000ea0 <displaySatsUsed>:
	else sprintf(buff,"N");
				
	write_HD44780_DataAtRowCol(row,col,buff);
}

void displaySatsUsed(short col,short row){
     ea0:	ef 92       	push	r14
     ea2:	ff 92       	push	r15
     ea4:	0f 93       	push	r16
     ea6:	1f 93       	push	r17
     ea8:	df 93       	push	r29
     eaa:	cf 93       	push	r28
     eac:	cd b7       	in	r28, 0x3d	; 61
     eae:	de b7       	in	r29, 0x3e	; 62
     eb0:	27 97       	sbiw	r28, 0x07	; 7
     eb2:	0f b6       	in	r0, 0x3f	; 63
     eb4:	f8 94       	cli
     eb6:	de bf       	out	0x3e, r29	; 62
     eb8:	0f be       	out	0x3f, r0	; 63
     eba:	cd bf       	out	0x3d, r28	; 61
     ebc:	e8 2e       	mov	r14, r24
     ebe:	f6 2e       	mov	r15, r22
	char buff[7];
	sprintf(buff,"Sats:%d",satsUsed);
     ec0:	00 d0       	rcall	.+0      	; 0xec2 <displaySatsUsed+0x22>
     ec2:	00 d0       	rcall	.+0      	; 0xec4 <displaySatsUsed+0x24>
     ec4:	00 d0       	rcall	.+0      	; 0xec6 <displaySatsUsed+0x26>
     ec6:	ed b7       	in	r30, 0x3d	; 61
     ec8:	fe b7       	in	r31, 0x3e	; 62
     eca:	31 96       	adiw	r30, 0x01	; 1
     ecc:	8e 01       	movw	r16, r28
     ece:	0f 5f       	subi	r16, 0xFF	; 255
     ed0:	1f 4f       	sbci	r17, 0xFF	; 255
     ed2:	ad b7       	in	r26, 0x3d	; 61
     ed4:	be b7       	in	r27, 0x3e	; 62
     ed6:	12 96       	adiw	r26, 0x02	; 2
     ed8:	1c 93       	st	X, r17
     eda:	0e 93       	st	-X, r16
     edc:	11 97       	sbiw	r26, 0x01	; 1
     ede:	83 e8       	ldi	r24, 0x83	; 131
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	93 83       	std	Z+3, r25	; 0x03
     ee4:	82 83       	std	Z+2, r24	; 0x02
     ee6:	80 91 1c 01 	lds	r24, 0x011C
     eea:	90 91 1d 01 	lds	r25, 0x011D
     eee:	95 83       	std	Z+5, r25	; 0x05
     ef0:	84 83       	std	Z+4, r24	; 0x04
     ef2:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(row,col,buff);
     ef6:	8d b7       	in	r24, 0x3d	; 61
     ef8:	9e b7       	in	r25, 0x3e	; 62
     efa:	06 96       	adiw	r24, 0x06	; 6
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	9e bf       	out	0x3e, r25	; 62
     f02:	0f be       	out	0x3f, r0	; 63
     f04:	8d bf       	out	0x3d, r24	; 61
     f06:	8f 2d       	mov	r24, r15
     f08:	6e 2d       	mov	r22, r14
     f0a:	a8 01       	movw	r20, r16
     f0c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
     f10:	27 96       	adiw	r28, 0x07	; 7
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	de bf       	out	0x3e, r29	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	cd bf       	out	0x3d, r28	; 61
     f1c:	cf 91       	pop	r28
     f1e:	df 91       	pop	r29
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	ff 90       	pop	r15
     f26:	ef 90       	pop	r14
     f28:	08 95       	ret

00000f2a <displayDecimalLongitude>:
	char buff[12];	
	sprintf(buff,"%9.7f%c%s",lat_decimal,c,lat_);	
	write_HD44780_DataAtRowCol(1,5,buff);
}

void displayDecimalLongitude(){
     f2a:	0f 93       	push	r16
     f2c:	1f 93       	push	r17
     f2e:	df 93       	push	r29
     f30:	cf 93       	push	r28
     f32:	cd b7       	in	r28, 0x3d	; 61
     f34:	de b7       	in	r29, 0x3e	; 62
     f36:	2c 97       	sbiw	r28, 0x0c	; 12
     f38:	0f b6       	in	r0, 0x3f	; 63
     f3a:	f8 94       	cli
     f3c:	de bf       	out	0x3e, r29	; 62
     f3e:	0f be       	out	0x3f, r0	; 63
     f40:	cd bf       	out	0x3d, r28	; 61
	char buff[12];	
	sprintf(buff,"%9.7f%c%s",lon_decimal,c,lon_);	
     f42:	8d b7       	in	r24, 0x3d	; 61
     f44:	9e b7       	in	r25, 0x3e	; 62
     f46:	0c 97       	sbiw	r24, 0x0c	; 12
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	f8 94       	cli
     f4c:	9e bf       	out	0x3e, r25	; 62
     f4e:	0f be       	out	0x3f, r0	; 63
     f50:	8d bf       	out	0x3d, r24	; 61
     f52:	ed b7       	in	r30, 0x3d	; 61
     f54:	fe b7       	in	r31, 0x3e	; 62
     f56:	31 96       	adiw	r30, 0x01	; 1
     f58:	8e 01       	movw	r16, r28
     f5a:	0f 5f       	subi	r16, 0xFF	; 255
     f5c:	1f 4f       	sbci	r17, 0xFF	; 255
     f5e:	ad b7       	in	r26, 0x3d	; 61
     f60:	be b7       	in	r27, 0x3e	; 62
     f62:	12 96       	adiw	r26, 0x02	; 2
     f64:	1c 93       	st	X, r17
     f66:	0e 93       	st	-X, r16
     f68:	11 97       	sbiw	r26, 0x01	; 1
     f6a:	8b e8       	ldi	r24, 0x8B	; 139
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	93 83       	std	Z+3, r25	; 0x03
     f70:	82 83       	std	Z+2, r24	; 0x02
     f72:	80 91 18 01 	lds	r24, 0x0118
     f76:	90 91 19 01 	lds	r25, 0x0119
     f7a:	a0 91 1a 01 	lds	r26, 0x011A
     f7e:	b0 91 1b 01 	lds	r27, 0x011B
     f82:	84 83       	std	Z+4, r24	; 0x04
     f84:	95 83       	std	Z+5, r25	; 0x05
     f86:	a6 83       	std	Z+6, r26	; 0x06
     f88:	b7 83       	std	Z+7, r27	; 0x07
     f8a:	80 91 ec 00 	lds	r24, 0x00EC
     f8e:	80 87       	std	Z+8, r24	; 0x08
     f90:	11 86       	std	Z+9, r1	; 0x09
     f92:	81 e4       	ldi	r24, 0x41	; 65
     f94:	93 e0       	ldi	r25, 0x03	; 3
     f96:	93 87       	std	Z+11, r25	; 0x0b
     f98:	82 87       	std	Z+10, r24	; 0x0a
     f9a:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(2,5,buff);
     f9e:	8d b7       	in	r24, 0x3d	; 61
     fa0:	9e b7       	in	r25, 0x3e	; 62
     fa2:	0c 96       	adiw	r24, 0x0c	; 12
     fa4:	0f b6       	in	r0, 0x3f	; 63
     fa6:	f8 94       	cli
     fa8:	9e bf       	out	0x3e, r25	; 62
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	8d bf       	out	0x3d, r24	; 61
     fae:	82 e0       	ldi	r24, 0x02	; 2
     fb0:	65 e0       	ldi	r22, 0x05	; 5
     fb2:	a8 01       	movw	r20, r16
     fb4:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
     fb8:	2c 96       	adiw	r28, 0x0c	; 12
     fba:	0f b6       	in	r0, 0x3f	; 63
     fbc:	f8 94       	cli
     fbe:	de bf       	out	0x3e, r29	; 62
     fc0:	0f be       	out	0x3f, r0	; 63
     fc2:	cd bf       	out	0x3d, r28	; 61
     fc4:	cf 91       	pop	r28
     fc6:	df 91       	pop	r29
     fc8:	1f 91       	pop	r17
     fca:	0f 91       	pop	r16
     fcc:	08 95       	ret

00000fce <displayDecimalLattitude>:
			sprintf(buff,"%d:%d%s",hour,min,time_of_day);
		}							
		write_HD44780_DataAtRowCol(row,col,buff);		
}

void displayDecimalLattitude(){
     fce:	0f 93       	push	r16
     fd0:	1f 93       	push	r17
     fd2:	df 93       	push	r29
     fd4:	cf 93       	push	r28
     fd6:	cd b7       	in	r28, 0x3d	; 61
     fd8:	de b7       	in	r29, 0x3e	; 62
     fda:	2c 97       	sbiw	r28, 0x0c	; 12
     fdc:	0f b6       	in	r0, 0x3f	; 63
     fde:	f8 94       	cli
     fe0:	de bf       	out	0x3e, r29	; 62
     fe2:	0f be       	out	0x3f, r0	; 63
     fe4:	cd bf       	out	0x3d, r28	; 61
	char buff[12];	
	sprintf(buff,"%9.7f%c%s",lat_decimal,c,lat_);	
     fe6:	8d b7       	in	r24, 0x3d	; 61
     fe8:	9e b7       	in	r25, 0x3e	; 62
     fea:	0c 97       	sbiw	r24, 0x0c	; 12
     fec:	0f b6       	in	r0, 0x3f	; 63
     fee:	f8 94       	cli
     ff0:	9e bf       	out	0x3e, r25	; 62
     ff2:	0f be       	out	0x3f, r0	; 63
     ff4:	8d bf       	out	0x3d, r24	; 61
     ff6:	ed b7       	in	r30, 0x3d	; 61
     ff8:	fe b7       	in	r31, 0x3e	; 62
     ffa:	31 96       	adiw	r30, 0x01	; 1
     ffc:	8e 01       	movw	r16, r28
     ffe:	0f 5f       	subi	r16, 0xFF	; 255
    1000:	1f 4f       	sbci	r17, 0xFF	; 255
    1002:	ad b7       	in	r26, 0x3d	; 61
    1004:	be b7       	in	r27, 0x3e	; 62
    1006:	12 96       	adiw	r26, 0x02	; 2
    1008:	1c 93       	st	X, r17
    100a:	0e 93       	st	-X, r16
    100c:	11 97       	sbiw	r26, 0x01	; 1
    100e:	8b e8       	ldi	r24, 0x8B	; 139
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	93 83       	std	Z+3, r25	; 0x03
    1014:	82 83       	std	Z+2, r24	; 0x02
    1016:	80 91 14 01 	lds	r24, 0x0114
    101a:	90 91 15 01 	lds	r25, 0x0115
    101e:	a0 91 16 01 	lds	r26, 0x0116
    1022:	b0 91 17 01 	lds	r27, 0x0117
    1026:	84 83       	std	Z+4, r24	; 0x04
    1028:	95 83       	std	Z+5, r25	; 0x05
    102a:	a6 83       	std	Z+6, r26	; 0x06
    102c:	b7 83       	std	Z+7, r27	; 0x07
    102e:	80 91 ec 00 	lds	r24, 0x00EC
    1032:	80 87       	std	Z+8, r24	; 0x08
    1034:	11 86       	std	Z+9, r1	; 0x09
    1036:	8f e6       	ldi	r24, 0x6F	; 111
    1038:	93 e0       	ldi	r25, 0x03	; 3
    103a:	93 87       	std	Z+11, r25	; 0x0b
    103c:	82 87       	std	Z+10, r24	; 0x0a
    103e:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(1,5,buff);
    1042:	8d b7       	in	r24, 0x3d	; 61
    1044:	9e b7       	in	r25, 0x3e	; 62
    1046:	0c 96       	adiw	r24, 0x0c	; 12
    1048:	0f b6       	in	r0, 0x3f	; 63
    104a:	f8 94       	cli
    104c:	9e bf       	out	0x3e, r25	; 62
    104e:	0f be       	out	0x3f, r0	; 63
    1050:	8d bf       	out	0x3d, r24	; 61
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	65 e0       	ldi	r22, 0x05	; 5
    1056:	a8 01       	movw	r20, r16
    1058:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
    105c:	2c 96       	adiw	r28, 0x0c	; 12
    105e:	0f b6       	in	r0, 0x3f	; 63
    1060:	f8 94       	cli
    1062:	de bf       	out	0x3e, r29	; 62
    1064:	0f be       	out	0x3f, r0	; 63
    1066:	cd bf       	out	0x3d, r28	; 61
    1068:	cf 91       	pop	r28
    106a:	df 91       	pop	r29
    106c:	1f 91       	pop	r17
    106e:	0f 91       	pop	r16
    1070:	08 95       	ret

00001072 <displayAltitudeAt>:
	char buff[10];
	sprintf(buff,"%s%4.1f%c",strCourse,course,c);
	write_HD44780_DataAtRowCol(row,col,buff);
}

void displayAltitudeAt(short col, short row){
    1072:	ef 92       	push	r14
    1074:	ff 92       	push	r15
    1076:	0f 93       	push	r16
    1078:	1f 93       	push	r17
    107a:	df 93       	push	r29
    107c:	cf 93       	push	r28
    107e:	cd b7       	in	r28, 0x3d	; 61
    1080:	de b7       	in	r29, 0x3e	; 62
    1082:	2a 97       	sbiw	r28, 0x0a	; 10
    1084:	0f b6       	in	r0, 0x3f	; 63
    1086:	f8 94       	cli
    1088:	de bf       	out	0x3e, r29	; 62
    108a:	0f be       	out	0x3f, r0	; 63
    108c:	cd bf       	out	0x3d, r28	; 61
    108e:	e8 2e       	mov	r14, r24
    1090:	f6 2e       	mov	r15, r22
	char buff[10];
	sprintf(buff,"%s%4.1fm",strAltitude,MSL_Altitude);
    1092:	8d b7       	in	r24, 0x3d	; 61
    1094:	9e b7       	in	r25, 0x3e	; 62
    1096:	0a 97       	sbiw	r24, 0x0a	; 10
    1098:	0f b6       	in	r0, 0x3f	; 63
    109a:	f8 94       	cli
    109c:	9e bf       	out	0x3e, r25	; 62
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	8d bf       	out	0x3d, r24	; 61
    10a2:	ed b7       	in	r30, 0x3d	; 61
    10a4:	fe b7       	in	r31, 0x3e	; 62
    10a6:	31 96       	adiw	r30, 0x01	; 1
    10a8:	8e 01       	movw	r16, r28
    10aa:	0f 5f       	subi	r16, 0xFF	; 255
    10ac:	1f 4f       	sbci	r17, 0xFF	; 255
    10ae:	ad b7       	in	r26, 0x3d	; 61
    10b0:	be b7       	in	r27, 0x3e	; 62
    10b2:	12 96       	adiw	r26, 0x02	; 2
    10b4:	1c 93       	st	X, r17
    10b6:	0e 93       	st	-X, r16
    10b8:	11 97       	sbiw	r26, 0x01	; 1
    10ba:	85 e9       	ldi	r24, 0x95	; 149
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	93 83       	std	Z+3, r25	; 0x03
    10c0:	82 83       	std	Z+2, r24	; 0x02
    10c2:	86 ef       	ldi	r24, 0xF6	; 246
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	95 83       	std	Z+5, r25	; 0x05
    10c8:	84 83       	std	Z+4, r24	; 0x04
    10ca:	80 91 3d 03 	lds	r24, 0x033D
    10ce:	90 91 3e 03 	lds	r25, 0x033E
    10d2:	a0 91 3f 03 	lds	r26, 0x033F
    10d6:	b0 91 40 03 	lds	r27, 0x0340
    10da:	86 83       	std	Z+6, r24	; 0x06
    10dc:	97 83       	std	Z+7, r25	; 0x07
    10de:	a0 87       	std	Z+8, r26	; 0x08
    10e0:	b1 87       	std	Z+9, r27	; 0x09
    10e2:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(row,col,buff);
    10e6:	8d b7       	in	r24, 0x3d	; 61
    10e8:	9e b7       	in	r25, 0x3e	; 62
    10ea:	0a 96       	adiw	r24, 0x0a	; 10
    10ec:	0f b6       	in	r0, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	9e bf       	out	0x3e, r25	; 62
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	8d bf       	out	0x3d, r24	; 61
    10f6:	8f 2d       	mov	r24, r15
    10f8:	6e 2d       	mov	r22, r14
    10fa:	a8 01       	movw	r20, r16
    10fc:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
    1100:	2a 96       	adiw	r28, 0x0a	; 10
    1102:	0f b6       	in	r0, 0x3f	; 63
    1104:	f8 94       	cli
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	0f be       	out	0x3f, r0	; 63
    110a:	cd bf       	out	0x3d, r28	; 61
    110c:	cf 91       	pop	r28
    110e:	df 91       	pop	r29
    1110:	1f 91       	pop	r17
    1112:	0f 91       	pop	r16
    1114:	ff 90       	pop	r15
    1116:	ef 90       	pop	r14
    1118:	08 95       	ret

0000111a <displayHeadingAt>:
	write_HD44780_DataAtRowCol(3,1,strSpeed);
	write_HD44780_DataAtRowCol(3,12,strFix);
	//write_HD44780_DataAtRowCol(4,1,strCourse);
}

void displayHeadingAt(short col,short row){
    111a:	ef 92       	push	r14
    111c:	ff 92       	push	r15
    111e:	0f 93       	push	r16
    1120:	1f 93       	push	r17
    1122:	df 93       	push	r29
    1124:	cf 93       	push	r28
    1126:	cd b7       	in	r28, 0x3d	; 61
    1128:	de b7       	in	r29, 0x3e	; 62
    112a:	2a 97       	sbiw	r28, 0x0a	; 10
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	e8 2e       	mov	r14, r24
    1138:	f6 2e       	mov	r15, r22
	char buff[10];
	sprintf(buff,"%s%4.1f%c",strCourse,course,c);
    113a:	8d b7       	in	r24, 0x3d	; 61
    113c:	9e b7       	in	r25, 0x3e	; 62
    113e:	0c 97       	sbiw	r24, 0x0c	; 12
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	9e bf       	out	0x3e, r25	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	8d bf       	out	0x3d, r24	; 61
    114a:	ed b7       	in	r30, 0x3d	; 61
    114c:	fe b7       	in	r31, 0x3e	; 62
    114e:	31 96       	adiw	r30, 0x01	; 1
    1150:	8e 01       	movw	r16, r28
    1152:	0f 5f       	subi	r16, 0xFF	; 255
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	ad b7       	in	r26, 0x3d	; 61
    1158:	be b7       	in	r27, 0x3e	; 62
    115a:	12 96       	adiw	r26, 0x02	; 2
    115c:	1c 93       	st	X, r17
    115e:	0e 93       	st	-X, r16
    1160:	11 97       	sbiw	r26, 0x01	; 1
    1162:	8e e9       	ldi	r24, 0x9E	; 158
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	93 83       	std	Z+3, r25	; 0x03
    1168:	82 83       	std	Z+2, r24	; 0x02
    116a:	8d ee       	ldi	r24, 0xED	; 237
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	95 83       	std	Z+5, r25	; 0x05
    1170:	84 83       	std	Z+4, r24	; 0x04
    1172:	80 91 20 01 	lds	r24, 0x0120
    1176:	90 91 21 01 	lds	r25, 0x0121
    117a:	a0 91 22 01 	lds	r26, 0x0122
    117e:	b0 91 23 01 	lds	r27, 0x0123
    1182:	86 83       	std	Z+6, r24	; 0x06
    1184:	97 83       	std	Z+7, r25	; 0x07
    1186:	a0 87       	std	Z+8, r26	; 0x08
    1188:	b1 87       	std	Z+9, r27	; 0x09
    118a:	80 91 ec 00 	lds	r24, 0x00EC
    118e:	82 87       	std	Z+10, r24	; 0x0a
    1190:	13 86       	std	Z+11, r1	; 0x0b
    1192:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
	write_HD44780_DataAtRowCol(row,col,buff);
    1196:	8d b7       	in	r24, 0x3d	; 61
    1198:	9e b7       	in	r25, 0x3e	; 62
    119a:	0c 96       	adiw	r24, 0x0c	; 12
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	9e bf       	out	0x3e, r25	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	8d bf       	out	0x3d, r24	; 61
    11a6:	8f 2d       	mov	r24, r15
    11a8:	6e 2d       	mov	r22, r14
    11aa:	a8 01       	movw	r20, r16
    11ac:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
    11b0:	2a 96       	adiw	r28, 0x0a	; 10
    11b2:	0f b6       	in	r0, 0x3f	; 63
    11b4:	f8 94       	cli
    11b6:	de bf       	out	0x3e, r29	; 62
    11b8:	0f be       	out	0x3f, r0	; 63
    11ba:	cd bf       	out	0x3d, r28	; 61
    11bc:	cf 91       	pop	r28
    11be:	df 91       	pop	r29
    11c0:	1f 91       	pop	r17
    11c2:	0f 91       	pop	r16
    11c4:	ff 90       	pop	r15
    11c6:	ef 90       	pop	r14
    11c8:	08 95       	ret

000011ca <displayFixMode>:
	char buff[12];	
	sprintf(buff,"%9.7f%c%s",lon_decimal,c,lon_);	
	write_HD44780_DataAtRowCol(2,5,buff);
}

void displayFixMode(short col,short row){
    11ca:	0f 93       	push	r16
    11cc:	1f 93       	push	r17
    11ce:	df 93       	push	r29
    11d0:	cf 93       	push	r28
    11d2:	00 d0       	rcall	.+0      	; 0x11d4 <displayFixMode+0xa>
    11d4:	cd b7       	in	r28, 0x3d	; 61
    11d6:	de b7       	in	r29, 0x3e	; 62
    11d8:	08 2f       	mov	r16, r24
    11da:	16 2f       	mov	r17, r22
	char buff[2];
		
	if(!strcmp(fixMode,"A"))sprintf(buff,"Y");
    11dc:	8b e6       	ldi	r24, 0x6B	; 107
    11de:	93 e0       	ldi	r25, 0x03	; 3
    11e0:	68 ea       	ldi	r22, 0xA8	; 168
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <strcmp>
    11e8:	9c 01       	movw	r18, r24
    11ea:	ce 01       	movw	r24, r28
    11ec:	01 96       	adiw	r24, 0x01	; 1
    11ee:	23 2b       	or	r18, r19
    11f0:	19 f4       	brne	.+6      	; 0x11f8 <displayFixMode+0x2e>
    11f2:	6a ea       	ldi	r22, 0xAA	; 170
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <displayFixMode+0x32>
	else sprintf(buff,"N");
    11f8:	6c ea       	ldi	r22, 0xAC	; 172
    11fa:	70 e0       	ldi	r23, 0x00	; 0
    11fc:	0e 94 e5 10 	call	0x21ca	; 0x21ca <strcpy>
				
	write_HD44780_DataAtRowCol(row,col,buff);
    1200:	81 2f       	mov	r24, r17
    1202:	60 2f       	mov	r22, r16
    1204:	ae 01       	movw	r20, r28
    1206:	4f 5f       	subi	r20, 0xFF	; 255
    1208:	5f 4f       	sbci	r21, 0xFF	; 255
    120a:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
    120e:	0f 90       	pop	r0
    1210:	0f 90       	pop	r0
    1212:	cf 91       	pop	r28
    1214:	df 91       	pop	r29
    1216:	1f 91       	pop	r17
    1218:	0f 91       	pop	r16
    121a:	08 95       	ret

0000121c <displayLocalTimeAtColRow>:
	char buff[10];
	sprintf(buff,"%s%4.1fm",strAltitude,MSL_Altitude);
	write_HD44780_DataAtRowCol(row,col,buff);
}

void displayLocalTimeAtColRow(short col,short row){
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	df 93       	push	r29
    1222:	cf 93       	push	r28
    1224:	00 d0       	rcall	.+0      	; 0x1226 <displayLocalTimeAtColRow+0xa>
    1226:	00 d0       	rcall	.+0      	; 0x1228 <displayLocalTimeAtColRow+0xc>
    1228:	00 d0       	rcall	.+0      	; 0x122a <displayLocalTimeAtColRow+0xe>
    122a:	cd b7       	in	r28, 0x3d	; 61
    122c:	de b7       	in	r29, 0x3e	; 62
    122e:	08 2f       	mov	r16, r24
    1230:	16 2f       	mov	r17, r22
		utcToLocalTime();
    1232:	0e 94 f7 02 	call	0x5ee	; 0x5ee <utcToLocalTime>
		char buff[6];
		buff[5]='\0';
    1236:	1e 82       	std	Y+6, r1	; 0x06
		
		if(hour<10 && min<10){
    1238:	40 91 54 03 	lds	r20, 0x0354
    123c:	50 91 55 03 	lds	r21, 0x0355
    1240:	20 91 6d 03 	lds	r18, 0x036D
    1244:	30 91 6e 03 	lds	r19, 0x036E
    1248:	4a 30       	cpi	r20, 0x0A	; 10
    124a:	51 05       	cpc	r21, r1
    124c:	5c f5       	brge	.+86     	; 0x12a4 <displayLocalTimeAtColRow+0x88>
    124e:	ce 01       	movw	r24, r28
    1250:	01 96       	adiw	r24, 0x01	; 1
    1252:	6b e2       	ldi	r22, 0x2B	; 43
    1254:	73 e0       	ldi	r23, 0x03	; 3
    1256:	2a 30       	cpi	r18, 0x0A	; 10
    1258:	31 05       	cpc	r19, r1
    125a:	94 f4       	brge	.+36     	; 0x1280 <displayLocalTimeAtColRow+0x64>
			sprintf(buff,"0%d:0%d%s",hour,min,time_of_day);
    125c:	ad b7       	in	r26, 0x3d	; 61
    125e:	be b7       	in	r27, 0x3e	; 62
    1260:	1a 97       	sbiw	r26, 0x0a	; 10
    1262:	0f b6       	in	r0, 0x3f	; 63
    1264:	f8 94       	cli
    1266:	be bf       	out	0x3e, r27	; 62
    1268:	0f be       	out	0x3f, r0	; 63
    126a:	ad bf       	out	0x3d, r26	; 61
    126c:	ed b7       	in	r30, 0x3d	; 61
    126e:	fe b7       	in	r31, 0x3e	; 62
    1270:	31 96       	adiw	r30, 0x01	; 1
    1272:	12 96       	adiw	r26, 0x02	; 2
    1274:	9c 93       	st	X, r25
    1276:	8e 93       	st	-X, r24
    1278:	11 97       	sbiw	r26, 0x01	; 1
    127a:	8e ea       	ldi	r24, 0xAE	; 174
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	3c c0       	rjmp	.+120    	; 0x12f8 <displayLocalTimeAtColRow+0xdc>
		}else if(hour<10){
			sprintf(buff,"0%d:%d%s",hour,min,time_of_day);
    1280:	ad b7       	in	r26, 0x3d	; 61
    1282:	be b7       	in	r27, 0x3e	; 62
    1284:	1a 97       	sbiw	r26, 0x0a	; 10
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	be bf       	out	0x3e, r27	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	ad bf       	out	0x3d, r26	; 61
    1290:	ed b7       	in	r30, 0x3d	; 61
    1292:	fe b7       	in	r31, 0x3e	; 62
    1294:	31 96       	adiw	r30, 0x01	; 1
    1296:	12 96       	adiw	r26, 0x02	; 2
    1298:	9c 93       	st	X, r25
    129a:	8e 93       	st	-X, r24
    129c:	11 97       	sbiw	r26, 0x01	; 1
    129e:	88 eb       	ldi	r24, 0xB8	; 184
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	2a c0       	rjmp	.+84     	; 0x12f8 <displayLocalTimeAtColRow+0xdc>
    12a4:	ce 01       	movw	r24, r28
    12a6:	01 96       	adiw	r24, 0x01	; 1
    12a8:	6b e2       	ldi	r22, 0x2B	; 43
    12aa:	73 e0       	ldi	r23, 0x03	; 3
		}else if(min<10){
    12ac:	2a 30       	cpi	r18, 0x0A	; 10
    12ae:	31 05       	cpc	r19, r1
    12b0:	94 f4       	brge	.+36     	; 0x12d6 <displayLocalTimeAtColRow+0xba>
			sprintf(buff,"%d:0%d%s",hour,min,time_of_day);
    12b2:	ad b7       	in	r26, 0x3d	; 61
    12b4:	be b7       	in	r27, 0x3e	; 62
    12b6:	1a 97       	sbiw	r26, 0x0a	; 10
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	f8 94       	cli
    12bc:	be bf       	out	0x3e, r27	; 62
    12be:	0f be       	out	0x3f, r0	; 63
    12c0:	ad bf       	out	0x3d, r26	; 61
    12c2:	ed b7       	in	r30, 0x3d	; 61
    12c4:	fe b7       	in	r31, 0x3e	; 62
    12c6:	31 96       	adiw	r30, 0x01	; 1
    12c8:	12 96       	adiw	r26, 0x02	; 2
    12ca:	9c 93       	st	X, r25
    12cc:	8e 93       	st	-X, r24
    12ce:	11 97       	sbiw	r26, 0x01	; 1
    12d0:	81 ec       	ldi	r24, 0xC1	; 193
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	11 c0       	rjmp	.+34     	; 0x12f8 <displayLocalTimeAtColRow+0xdc>
		}else{
			sprintf(buff,"%d:%d%s",hour,min,time_of_day);
    12d6:	ad b7       	in	r26, 0x3d	; 61
    12d8:	be b7       	in	r27, 0x3e	; 62
    12da:	1a 97       	sbiw	r26, 0x0a	; 10
    12dc:	0f b6       	in	r0, 0x3f	; 63
    12de:	f8 94       	cli
    12e0:	be bf       	out	0x3e, r27	; 62
    12e2:	0f be       	out	0x3f, r0	; 63
    12e4:	ad bf       	out	0x3d, r26	; 61
    12e6:	ed b7       	in	r30, 0x3d	; 61
    12e8:	fe b7       	in	r31, 0x3e	; 62
    12ea:	31 96       	adiw	r30, 0x01	; 1
    12ec:	12 96       	adiw	r26, 0x02	; 2
    12ee:	9c 93       	st	X, r25
    12f0:	8e 93       	st	-X, r24
    12f2:	11 97       	sbiw	r26, 0x01	; 1
    12f4:	8a ec       	ldi	r24, 0xCA	; 202
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	93 83       	std	Z+3, r25	; 0x03
    12fa:	82 83       	std	Z+2, r24	; 0x02
    12fc:	55 83       	std	Z+5, r21	; 0x05
    12fe:	44 83       	std	Z+4, r20	; 0x04
    1300:	37 83       	std	Z+7, r19	; 0x07
    1302:	26 83       	std	Z+6, r18	; 0x06
    1304:	71 87       	std	Z+9, r23	; 0x09
    1306:	60 87       	std	Z+8, r22	; 0x08
    1308:	0e 94 2b 11 	call	0x2256	; 0x2256 <sprintf>
    130c:	ed b7       	in	r30, 0x3d	; 61
    130e:	fe b7       	in	r31, 0x3e	; 62
    1310:	3a 96       	adiw	r30, 0x0a	; 10
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	fe bf       	out	0x3e, r31	; 62
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	ed bf       	out	0x3d, r30	; 61
		}							
		write_HD44780_DataAtRowCol(row,col,buff);		
    131c:	81 2f       	mov	r24, r17
    131e:	60 2f       	mov	r22, r16
    1320:	ae 01       	movw	r20, r28
    1322:	4f 5f       	subi	r20, 0xFF	; 255
    1324:	5f 4f       	sbci	r21, 0xFF	; 255
    1326:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
}
    132a:	26 96       	adiw	r28, 0x06	; 6
    132c:	0f b6       	in	r0, 0x3f	; 63
    132e:	f8 94       	cli
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	0f be       	out	0x3f, r0	; 63
    1334:	cd bf       	out	0x3d, r28	; 61
    1336:	cf 91       	pop	r28
    1338:	df 91       	pop	r29
    133a:	1f 91       	pop	r17
    133c:	0f 91       	pop	r16
    133e:	08 95       	ret

00001340 <lcdUI1>:
char c=(char)223;
char strCourse[] ="Heading:";
char strAltitude[] ="Altitude:";

void lcdUI1(){// Degree Minutes Seconds view
	write_HD44780_Command(CLEAR_DISPLAY);
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	0e 94 92 01 	call	0x324	; 0x324 <write_HD44780_Command>
	write_HD44780_DataAtRowCol(1,1,strLat);//start printing value at 5th column
    1346:	81 e0       	ldi	r24, 0x01	; 1
    1348:	61 e0       	ldi	r22, 0x01	; 1
    134a:	42 ed       	ldi	r20, 0xD2	; 210
    134c:	50 e0       	ldi	r21, 0x00	; 0
    134e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
	write_HD44780_DataAtRowCol(2,1,strLon);//value should be at 5th column
    1352:	82 e0       	ldi	r24, 0x02	; 2
    1354:	61 e0       	ldi	r22, 0x01	; 1
    1356:	47 ed       	ldi	r20, 0xD7	; 215
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
	write_HD44780_DataAtRowCol(3,1,strSpeed);
    135e:	83 e0       	ldi	r24, 0x03	; 3
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	42 ee       	ldi	r20, 0xE2	; 226
    1364:	50 e0       	ldi	r21, 0x00	; 0
    1366:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
	write_HD44780_DataAtRowCol(3,12,strFix);
    136a:	83 e0       	ldi	r24, 0x03	; 3
    136c:	6c e0       	ldi	r22, 0x0C	; 12
    136e:	47 ee       	ldi	r20, 0xE7	; 231
    1370:	50 e0       	ldi	r21, 0x00	; 0
    1372:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <write_HD44780_DataAtRowCol>
	//write_HD44780_DataAtRowCol(4,1,strCourse);
}
    1376:	08 95       	ret

00001378 <init_USART>:

#define F_CPU 7372800UL
#define USART_BAUDRATE 4800
#define BAUD_PRESCALE (((F_CPU / (USART_BAUDRATE * 16UL))) - 1)
void init_USART(){
	UBRRH = (BAUD_PRESCALE >> 8);
    1378:	10 bc       	out	0x20, r1	; 32
	UBRRL = BAUD_PRESCALE; 
    137a:	8f e5       	ldi	r24, 0x5F	; 95
    137c:	89 b9       	out	0x09, r24	; 9

	
	UCSRB |= (1 << RXEN) | (1<<RXCIE);   // Turn on the reception
    137e:	8a b1       	in	r24, 0x0a	; 10
    1380:	80 69       	ori	r24, 0x90	; 144
    1382:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1); // Use 8-bit character sizes 
    1384:	80 b5       	in	r24, 0x20	; 32
    1386:	86 68       	ori	r24, 0x86	; 134
    1388:	80 bd       	out	0x20, r24	; 32
}
    138a:	08 95       	ret

0000138c <__vector_13>:

ISR(USART_RXC_vect){
    138c:	1f 92       	push	r1
    138e:	0f 92       	push	r0
    1390:	0f b6       	in	r0, 0x3f	; 63
    1392:	0f 92       	push	r0
    1394:	11 24       	eor	r1, r1
    1396:	2f 93       	push	r18
    1398:	3f 93       	push	r19
    139a:	4f 93       	push	r20
    139c:	5f 93       	push	r21
    139e:	6f 93       	push	r22
    13a0:	7f 93       	push	r23
    13a2:	8f 93       	push	r24
    13a4:	9f 93       	push	r25
    13a6:	af 93       	push	r26
    13a8:	bf 93       	push	r27
    13aa:	ef 93       	push	r30
    13ac:	ff 93       	push	r31
//copy data into buffer
writeToBuffer(UDR);
    13ae:	8c b1       	in	r24, 0x0c	; 12
    13b0:	0e 94 07 01 	call	0x20e	; 0x20e <writeToBuffer>
}
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0f be       	out	0x3f, r0	; 63
    13d0:	0f 90       	pop	r0
    13d2:	1f 90       	pop	r1
    13d4:	18 95       	reti

000013d6 <vfprintf>:
    13d6:	a1 e1       	ldi	r26, 0x11	; 17
    13d8:	b0 e0       	ldi	r27, 0x00	; 0
    13da:	e1 ef       	ldi	r30, 0xF1	; 241
    13dc:	f9 e0       	ldi	r31, 0x09	; 9
    13de:	0c 94 8c 0f 	jmp	0x1f18	; 0x1f18 <__prologue_saves__>
    13e2:	3c 01       	movw	r6, r24
    13e4:	7f 87       	std	Y+15, r23	; 0x0f
    13e6:	6e 87       	std	Y+14, r22	; 0x0e
    13e8:	6a 01       	movw	r12, r20
    13ea:	fc 01       	movw	r30, r24
    13ec:	17 82       	std	Z+7, r1	; 0x07
    13ee:	16 82       	std	Z+6, r1	; 0x06
    13f0:	83 81       	ldd	r24, Z+3	; 0x03
    13f2:	81 fd       	sbrc	r24, 1
    13f4:	03 c0       	rjmp	.+6      	; 0x13fc <vfprintf+0x26>
    13f6:	6f ef       	ldi	r22, 0xFF	; 255
    13f8:	7f ef       	ldi	r23, 0xFF	; 255
    13fa:	6f c3       	rjmp	.+1758   	; 0x1ada <vfprintf+0x704>
    13fc:	9e 01       	movw	r18, r28
    13fe:	2f 5f       	subi	r18, 0xFF	; 255
    1400:	3f 4f       	sbci	r19, 0xFF	; 255
    1402:	39 8b       	std	Y+17, r19	; 0x11
    1404:	28 8b       	std	Y+16, r18	; 0x10
    1406:	f3 01       	movw	r30, r6
    1408:	23 81       	ldd	r18, Z+3	; 0x03
    140a:	ee 85       	ldd	r30, Y+14	; 0x0e
    140c:	ff 85       	ldd	r31, Y+15	; 0x0f
    140e:	23 fd       	sbrc	r18, 3
    1410:	85 91       	lpm	r24, Z+
    1412:	23 ff       	sbrs	r18, 3
    1414:	81 91       	ld	r24, Z+
    1416:	ff 87       	std	Y+15, r31	; 0x0f
    1418:	ee 87       	std	Y+14, r30	; 0x0e
    141a:	88 23       	and	r24, r24
    141c:	09 f4       	brne	.+2      	; 0x1420 <vfprintf+0x4a>
    141e:	5a c3       	rjmp	.+1716   	; 0x1ad4 <vfprintf+0x6fe>
    1420:	85 32       	cpi	r24, 0x25	; 37
    1422:	51 f4       	brne	.+20     	; 0x1438 <vfprintf+0x62>
    1424:	ee 85       	ldd	r30, Y+14	; 0x0e
    1426:	ff 85       	ldd	r31, Y+15	; 0x0f
    1428:	23 fd       	sbrc	r18, 3
    142a:	85 91       	lpm	r24, Z+
    142c:	23 ff       	sbrs	r18, 3
    142e:	81 91       	ld	r24, Z+
    1430:	ff 87       	std	Y+15, r31	; 0x0f
    1432:	ee 87       	std	Y+14, r30	; 0x0e
    1434:	85 32       	cpi	r24, 0x25	; 37
    1436:	29 f4       	brne	.+10     	; 0x1442 <vfprintf+0x6c>
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	b3 01       	movw	r22, r6
    143c:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1440:	e2 cf       	rjmp	.-60     	; 0x1406 <vfprintf+0x30>
    1442:	98 2f       	mov	r25, r24
    1444:	10 e0       	ldi	r17, 0x00	; 0
    1446:	88 24       	eor	r8, r8
    1448:	99 24       	eor	r9, r9
    144a:	10 32       	cpi	r17, 0x20	; 32
    144c:	b0 f4       	brcc	.+44     	; 0x147a <vfprintf+0xa4>
    144e:	9b 32       	cpi	r25, 0x2B	; 43
    1450:	69 f0       	breq	.+26     	; 0x146c <vfprintf+0x96>
    1452:	9c 32       	cpi	r25, 0x2C	; 44
    1454:	28 f4       	brcc	.+10     	; 0x1460 <vfprintf+0x8a>
    1456:	90 32       	cpi	r25, 0x20	; 32
    1458:	51 f0       	breq	.+20     	; 0x146e <vfprintf+0x98>
    145a:	93 32       	cpi	r25, 0x23	; 35
    145c:	71 f4       	brne	.+28     	; 0x147a <vfprintf+0xa4>
    145e:	0b c0       	rjmp	.+22     	; 0x1476 <vfprintf+0xa0>
    1460:	9d 32       	cpi	r25, 0x2D	; 45
    1462:	39 f0       	breq	.+14     	; 0x1472 <vfprintf+0x9c>
    1464:	90 33       	cpi	r25, 0x30	; 48
    1466:	49 f4       	brne	.+18     	; 0x147a <vfprintf+0xa4>
    1468:	11 60       	ori	r17, 0x01	; 1
    146a:	28 c0       	rjmp	.+80     	; 0x14bc <vfprintf+0xe6>
    146c:	12 60       	ori	r17, 0x02	; 2
    146e:	14 60       	ori	r17, 0x04	; 4
    1470:	25 c0       	rjmp	.+74     	; 0x14bc <vfprintf+0xe6>
    1472:	18 60       	ori	r17, 0x08	; 8
    1474:	23 c0       	rjmp	.+70     	; 0x14bc <vfprintf+0xe6>
    1476:	10 61       	ori	r17, 0x10	; 16
    1478:	21 c0       	rjmp	.+66     	; 0x14bc <vfprintf+0xe6>
    147a:	17 fd       	sbrc	r17, 7
    147c:	2a c0       	rjmp	.+84     	; 0x14d2 <vfprintf+0xfc>
    147e:	89 2f       	mov	r24, r25
    1480:	80 53       	subi	r24, 0x30	; 48
    1482:	8a 30       	cpi	r24, 0x0A	; 10
    1484:	78 f4       	brcc	.+30     	; 0x14a4 <vfprintf+0xce>
    1486:	16 ff       	sbrs	r17, 6
    1488:	06 c0       	rjmp	.+12     	; 0x1496 <vfprintf+0xc0>
    148a:	fa e0       	ldi	r31, 0x0A	; 10
    148c:	9f 9e       	mul	r9, r31
    148e:	90 2c       	mov	r9, r0
    1490:	11 24       	eor	r1, r1
    1492:	98 0e       	add	r9, r24
    1494:	13 c0       	rjmp	.+38     	; 0x14bc <vfprintf+0xe6>
    1496:	3a e0       	ldi	r19, 0x0A	; 10
    1498:	83 9e       	mul	r8, r19
    149a:	80 2c       	mov	r8, r0
    149c:	11 24       	eor	r1, r1
    149e:	88 0e       	add	r8, r24
    14a0:	10 62       	ori	r17, 0x20	; 32
    14a2:	0c c0       	rjmp	.+24     	; 0x14bc <vfprintf+0xe6>
    14a4:	9e 32       	cpi	r25, 0x2E	; 46
    14a6:	21 f4       	brne	.+8      	; 0x14b0 <vfprintf+0xda>
    14a8:	16 fd       	sbrc	r17, 6
    14aa:	14 c3       	rjmp	.+1576   	; 0x1ad4 <vfprintf+0x6fe>
    14ac:	10 64       	ori	r17, 0x40	; 64
    14ae:	06 c0       	rjmp	.+12     	; 0x14bc <vfprintf+0xe6>
    14b0:	9c 36       	cpi	r25, 0x6C	; 108
    14b2:	11 f4       	brne	.+4      	; 0x14b8 <vfprintf+0xe2>
    14b4:	10 68       	ori	r17, 0x80	; 128
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <vfprintf+0xe6>
    14b8:	98 36       	cpi	r25, 0x68	; 104
    14ba:	59 f4       	brne	.+22     	; 0x14d2 <vfprintf+0xfc>
    14bc:	ee 85       	ldd	r30, Y+14	; 0x0e
    14be:	ff 85       	ldd	r31, Y+15	; 0x0f
    14c0:	23 fd       	sbrc	r18, 3
    14c2:	95 91       	lpm	r25, Z+
    14c4:	23 ff       	sbrs	r18, 3
    14c6:	91 91       	ld	r25, Z+
    14c8:	ff 87       	std	Y+15, r31	; 0x0f
    14ca:	ee 87       	std	Y+14, r30	; 0x0e
    14cc:	99 23       	and	r25, r25
    14ce:	09 f0       	breq	.+2      	; 0x14d2 <vfprintf+0xfc>
    14d0:	bc cf       	rjmp	.-136    	; 0x144a <vfprintf+0x74>
    14d2:	89 2f       	mov	r24, r25
    14d4:	85 54       	subi	r24, 0x45	; 69
    14d6:	83 30       	cpi	r24, 0x03	; 3
    14d8:	20 f4       	brcc	.+8      	; 0x14e2 <vfprintf+0x10c>
    14da:	81 2f       	mov	r24, r17
    14dc:	80 61       	ori	r24, 0x10	; 16
    14de:	90 5e       	subi	r25, 0xE0	; 224
    14e0:	07 c0       	rjmp	.+14     	; 0x14f0 <vfprintf+0x11a>
    14e2:	89 2f       	mov	r24, r25
    14e4:	85 56       	subi	r24, 0x65	; 101
    14e6:	83 30       	cpi	r24, 0x03	; 3
    14e8:	08 f0       	brcs	.+2      	; 0x14ec <vfprintf+0x116>
    14ea:	9f c1       	rjmp	.+830    	; 0x182a <vfprintf+0x454>
    14ec:	81 2f       	mov	r24, r17
    14ee:	8f 7e       	andi	r24, 0xEF	; 239
    14f0:	86 fd       	sbrc	r24, 6
    14f2:	02 c0       	rjmp	.+4      	; 0x14f8 <vfprintf+0x122>
    14f4:	76 e0       	ldi	r23, 0x06	; 6
    14f6:	97 2e       	mov	r9, r23
    14f8:	6f e3       	ldi	r22, 0x3F	; 63
    14fa:	f6 2e       	mov	r15, r22
    14fc:	f8 22       	and	r15, r24
    14fe:	95 36       	cpi	r25, 0x65	; 101
    1500:	19 f4       	brne	.+6      	; 0x1508 <vfprintf+0x132>
    1502:	f0 e4       	ldi	r31, 0x40	; 64
    1504:	ff 2a       	or	r15, r31
    1506:	07 c0       	rjmp	.+14     	; 0x1516 <vfprintf+0x140>
    1508:	96 36       	cpi	r25, 0x66	; 102
    150a:	19 f4       	brne	.+6      	; 0x1512 <vfprintf+0x13c>
    150c:	20 e8       	ldi	r18, 0x80	; 128
    150e:	f2 2a       	or	r15, r18
    1510:	02 c0       	rjmp	.+4      	; 0x1516 <vfprintf+0x140>
    1512:	91 10       	cpse	r9, r1
    1514:	9a 94       	dec	r9
    1516:	f7 fe       	sbrs	r15, 7
    1518:	0a c0       	rjmp	.+20     	; 0x152e <vfprintf+0x158>
    151a:	3b e3       	ldi	r19, 0x3B	; 59
    151c:	39 15       	cp	r19, r9
    151e:	18 f4       	brcc	.+6      	; 0x1526 <vfprintf+0x150>
    1520:	5c e3       	ldi	r21, 0x3C	; 60
    1522:	b5 2e       	mov	r11, r21
    1524:	02 c0       	rjmp	.+4      	; 0x152a <vfprintf+0x154>
    1526:	b9 2c       	mov	r11, r9
    1528:	b3 94       	inc	r11
    152a:	27 e0       	ldi	r18, 0x07	; 7
    152c:	09 c0       	rjmp	.+18     	; 0x1540 <vfprintf+0x16a>
    152e:	47 e0       	ldi	r20, 0x07	; 7
    1530:	49 15       	cp	r20, r9
    1532:	20 f4       	brcc	.+8      	; 0x153c <vfprintf+0x166>
    1534:	bb 24       	eor	r11, r11
    1536:	47 e0       	ldi	r20, 0x07	; 7
    1538:	94 2e       	mov	r9, r20
    153a:	f7 cf       	rjmp	.-18     	; 0x152a <vfprintf+0x154>
    153c:	29 2d       	mov	r18, r9
    153e:	bb 24       	eor	r11, r11
    1540:	c6 01       	movw	r24, r12
    1542:	04 96       	adiw	r24, 0x04	; 4
    1544:	9d 87       	std	Y+13, r25	; 0x0d
    1546:	8c 87       	std	Y+12, r24	; 0x0c
    1548:	f6 01       	movw	r30, r12
    154a:	60 81       	ld	r22, Z
    154c:	71 81       	ldd	r23, Z+1	; 0x01
    154e:	82 81       	ldd	r24, Z+2	; 0x02
    1550:	93 81       	ldd	r25, Z+3	; 0x03
    1552:	ae 01       	movw	r20, r28
    1554:	4f 5f       	subi	r20, 0xFF	; 255
    1556:	5f 4f       	sbci	r21, 0xFF	; 255
    1558:	0b 2d       	mov	r16, r11
    155a:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__ftoa_engine>
    155e:	6c 01       	movw	r12, r24
    1560:	09 81       	ldd	r16, Y+1	; 0x01
    1562:	20 2e       	mov	r2, r16
    1564:	33 24       	eor	r3, r3
    1566:	00 ff       	sbrs	r16, 0
    1568:	04 c0       	rjmp	.+8      	; 0x1572 <vfprintf+0x19c>
    156a:	03 fd       	sbrc	r16, 3
    156c:	02 c0       	rjmp	.+4      	; 0x1572 <vfprintf+0x19c>
    156e:	1d e2       	ldi	r17, 0x2D	; 45
    1570:	09 c0       	rjmp	.+18     	; 0x1584 <vfprintf+0x1ae>
    1572:	f1 fe       	sbrs	r15, 1
    1574:	02 c0       	rjmp	.+4      	; 0x157a <vfprintf+0x1a4>
    1576:	1b e2       	ldi	r17, 0x2B	; 43
    1578:	05 c0       	rjmp	.+10     	; 0x1584 <vfprintf+0x1ae>
    157a:	f2 fc       	sbrc	r15, 2
    157c:	02 c0       	rjmp	.+4      	; 0x1582 <vfprintf+0x1ac>
    157e:	10 e0       	ldi	r17, 0x00	; 0
    1580:	01 c0       	rjmp	.+2      	; 0x1584 <vfprintf+0x1ae>
    1582:	10 e2       	ldi	r17, 0x20	; 32
    1584:	c1 01       	movw	r24, r2
    1586:	8c 70       	andi	r24, 0x0C	; 12
    1588:	90 70       	andi	r25, 0x00	; 0
    158a:	89 2b       	or	r24, r25
    158c:	b9 f1       	breq	.+110    	; 0x15fc <vfprintf+0x226>
    158e:	11 23       	and	r17, r17
    1590:	11 f4       	brne	.+4      	; 0x1596 <vfprintf+0x1c0>
    1592:	83 e0       	ldi	r24, 0x03	; 3
    1594:	01 c0       	rjmp	.+2      	; 0x1598 <vfprintf+0x1c2>
    1596:	84 e0       	ldi	r24, 0x04	; 4
    1598:	88 15       	cp	r24, r8
    159a:	10 f0       	brcs	.+4      	; 0x15a0 <vfprintf+0x1ca>
    159c:	88 24       	eor	r8, r8
    159e:	0a c0       	rjmp	.+20     	; 0x15b4 <vfprintf+0x1de>
    15a0:	88 1a       	sub	r8, r24
    15a2:	f3 fc       	sbrc	r15, 3
    15a4:	07 c0       	rjmp	.+14     	; 0x15b4 <vfprintf+0x1de>
    15a6:	80 e2       	ldi	r24, 0x20	; 32
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	b3 01       	movw	r22, r6
    15ac:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    15b0:	8a 94       	dec	r8
    15b2:	c9 f7       	brne	.-14     	; 0x15a6 <vfprintf+0x1d0>
    15b4:	11 23       	and	r17, r17
    15b6:	29 f0       	breq	.+10     	; 0x15c2 <vfprintf+0x1ec>
    15b8:	81 2f       	mov	r24, r17
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	b3 01       	movw	r22, r6
    15be:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    15c2:	23 fe       	sbrs	r2, 3
    15c4:	03 c0       	rjmp	.+6      	; 0x15cc <vfprintf+0x1f6>
    15c6:	04 e5       	ldi	r16, 0x54	; 84
    15c8:	10 e0       	ldi	r17, 0x00	; 0
    15ca:	0e c0       	rjmp	.+28     	; 0x15e8 <vfprintf+0x212>
    15cc:	08 e5       	ldi	r16, 0x58	; 88
    15ce:	10 e0       	ldi	r17, 0x00	; 0
    15d0:	0b c0       	rjmp	.+22     	; 0x15e8 <vfprintf+0x212>
    15d2:	e1 14       	cp	r14, r1
    15d4:	f1 04       	cpc	r15, r1
    15d6:	09 f0       	breq	.+2      	; 0x15da <vfprintf+0x204>
    15d8:	80 52       	subi	r24, 0x20	; 32
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	b3 01       	movw	r22, r6
    15de:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    15e2:	0f 5f       	subi	r16, 0xFF	; 255
    15e4:	1f 4f       	sbci	r17, 0xFF	; 255
    15e6:	05 c0       	rjmp	.+10     	; 0x15f2 <vfprintf+0x21c>
    15e8:	ef 2c       	mov	r14, r15
    15ea:	ff 24       	eor	r15, r15
    15ec:	f0 e1       	ldi	r31, 0x10	; 16
    15ee:	ef 22       	and	r14, r31
    15f0:	ff 24       	eor	r15, r15
    15f2:	f8 01       	movw	r30, r16
    15f4:	84 91       	lpm	r24, Z+
    15f6:	88 23       	and	r24, r24
    15f8:	61 f7       	brne	.-40     	; 0x15d2 <vfprintf+0x1fc>
    15fa:	14 c1       	rjmp	.+552    	; 0x1824 <vfprintf+0x44e>
    15fc:	f7 fe       	sbrs	r15, 7
    15fe:	12 c0       	rjmp	.+36     	; 0x1624 <vfprintf+0x24e>
    1600:	bc 0c       	add	r11, r12
    1602:	24 fe       	sbrs	r2, 4
    1604:	04 c0       	rjmp	.+8      	; 0x160e <vfprintf+0x238>
    1606:	8a 81       	ldd	r24, Y+2	; 0x02
    1608:	81 33       	cpi	r24, 0x31	; 49
    160a:	09 f4       	brne	.+2      	; 0x160e <vfprintf+0x238>
    160c:	ba 94       	dec	r11
    160e:	1b 14       	cp	r1, r11
    1610:	1c f0       	brlt	.+6      	; 0x1618 <vfprintf+0x242>
    1612:	bb 24       	eor	r11, r11
    1614:	b3 94       	inc	r11
    1616:	2d c0       	rjmp	.+90     	; 0x1672 <vfprintf+0x29c>
    1618:	f8 e0       	ldi	r31, 0x08	; 8
    161a:	fb 15       	cp	r31, r11
    161c:	50 f5       	brcc	.+84     	; 0x1672 <vfprintf+0x29c>
    161e:	38 e0       	ldi	r19, 0x08	; 8
    1620:	b3 2e       	mov	r11, r19
    1622:	27 c0       	rjmp	.+78     	; 0x1672 <vfprintf+0x29c>
    1624:	f6 fc       	sbrc	r15, 6
    1626:	25 c0       	rjmp	.+74     	; 0x1672 <vfprintf+0x29c>
    1628:	89 2d       	mov	r24, r9
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	8c 15       	cp	r24, r12
    162e:	9d 05       	cpc	r25, r13
    1630:	4c f0       	brlt	.+18     	; 0x1644 <vfprintf+0x26e>
    1632:	2c ef       	ldi	r18, 0xFC	; 252
    1634:	c2 16       	cp	r12, r18
    1636:	2f ef       	ldi	r18, 0xFF	; 255
    1638:	d2 06       	cpc	r13, r18
    163a:	24 f0       	brlt	.+8      	; 0x1644 <vfprintf+0x26e>
    163c:	30 e8       	ldi	r19, 0x80	; 128
    163e:	f3 2a       	or	r15, r19
    1640:	01 c0       	rjmp	.+2      	; 0x1644 <vfprintf+0x26e>
    1642:	9a 94       	dec	r9
    1644:	99 20       	and	r9, r9
    1646:	49 f0       	breq	.+18     	; 0x165a <vfprintf+0x284>
    1648:	e2 e0       	ldi	r30, 0x02	; 2
    164a:	f0 e0       	ldi	r31, 0x00	; 0
    164c:	ec 0f       	add	r30, r28
    164e:	fd 1f       	adc	r31, r29
    1650:	e9 0d       	add	r30, r9
    1652:	f1 1d       	adc	r31, r1
    1654:	80 81       	ld	r24, Z
    1656:	80 33       	cpi	r24, 0x30	; 48
    1658:	a1 f3       	breq	.-24     	; 0x1642 <vfprintf+0x26c>
    165a:	f7 fe       	sbrs	r15, 7
    165c:	0a c0       	rjmp	.+20     	; 0x1672 <vfprintf+0x29c>
    165e:	b9 2c       	mov	r11, r9
    1660:	b3 94       	inc	r11
    1662:	89 2d       	mov	r24, r9
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	c8 16       	cp	r12, r24
    1668:	d9 06       	cpc	r13, r25
    166a:	14 f0       	brlt	.+4      	; 0x1670 <vfprintf+0x29a>
    166c:	99 24       	eor	r9, r9
    166e:	01 c0       	rjmp	.+2      	; 0x1672 <vfprintf+0x29c>
    1670:	9c 18       	sub	r9, r12
    1672:	f7 fc       	sbrc	r15, 7
    1674:	03 c0       	rjmp	.+6      	; 0x167c <vfprintf+0x2a6>
    1676:	25 e0       	ldi	r18, 0x05	; 5
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	09 c0       	rjmp	.+18     	; 0x168e <vfprintf+0x2b8>
    167c:	1c 14       	cp	r1, r12
    167e:	1d 04       	cpc	r1, r13
    1680:	1c f0       	brlt	.+6      	; 0x1688 <vfprintf+0x2b2>
    1682:	21 e0       	ldi	r18, 0x01	; 1
    1684:	30 e0       	ldi	r19, 0x00	; 0
    1686:	03 c0       	rjmp	.+6      	; 0x168e <vfprintf+0x2b8>
    1688:	96 01       	movw	r18, r12
    168a:	2f 5f       	subi	r18, 0xFF	; 255
    168c:	3f 4f       	sbci	r19, 0xFF	; 255
    168e:	11 23       	and	r17, r17
    1690:	11 f0       	breq	.+4      	; 0x1696 <vfprintf+0x2c0>
    1692:	2f 5f       	subi	r18, 0xFF	; 255
    1694:	3f 4f       	sbci	r19, 0xFF	; 255
    1696:	99 20       	and	r9, r9
    1698:	29 f0       	breq	.+10     	; 0x16a4 <vfprintf+0x2ce>
    169a:	89 2d       	mov	r24, r9
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	01 96       	adiw	r24, 0x01	; 1
    16a0:	28 0f       	add	r18, r24
    16a2:	39 1f       	adc	r19, r25
    16a4:	88 2d       	mov	r24, r8
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	28 17       	cp	r18, r24
    16aa:	39 07       	cpc	r19, r25
    16ac:	14 f0       	brlt	.+4      	; 0x16b2 <vfprintf+0x2dc>
    16ae:	88 24       	eor	r8, r8
    16b0:	01 c0       	rjmp	.+2      	; 0x16b4 <vfprintf+0x2de>
    16b2:	82 1a       	sub	r8, r18
    16b4:	4f 2c       	mov	r4, r15
    16b6:	55 24       	eor	r5, r5
    16b8:	c2 01       	movw	r24, r4
    16ba:	89 70       	andi	r24, 0x09	; 9
    16bc:	90 70       	andi	r25, 0x00	; 0
    16be:	89 2b       	or	r24, r25
    16c0:	39 f0       	breq	.+14     	; 0x16d0 <vfprintf+0x2fa>
    16c2:	08 c0       	rjmp	.+16     	; 0x16d4 <vfprintf+0x2fe>
    16c4:	80 e2       	ldi	r24, 0x20	; 32
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	b3 01       	movw	r22, r6
    16ca:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    16ce:	8a 94       	dec	r8
    16d0:	88 20       	and	r8, r8
    16d2:	c1 f7       	brne	.-16     	; 0x16c4 <vfprintf+0x2ee>
    16d4:	11 23       	and	r17, r17
    16d6:	29 f0       	breq	.+10     	; 0x16e2 <vfprintf+0x30c>
    16d8:	81 2f       	mov	r24, r17
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	b3 01       	movw	r22, r6
    16de:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    16e2:	43 fe       	sbrs	r4, 3
    16e4:	07 c0       	rjmp	.+14     	; 0x16f4 <vfprintf+0x31e>
    16e6:	08 c0       	rjmp	.+16     	; 0x16f8 <vfprintf+0x322>
    16e8:	80 e3       	ldi	r24, 0x30	; 48
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	b3 01       	movw	r22, r6
    16ee:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    16f2:	8a 94       	dec	r8
    16f4:	88 20       	and	r8, r8
    16f6:	c1 f7       	brne	.-16     	; 0x16e8 <vfprintf+0x312>
    16f8:	f7 fe       	sbrs	r15, 7
    16fa:	46 c0       	rjmp	.+140    	; 0x1788 <vfprintf+0x3b2>
    16fc:	86 01       	movw	r16, r12
    16fe:	d7 fe       	sbrs	r13, 7
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <vfprintf+0x330>
    1702:	00 e0       	ldi	r16, 0x00	; 0
    1704:	10 e0       	ldi	r17, 0x00	; 0
    1706:	76 01       	movw	r14, r12
    1708:	08 94       	sec
    170a:	e1 1c       	adc	r14, r1
    170c:	f1 1c       	adc	r15, r1
    170e:	e0 1a       	sub	r14, r16
    1710:	f1 0a       	sbc	r15, r17
    1712:	41 e0       	ldi	r20, 0x01	; 1
    1714:	50 e0       	ldi	r21, 0x00	; 0
    1716:	4c 0f       	add	r20, r28
    1718:	5d 1f       	adc	r21, r29
    171a:	e4 0e       	add	r14, r20
    171c:	f5 1e       	adc	r15, r21
    171e:	26 01       	movw	r4, r12
    1720:	4b 18       	sub	r4, r11
    1722:	51 08       	sbc	r5, r1
    1724:	89 2d       	mov	r24, r9
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	aa 24       	eor	r10, r10
    172a:	bb 24       	eor	r11, r11
    172c:	a8 1a       	sub	r10, r24
    172e:	b9 0a       	sbc	r11, r25
    1730:	5f ef       	ldi	r21, 0xFF	; 255
    1732:	0f 3f       	cpi	r16, 0xFF	; 255
    1734:	15 07       	cpc	r17, r21
    1736:	29 f4       	brne	.+10     	; 0x1742 <vfprintf+0x36c>
    1738:	8e e2       	ldi	r24, 0x2E	; 46
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	b3 01       	movw	r22, r6
    173e:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1742:	c0 16       	cp	r12, r16
    1744:	d1 06       	cpc	r13, r17
    1746:	34 f0       	brlt	.+12     	; 0x1754 <vfprintf+0x37e>
    1748:	40 16       	cp	r4, r16
    174a:	51 06       	cpc	r5, r17
    174c:	1c f4       	brge	.+6      	; 0x1754 <vfprintf+0x37e>
    174e:	f7 01       	movw	r30, r14
    1750:	80 81       	ld	r24, Z
    1752:	01 c0       	rjmp	.+2      	; 0x1756 <vfprintf+0x380>
    1754:	80 e3       	ldi	r24, 0x30	; 48
    1756:	01 50       	subi	r16, 0x01	; 1
    1758:	10 40       	sbci	r17, 0x00	; 0
    175a:	08 94       	sec
    175c:	e1 1c       	adc	r14, r1
    175e:	f1 1c       	adc	r15, r1
    1760:	0a 15       	cp	r16, r10
    1762:	1b 05       	cpc	r17, r11
    1764:	2c f0       	brlt	.+10     	; 0x1770 <vfprintf+0x39a>
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	b3 01       	movw	r22, r6
    176a:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    176e:	e0 cf       	rjmp	.-64     	; 0x1730 <vfprintf+0x35a>
    1770:	0c 15       	cp	r16, r12
    1772:	1d 05       	cpc	r17, r13
    1774:	39 f4       	brne	.+14     	; 0x1784 <vfprintf+0x3ae>
    1776:	9a 81       	ldd	r25, Y+2	; 0x02
    1778:	96 33       	cpi	r25, 0x36	; 54
    177a:	18 f4       	brcc	.+6      	; 0x1782 <vfprintf+0x3ac>
    177c:	95 33       	cpi	r25, 0x35	; 53
    177e:	11 f4       	brne	.+4      	; 0x1784 <vfprintf+0x3ae>
    1780:	24 fe       	sbrs	r2, 4
    1782:	81 e3       	ldi	r24, 0x31	; 49
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	4b c0       	rjmp	.+150    	; 0x181e <vfprintf+0x448>
    1788:	8a 81       	ldd	r24, Y+2	; 0x02
    178a:	81 33       	cpi	r24, 0x31	; 49
    178c:	09 f0       	breq	.+2      	; 0x1790 <vfprintf+0x3ba>
    178e:	0f 7e       	andi	r16, 0xEF	; 239
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	b3 01       	movw	r22, r6
    1794:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1798:	99 20       	and	r9, r9
    179a:	a1 f0       	breq	.+40     	; 0x17c4 <vfprintf+0x3ee>
    179c:	8e e2       	ldi	r24, 0x2E	; 46
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	b3 01       	movw	r22, r6
    17a2:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    17a6:	12 e0       	ldi	r17, 0x02	; 2
    17a8:	e1 e0       	ldi	r30, 0x01	; 1
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	ec 0f       	add	r30, r28
    17ae:	fd 1f       	adc	r31, r29
    17b0:	e1 0f       	add	r30, r17
    17b2:	f1 1d       	adc	r31, r1
    17b4:	1f 5f       	subi	r17, 0xFF	; 255
    17b6:	80 81       	ld	r24, Z
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	b3 01       	movw	r22, r6
    17bc:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    17c0:	9a 94       	dec	r9
    17c2:	91 f7       	brne	.-28     	; 0x17a8 <vfprintf+0x3d2>
    17c4:	44 fc       	sbrc	r4, 4
    17c6:	03 c0       	rjmp	.+6      	; 0x17ce <vfprintf+0x3f8>
    17c8:	85 e6       	ldi	r24, 0x65	; 101
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	02 c0       	rjmp	.+4      	; 0x17d2 <vfprintf+0x3fc>
    17ce:	85 e4       	ldi	r24, 0x45	; 69
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	b3 01       	movw	r22, r6
    17d4:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    17d8:	d7 fc       	sbrc	r13, 7
    17da:	05 c0       	rjmp	.+10     	; 0x17e6 <vfprintf+0x410>
    17dc:	c1 14       	cp	r12, r1
    17de:	d1 04       	cpc	r13, r1
    17e0:	41 f4       	brne	.+16     	; 0x17f2 <vfprintf+0x41c>
    17e2:	04 ff       	sbrs	r16, 4
    17e4:	06 c0       	rjmp	.+12     	; 0x17f2 <vfprintf+0x41c>
    17e6:	d0 94       	com	r13
    17e8:	c1 94       	neg	r12
    17ea:	d1 08       	sbc	r13, r1
    17ec:	d3 94       	inc	r13
    17ee:	8d e2       	ldi	r24, 0x2D	; 45
    17f0:	01 c0       	rjmp	.+2      	; 0x17f4 <vfprintf+0x41e>
    17f2:	8b e2       	ldi	r24, 0x2B	; 43
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	b3 01       	movw	r22, r6
    17f8:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    17fc:	80 e3       	ldi	r24, 0x30	; 48
    17fe:	05 c0       	rjmp	.+10     	; 0x180a <vfprintf+0x434>
    1800:	8f 5f       	subi	r24, 0xFF	; 255
    1802:	26 ef       	ldi	r18, 0xF6	; 246
    1804:	3f ef       	ldi	r19, 0xFF	; 255
    1806:	c2 0e       	add	r12, r18
    1808:	d3 1e       	adc	r13, r19
    180a:	3a e0       	ldi	r19, 0x0A	; 10
    180c:	c3 16       	cp	r12, r19
    180e:	d1 04       	cpc	r13, r1
    1810:	bc f7       	brge	.-18     	; 0x1800 <vfprintf+0x42a>
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	b3 01       	movw	r22, r6
    1816:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    181a:	c6 01       	movw	r24, r12
    181c:	c0 96       	adiw	r24, 0x30	; 48
    181e:	b3 01       	movw	r22, r6
    1820:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1824:	cc 84       	ldd	r12, Y+12	; 0x0c
    1826:	dd 84       	ldd	r13, Y+13	; 0x0d
    1828:	52 c1       	rjmp	.+676    	; 0x1ace <vfprintf+0x6f8>
    182a:	93 36       	cpi	r25, 0x63	; 99
    182c:	31 f0       	breq	.+12     	; 0x183a <vfprintf+0x464>
    182e:	93 37       	cpi	r25, 0x73	; 115
    1830:	99 f0       	breq	.+38     	; 0x1858 <vfprintf+0x482>
    1832:	93 35       	cpi	r25, 0x53	; 83
    1834:	09 f0       	breq	.+2      	; 0x1838 <vfprintf+0x462>
    1836:	59 c0       	rjmp	.+178    	; 0x18ea <vfprintf+0x514>
    1838:	23 c0       	rjmp	.+70     	; 0x1880 <vfprintf+0x4aa>
    183a:	f6 01       	movw	r30, r12
    183c:	80 81       	ld	r24, Z
    183e:	89 83       	std	Y+1, r24	; 0x01
    1840:	5e 01       	movw	r10, r28
    1842:	08 94       	sec
    1844:	a1 1c       	adc	r10, r1
    1846:	b1 1c       	adc	r11, r1
    1848:	22 e0       	ldi	r18, 0x02	; 2
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	c2 0e       	add	r12, r18
    184e:	d3 1e       	adc	r13, r19
    1850:	21 e0       	ldi	r18, 0x01	; 1
    1852:	e2 2e       	mov	r14, r18
    1854:	f1 2c       	mov	r15, r1
    1856:	12 c0       	rjmp	.+36     	; 0x187c <vfprintf+0x4a6>
    1858:	f6 01       	movw	r30, r12
    185a:	a0 80       	ld	r10, Z
    185c:	b1 80       	ldd	r11, Z+1	; 0x01
    185e:	16 fd       	sbrc	r17, 6
    1860:	03 c0       	rjmp	.+6      	; 0x1868 <vfprintf+0x492>
    1862:	6f ef       	ldi	r22, 0xFF	; 255
    1864:	7f ef       	ldi	r23, 0xFF	; 255
    1866:	02 c0       	rjmp	.+4      	; 0x186c <vfprintf+0x496>
    1868:	69 2d       	mov	r22, r9
    186a:	70 e0       	ldi	r23, 0x00	; 0
    186c:	22 e0       	ldi	r18, 0x02	; 2
    186e:	30 e0       	ldi	r19, 0x00	; 0
    1870:	c2 0e       	add	r12, r18
    1872:	d3 1e       	adc	r13, r19
    1874:	c5 01       	movw	r24, r10
    1876:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <strnlen>
    187a:	7c 01       	movw	r14, r24
    187c:	1f 77       	andi	r17, 0x7F	; 127
    187e:	13 c0       	rjmp	.+38     	; 0x18a6 <vfprintf+0x4d0>
    1880:	f6 01       	movw	r30, r12
    1882:	a0 80       	ld	r10, Z
    1884:	b1 80       	ldd	r11, Z+1	; 0x01
    1886:	16 fd       	sbrc	r17, 6
    1888:	03 c0       	rjmp	.+6      	; 0x1890 <vfprintf+0x4ba>
    188a:	6f ef       	ldi	r22, 0xFF	; 255
    188c:	7f ef       	ldi	r23, 0xFF	; 255
    188e:	02 c0       	rjmp	.+4      	; 0x1894 <vfprintf+0x4be>
    1890:	69 2d       	mov	r22, r9
    1892:	70 e0       	ldi	r23, 0x00	; 0
    1894:	22 e0       	ldi	r18, 0x02	; 2
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	c2 0e       	add	r12, r18
    189a:	d3 1e       	adc	r13, r19
    189c:	c5 01       	movw	r24, r10
    189e:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <strnlen_P>
    18a2:	7c 01       	movw	r14, r24
    18a4:	10 68       	ori	r17, 0x80	; 128
    18a6:	13 ff       	sbrs	r17, 3
    18a8:	07 c0       	rjmp	.+14     	; 0x18b8 <vfprintf+0x4e2>
    18aa:	1b c0       	rjmp	.+54     	; 0x18e2 <vfprintf+0x50c>
    18ac:	80 e2       	ldi	r24, 0x20	; 32
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	b3 01       	movw	r22, r6
    18b2:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    18b6:	8a 94       	dec	r8
    18b8:	88 2d       	mov	r24, r8
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	e8 16       	cp	r14, r24
    18be:	f9 06       	cpc	r15, r25
    18c0:	a8 f3       	brcs	.-22     	; 0x18ac <vfprintf+0x4d6>
    18c2:	0f c0       	rjmp	.+30     	; 0x18e2 <vfprintf+0x50c>
    18c4:	f5 01       	movw	r30, r10
    18c6:	17 fd       	sbrc	r17, 7
    18c8:	85 91       	lpm	r24, Z+
    18ca:	17 ff       	sbrs	r17, 7
    18cc:	81 91       	ld	r24, Z+
    18ce:	5f 01       	movw	r10, r30
    18d0:	90 e0       	ldi	r25, 0x00	; 0
    18d2:	b3 01       	movw	r22, r6
    18d4:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    18d8:	81 10       	cpse	r8, r1
    18da:	8a 94       	dec	r8
    18dc:	08 94       	sec
    18de:	e1 08       	sbc	r14, r1
    18e0:	f1 08       	sbc	r15, r1
    18e2:	e1 14       	cp	r14, r1
    18e4:	f1 04       	cpc	r15, r1
    18e6:	71 f7       	brne	.-36     	; 0x18c4 <vfprintf+0x4ee>
    18e8:	f2 c0       	rjmp	.+484    	; 0x1ace <vfprintf+0x6f8>
    18ea:	94 36       	cpi	r25, 0x64	; 100
    18ec:	11 f0       	breq	.+4      	; 0x18f2 <vfprintf+0x51c>
    18ee:	99 36       	cpi	r25, 0x69	; 105
    18f0:	89 f5       	brne	.+98     	; 0x1954 <vfprintf+0x57e>
    18f2:	17 ff       	sbrs	r17, 7
    18f4:	08 c0       	rjmp	.+16     	; 0x1906 <vfprintf+0x530>
    18f6:	f6 01       	movw	r30, r12
    18f8:	20 81       	ld	r18, Z
    18fa:	31 81       	ldd	r19, Z+1	; 0x01
    18fc:	42 81       	ldd	r20, Z+2	; 0x02
    18fe:	53 81       	ldd	r21, Z+3	; 0x03
    1900:	84 e0       	ldi	r24, 0x04	; 4
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	0a c0       	rjmp	.+20     	; 0x191a <vfprintf+0x544>
    1906:	f6 01       	movw	r30, r12
    1908:	80 81       	ld	r24, Z
    190a:	91 81       	ldd	r25, Z+1	; 0x01
    190c:	9c 01       	movw	r18, r24
    190e:	44 27       	eor	r20, r20
    1910:	37 fd       	sbrc	r19, 7
    1912:	40 95       	com	r20
    1914:	54 2f       	mov	r21, r20
    1916:	82 e0       	ldi	r24, 0x02	; 2
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	c8 0e       	add	r12, r24
    191c:	d9 1e       	adc	r13, r25
    191e:	9f e6       	ldi	r25, 0x6F	; 111
    1920:	f9 2e       	mov	r15, r25
    1922:	f1 22       	and	r15, r17
    1924:	57 ff       	sbrs	r21, 7
    1926:	09 c0       	rjmp	.+18     	; 0x193a <vfprintf+0x564>
    1928:	50 95       	com	r21
    192a:	40 95       	com	r20
    192c:	30 95       	com	r19
    192e:	21 95       	neg	r18
    1930:	3f 4f       	sbci	r19, 0xFF	; 255
    1932:	4f 4f       	sbci	r20, 0xFF	; 255
    1934:	5f 4f       	sbci	r21, 0xFF	; 255
    1936:	90 e8       	ldi	r25, 0x80	; 128
    1938:	f9 2a       	or	r15, r25
    193a:	ca 01       	movw	r24, r20
    193c:	b9 01       	movw	r22, r18
    193e:	ae 01       	movw	r20, r28
    1940:	4f 5f       	subi	r20, 0xFF	; 255
    1942:	5f 4f       	sbci	r21, 0xFF	; 255
    1944:	2a e0       	ldi	r18, 0x0A	; 10
    1946:	30 e0       	ldi	r19, 0x00	; 0
    1948:	0e 94 4f 11 	call	0x229e	; 0x229e <__ultoa_invert>
    194c:	e8 2e       	mov	r14, r24
    194e:	e8 89       	ldd	r30, Y+16	; 0x10
    1950:	ee 1a       	sub	r14, r30
    1952:	41 c0       	rjmp	.+130    	; 0x19d6 <vfprintf+0x600>
    1954:	95 37       	cpi	r25, 0x75	; 117
    1956:	21 f4       	brne	.+8      	; 0x1960 <vfprintf+0x58a>
    1958:	1f 7e       	andi	r17, 0xEF	; 239
    195a:	2a e0       	ldi	r18, 0x0A	; 10
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	1c c0       	rjmp	.+56     	; 0x1998 <vfprintf+0x5c2>
    1960:	19 7f       	andi	r17, 0xF9	; 249
    1962:	9f 36       	cpi	r25, 0x6F	; 111
    1964:	61 f0       	breq	.+24     	; 0x197e <vfprintf+0x5a8>
    1966:	90 37       	cpi	r25, 0x70	; 112
    1968:	20 f4       	brcc	.+8      	; 0x1972 <vfprintf+0x59c>
    196a:	98 35       	cpi	r25, 0x58	; 88
    196c:	09 f0       	breq	.+2      	; 0x1970 <vfprintf+0x59a>
    196e:	b2 c0       	rjmp	.+356    	; 0x1ad4 <vfprintf+0x6fe>
    1970:	0f c0       	rjmp	.+30     	; 0x1990 <vfprintf+0x5ba>
    1972:	90 37       	cpi	r25, 0x70	; 112
    1974:	39 f0       	breq	.+14     	; 0x1984 <vfprintf+0x5ae>
    1976:	98 37       	cpi	r25, 0x78	; 120
    1978:	09 f0       	breq	.+2      	; 0x197c <vfprintf+0x5a6>
    197a:	ac c0       	rjmp	.+344    	; 0x1ad4 <vfprintf+0x6fe>
    197c:	04 c0       	rjmp	.+8      	; 0x1986 <vfprintf+0x5b0>
    197e:	28 e0       	ldi	r18, 0x08	; 8
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	0a c0       	rjmp	.+20     	; 0x1998 <vfprintf+0x5c2>
    1984:	10 61       	ori	r17, 0x10	; 16
    1986:	14 fd       	sbrc	r17, 4
    1988:	14 60       	ori	r17, 0x04	; 4
    198a:	20 e1       	ldi	r18, 0x10	; 16
    198c:	30 e0       	ldi	r19, 0x00	; 0
    198e:	04 c0       	rjmp	.+8      	; 0x1998 <vfprintf+0x5c2>
    1990:	14 fd       	sbrc	r17, 4
    1992:	16 60       	ori	r17, 0x06	; 6
    1994:	20 e1       	ldi	r18, 0x10	; 16
    1996:	32 e0       	ldi	r19, 0x02	; 2
    1998:	17 ff       	sbrs	r17, 7
    199a:	08 c0       	rjmp	.+16     	; 0x19ac <vfprintf+0x5d6>
    199c:	f6 01       	movw	r30, r12
    199e:	60 81       	ld	r22, Z
    19a0:	71 81       	ldd	r23, Z+1	; 0x01
    19a2:	82 81       	ldd	r24, Z+2	; 0x02
    19a4:	93 81       	ldd	r25, Z+3	; 0x03
    19a6:	44 e0       	ldi	r20, 0x04	; 4
    19a8:	50 e0       	ldi	r21, 0x00	; 0
    19aa:	08 c0       	rjmp	.+16     	; 0x19bc <vfprintf+0x5e6>
    19ac:	f6 01       	movw	r30, r12
    19ae:	80 81       	ld	r24, Z
    19b0:	91 81       	ldd	r25, Z+1	; 0x01
    19b2:	bc 01       	movw	r22, r24
    19b4:	80 e0       	ldi	r24, 0x00	; 0
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	42 e0       	ldi	r20, 0x02	; 2
    19ba:	50 e0       	ldi	r21, 0x00	; 0
    19bc:	c4 0e       	add	r12, r20
    19be:	d5 1e       	adc	r13, r21
    19c0:	ae 01       	movw	r20, r28
    19c2:	4f 5f       	subi	r20, 0xFF	; 255
    19c4:	5f 4f       	sbci	r21, 0xFF	; 255
    19c6:	0e 94 4f 11 	call	0x229e	; 0x229e <__ultoa_invert>
    19ca:	e8 2e       	mov	r14, r24
    19cc:	58 89       	ldd	r21, Y+16	; 0x10
    19ce:	e5 1a       	sub	r14, r21
    19d0:	8f e7       	ldi	r24, 0x7F	; 127
    19d2:	f8 2e       	mov	r15, r24
    19d4:	f1 22       	and	r15, r17
    19d6:	f6 fe       	sbrs	r15, 6
    19d8:	0b c0       	rjmp	.+22     	; 0x19f0 <vfprintf+0x61a>
    19da:	8e ef       	ldi	r24, 0xFE	; 254
    19dc:	f8 22       	and	r15, r24
    19de:	e9 14       	cp	r14, r9
    19e0:	38 f4       	brcc	.+14     	; 0x19f0 <vfprintf+0x61a>
    19e2:	f4 fe       	sbrs	r15, 4
    19e4:	07 c0       	rjmp	.+14     	; 0x19f4 <vfprintf+0x61e>
    19e6:	f2 fc       	sbrc	r15, 2
    19e8:	05 c0       	rjmp	.+10     	; 0x19f4 <vfprintf+0x61e>
    19ea:	9f ee       	ldi	r25, 0xEF	; 239
    19ec:	f9 22       	and	r15, r25
    19ee:	02 c0       	rjmp	.+4      	; 0x19f4 <vfprintf+0x61e>
    19f0:	1e 2d       	mov	r17, r14
    19f2:	01 c0       	rjmp	.+2      	; 0x19f6 <vfprintf+0x620>
    19f4:	19 2d       	mov	r17, r9
    19f6:	f4 fe       	sbrs	r15, 4
    19f8:	0d c0       	rjmp	.+26     	; 0x1a14 <vfprintf+0x63e>
    19fa:	fe 01       	movw	r30, r28
    19fc:	ee 0d       	add	r30, r14
    19fe:	f1 1d       	adc	r31, r1
    1a00:	80 81       	ld	r24, Z
    1a02:	80 33       	cpi	r24, 0x30	; 48
    1a04:	19 f4       	brne	.+6      	; 0x1a0c <vfprintf+0x636>
    1a06:	e9 ee       	ldi	r30, 0xE9	; 233
    1a08:	fe 22       	and	r15, r30
    1a0a:	08 c0       	rjmp	.+16     	; 0x1a1c <vfprintf+0x646>
    1a0c:	1f 5f       	subi	r17, 0xFF	; 255
    1a0e:	f2 fe       	sbrs	r15, 2
    1a10:	05 c0       	rjmp	.+10     	; 0x1a1c <vfprintf+0x646>
    1a12:	03 c0       	rjmp	.+6      	; 0x1a1a <vfprintf+0x644>
    1a14:	8f 2d       	mov	r24, r15
    1a16:	86 78       	andi	r24, 0x86	; 134
    1a18:	09 f0       	breq	.+2      	; 0x1a1c <vfprintf+0x646>
    1a1a:	1f 5f       	subi	r17, 0xFF	; 255
    1a1c:	0f 2d       	mov	r16, r15
    1a1e:	f3 fc       	sbrc	r15, 3
    1a20:	14 c0       	rjmp	.+40     	; 0x1a4a <vfprintf+0x674>
    1a22:	f0 fe       	sbrs	r15, 0
    1a24:	0f c0       	rjmp	.+30     	; 0x1a44 <vfprintf+0x66e>
    1a26:	18 15       	cp	r17, r8
    1a28:	10 f0       	brcs	.+4      	; 0x1a2e <vfprintf+0x658>
    1a2a:	9e 2c       	mov	r9, r14
    1a2c:	0b c0       	rjmp	.+22     	; 0x1a44 <vfprintf+0x66e>
    1a2e:	9e 2c       	mov	r9, r14
    1a30:	98 0c       	add	r9, r8
    1a32:	91 1a       	sub	r9, r17
    1a34:	18 2d       	mov	r17, r8
    1a36:	06 c0       	rjmp	.+12     	; 0x1a44 <vfprintf+0x66e>
    1a38:	80 e2       	ldi	r24, 0x20	; 32
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	b3 01       	movw	r22, r6
    1a3e:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1a42:	1f 5f       	subi	r17, 0xFF	; 255
    1a44:	18 15       	cp	r17, r8
    1a46:	c0 f3       	brcs	.-16     	; 0x1a38 <vfprintf+0x662>
    1a48:	04 c0       	rjmp	.+8      	; 0x1a52 <vfprintf+0x67c>
    1a4a:	18 15       	cp	r17, r8
    1a4c:	10 f4       	brcc	.+4      	; 0x1a52 <vfprintf+0x67c>
    1a4e:	81 1a       	sub	r8, r17
    1a50:	01 c0       	rjmp	.+2      	; 0x1a54 <vfprintf+0x67e>
    1a52:	88 24       	eor	r8, r8
    1a54:	04 ff       	sbrs	r16, 4
    1a56:	0f c0       	rjmp	.+30     	; 0x1a76 <vfprintf+0x6a0>
    1a58:	80 e3       	ldi	r24, 0x30	; 48
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	b3 01       	movw	r22, r6
    1a5e:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1a62:	02 ff       	sbrs	r16, 2
    1a64:	1d c0       	rjmp	.+58     	; 0x1aa0 <vfprintf+0x6ca>
    1a66:	01 fd       	sbrc	r16, 1
    1a68:	03 c0       	rjmp	.+6      	; 0x1a70 <vfprintf+0x69a>
    1a6a:	88 e7       	ldi	r24, 0x78	; 120
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	0e c0       	rjmp	.+28     	; 0x1a8c <vfprintf+0x6b6>
    1a70:	88 e5       	ldi	r24, 0x58	; 88
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	0b c0       	rjmp	.+22     	; 0x1a8c <vfprintf+0x6b6>
    1a76:	80 2f       	mov	r24, r16
    1a78:	86 78       	andi	r24, 0x86	; 134
    1a7a:	91 f0       	breq	.+36     	; 0x1aa0 <vfprintf+0x6ca>
    1a7c:	01 ff       	sbrs	r16, 1
    1a7e:	02 c0       	rjmp	.+4      	; 0x1a84 <vfprintf+0x6ae>
    1a80:	8b e2       	ldi	r24, 0x2B	; 43
    1a82:	01 c0       	rjmp	.+2      	; 0x1a86 <vfprintf+0x6b0>
    1a84:	80 e2       	ldi	r24, 0x20	; 32
    1a86:	f7 fc       	sbrc	r15, 7
    1a88:	8d e2       	ldi	r24, 0x2D	; 45
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	b3 01       	movw	r22, r6
    1a8e:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1a92:	06 c0       	rjmp	.+12     	; 0x1aa0 <vfprintf+0x6ca>
    1a94:	80 e3       	ldi	r24, 0x30	; 48
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	b3 01       	movw	r22, r6
    1a9a:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1a9e:	9a 94       	dec	r9
    1aa0:	e9 14       	cp	r14, r9
    1aa2:	c0 f3       	brcs	.-16     	; 0x1a94 <vfprintf+0x6be>
    1aa4:	ea 94       	dec	r14
    1aa6:	e1 e0       	ldi	r30, 0x01	; 1
    1aa8:	f0 e0       	ldi	r31, 0x00	; 0
    1aaa:	ec 0f       	add	r30, r28
    1aac:	fd 1f       	adc	r31, r29
    1aae:	ee 0d       	add	r30, r14
    1ab0:	f1 1d       	adc	r31, r1
    1ab2:	80 81       	ld	r24, Z
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	b3 01       	movw	r22, r6
    1ab8:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1abc:	ee 20       	and	r14, r14
    1abe:	91 f7       	brne	.-28     	; 0x1aa4 <vfprintf+0x6ce>
    1ac0:	06 c0       	rjmp	.+12     	; 0x1ace <vfprintf+0x6f8>
    1ac2:	80 e2       	ldi	r24, 0x20	; 32
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	b3 01       	movw	r22, r6
    1ac8:	0e 94 ff 10 	call	0x21fe	; 0x21fe <fputc>
    1acc:	8a 94       	dec	r8
    1ace:	88 20       	and	r8, r8
    1ad0:	c1 f7       	brne	.-16     	; 0x1ac2 <vfprintf+0x6ec>
    1ad2:	99 cc       	rjmp	.-1742   	; 0x1406 <vfprintf+0x30>
    1ad4:	f3 01       	movw	r30, r6
    1ad6:	66 81       	ldd	r22, Z+6	; 0x06
    1ad8:	77 81       	ldd	r23, Z+7	; 0x07
    1ada:	cb 01       	movw	r24, r22
    1adc:	61 96       	adiw	r28, 0x11	; 17
    1ade:	e2 e1       	ldi	r30, 0x12	; 18
    1ae0:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__epilogue_restores__>

00001ae4 <__subsf3>:
    1ae4:	50 58       	subi	r21, 0x80	; 128

00001ae6 <__addsf3>:
    1ae6:	bb 27       	eor	r27, r27
    1ae8:	aa 27       	eor	r26, r26
    1aea:	0e d0       	rcall	.+28     	; 0x1b08 <__addsf3x>
    1aec:	b1 c1       	rjmp	.+866    	; 0x1e50 <__fp_round>
    1aee:	a2 d1       	rcall	.+836    	; 0x1e34 <__fp_pscA>
    1af0:	30 f0       	brcs	.+12     	; 0x1afe <__addsf3+0x18>
    1af2:	a7 d1       	rcall	.+846    	; 0x1e42 <__fp_pscB>
    1af4:	20 f0       	brcs	.+8      	; 0x1afe <__addsf3+0x18>
    1af6:	31 f4       	brne	.+12     	; 0x1b04 <__addsf3+0x1e>
    1af8:	9f 3f       	cpi	r25, 0xFF	; 255
    1afa:	11 f4       	brne	.+4      	; 0x1b00 <__addsf3+0x1a>
    1afc:	1e f4       	brtc	.+6      	; 0x1b04 <__addsf3+0x1e>
    1afe:	97 c1       	rjmp	.+814    	; 0x1e2e <__fp_nan>
    1b00:	0e f4       	brtc	.+2      	; 0x1b04 <__addsf3+0x1e>
    1b02:	e0 95       	com	r30
    1b04:	e7 fb       	bst	r30, 7
    1b06:	64 c1       	rjmp	.+712    	; 0x1dd0 <__fp_inf>

00001b08 <__addsf3x>:
    1b08:	e9 2f       	mov	r30, r25
    1b0a:	b3 d1       	rcall	.+870    	; 0x1e72 <__fp_split3>
    1b0c:	80 f3       	brcs	.-32     	; 0x1aee <__addsf3+0x8>
    1b0e:	ba 17       	cp	r27, r26
    1b10:	62 07       	cpc	r22, r18
    1b12:	73 07       	cpc	r23, r19
    1b14:	84 07       	cpc	r24, r20
    1b16:	95 07       	cpc	r25, r21
    1b18:	18 f0       	brcs	.+6      	; 0x1b20 <__addsf3x+0x18>
    1b1a:	71 f4       	brne	.+28     	; 0x1b38 <__addsf3x+0x30>
    1b1c:	9e f5       	brtc	.+102    	; 0x1b84 <__addsf3x+0x7c>
    1b1e:	e2 c1       	rjmp	.+964    	; 0x1ee4 <__fp_zero>
    1b20:	0e f4       	brtc	.+2      	; 0x1b24 <__addsf3x+0x1c>
    1b22:	e0 95       	com	r30
    1b24:	0b 2e       	mov	r0, r27
    1b26:	ba 2f       	mov	r27, r26
    1b28:	a0 2d       	mov	r26, r0
    1b2a:	0b 01       	movw	r0, r22
    1b2c:	b9 01       	movw	r22, r18
    1b2e:	90 01       	movw	r18, r0
    1b30:	0c 01       	movw	r0, r24
    1b32:	ca 01       	movw	r24, r20
    1b34:	a0 01       	movw	r20, r0
    1b36:	11 24       	eor	r1, r1
    1b38:	ff 27       	eor	r31, r31
    1b3a:	59 1b       	sub	r21, r25
    1b3c:	99 f0       	breq	.+38     	; 0x1b64 <__addsf3x+0x5c>
    1b3e:	59 3f       	cpi	r21, 0xF9	; 249
    1b40:	50 f4       	brcc	.+20     	; 0x1b56 <__addsf3x+0x4e>
    1b42:	50 3e       	cpi	r21, 0xE0	; 224
    1b44:	68 f1       	brcs	.+90     	; 0x1ba0 <__addsf3x+0x98>
    1b46:	1a 16       	cp	r1, r26
    1b48:	f0 40       	sbci	r31, 0x00	; 0
    1b4a:	a2 2f       	mov	r26, r18
    1b4c:	23 2f       	mov	r18, r19
    1b4e:	34 2f       	mov	r19, r20
    1b50:	44 27       	eor	r20, r20
    1b52:	58 5f       	subi	r21, 0xF8	; 248
    1b54:	f3 cf       	rjmp	.-26     	; 0x1b3c <__addsf3x+0x34>
    1b56:	46 95       	lsr	r20
    1b58:	37 95       	ror	r19
    1b5a:	27 95       	ror	r18
    1b5c:	a7 95       	ror	r26
    1b5e:	f0 40       	sbci	r31, 0x00	; 0
    1b60:	53 95       	inc	r21
    1b62:	c9 f7       	brne	.-14     	; 0x1b56 <__addsf3x+0x4e>
    1b64:	7e f4       	brtc	.+30     	; 0x1b84 <__addsf3x+0x7c>
    1b66:	1f 16       	cp	r1, r31
    1b68:	ba 0b       	sbc	r27, r26
    1b6a:	62 0b       	sbc	r22, r18
    1b6c:	73 0b       	sbc	r23, r19
    1b6e:	84 0b       	sbc	r24, r20
    1b70:	ba f0       	brmi	.+46     	; 0x1ba0 <__addsf3x+0x98>
    1b72:	91 50       	subi	r25, 0x01	; 1
    1b74:	a1 f0       	breq	.+40     	; 0x1b9e <__addsf3x+0x96>
    1b76:	ff 0f       	add	r31, r31
    1b78:	bb 1f       	adc	r27, r27
    1b7a:	66 1f       	adc	r22, r22
    1b7c:	77 1f       	adc	r23, r23
    1b7e:	88 1f       	adc	r24, r24
    1b80:	c2 f7       	brpl	.-16     	; 0x1b72 <__addsf3x+0x6a>
    1b82:	0e c0       	rjmp	.+28     	; 0x1ba0 <__addsf3x+0x98>
    1b84:	ba 0f       	add	r27, r26
    1b86:	62 1f       	adc	r22, r18
    1b88:	73 1f       	adc	r23, r19
    1b8a:	84 1f       	adc	r24, r20
    1b8c:	48 f4       	brcc	.+18     	; 0x1ba0 <__addsf3x+0x98>
    1b8e:	87 95       	ror	r24
    1b90:	77 95       	ror	r23
    1b92:	67 95       	ror	r22
    1b94:	b7 95       	ror	r27
    1b96:	f7 95       	ror	r31
    1b98:	9e 3f       	cpi	r25, 0xFE	; 254
    1b9a:	08 f0       	brcs	.+2      	; 0x1b9e <__addsf3x+0x96>
    1b9c:	b3 cf       	rjmp	.-154    	; 0x1b04 <__addsf3+0x1e>
    1b9e:	93 95       	inc	r25
    1ba0:	88 0f       	add	r24, r24
    1ba2:	08 f0       	brcs	.+2      	; 0x1ba6 <__addsf3x+0x9e>
    1ba4:	99 27       	eor	r25, r25
    1ba6:	ee 0f       	add	r30, r30
    1ba8:	97 95       	ror	r25
    1baa:	87 95       	ror	r24
    1bac:	08 95       	ret

00001bae <__cmpsf2>:
    1bae:	ec d0       	rcall	.+472    	; 0x1d88 <__fp_cmp>
    1bb0:	08 f4       	brcc	.+2      	; 0x1bb4 <__cmpsf2+0x6>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	08 95       	ret

00001bb6 <__divsf3>:
    1bb6:	0c d0       	rcall	.+24     	; 0x1bd0 <__divsf3x>
    1bb8:	4b c1       	rjmp	.+662    	; 0x1e50 <__fp_round>
    1bba:	43 d1       	rcall	.+646    	; 0x1e42 <__fp_pscB>
    1bbc:	40 f0       	brcs	.+16     	; 0x1bce <__divsf3+0x18>
    1bbe:	3a d1       	rcall	.+628    	; 0x1e34 <__fp_pscA>
    1bc0:	30 f0       	brcs	.+12     	; 0x1bce <__divsf3+0x18>
    1bc2:	21 f4       	brne	.+8      	; 0x1bcc <__divsf3+0x16>
    1bc4:	5f 3f       	cpi	r21, 0xFF	; 255
    1bc6:	19 f0       	breq	.+6      	; 0x1bce <__divsf3+0x18>
    1bc8:	03 c1       	rjmp	.+518    	; 0x1dd0 <__fp_inf>
    1bca:	51 11       	cpse	r21, r1
    1bcc:	8c c1       	rjmp	.+792    	; 0x1ee6 <__fp_szero>
    1bce:	2f c1       	rjmp	.+606    	; 0x1e2e <__fp_nan>

00001bd0 <__divsf3x>:
    1bd0:	50 d1       	rcall	.+672    	; 0x1e72 <__fp_split3>
    1bd2:	98 f3       	brcs	.-26     	; 0x1bba <__divsf3+0x4>

00001bd4 <__divsf3_pse>:
    1bd4:	99 23       	and	r25, r25
    1bd6:	c9 f3       	breq	.-14     	; 0x1bca <__divsf3+0x14>
    1bd8:	55 23       	and	r21, r21
    1bda:	b1 f3       	breq	.-20     	; 0x1bc8 <__divsf3+0x12>
    1bdc:	95 1b       	sub	r25, r21
    1bde:	55 0b       	sbc	r21, r21
    1be0:	bb 27       	eor	r27, r27
    1be2:	aa 27       	eor	r26, r26
    1be4:	62 17       	cp	r22, r18
    1be6:	73 07       	cpc	r23, r19
    1be8:	84 07       	cpc	r24, r20
    1bea:	38 f0       	brcs	.+14     	; 0x1bfa <__divsf3_pse+0x26>
    1bec:	9f 5f       	subi	r25, 0xFF	; 255
    1bee:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf0:	22 0f       	add	r18, r18
    1bf2:	33 1f       	adc	r19, r19
    1bf4:	44 1f       	adc	r20, r20
    1bf6:	aa 1f       	adc	r26, r26
    1bf8:	a9 f3       	breq	.-22     	; 0x1be4 <__divsf3_pse+0x10>
    1bfa:	33 d0       	rcall	.+102    	; 0x1c62 <__divsf3_pse+0x8e>
    1bfc:	0e 2e       	mov	r0, r30
    1bfe:	3a f0       	brmi	.+14     	; 0x1c0e <__divsf3_pse+0x3a>
    1c00:	e0 e8       	ldi	r30, 0x80	; 128
    1c02:	30 d0       	rcall	.+96     	; 0x1c64 <__divsf3_pse+0x90>
    1c04:	91 50       	subi	r25, 0x01	; 1
    1c06:	50 40       	sbci	r21, 0x00	; 0
    1c08:	e6 95       	lsr	r30
    1c0a:	00 1c       	adc	r0, r0
    1c0c:	ca f7       	brpl	.-14     	; 0x1c00 <__divsf3_pse+0x2c>
    1c0e:	29 d0       	rcall	.+82     	; 0x1c62 <__divsf3_pse+0x8e>
    1c10:	fe 2f       	mov	r31, r30
    1c12:	27 d0       	rcall	.+78     	; 0x1c62 <__divsf3_pse+0x8e>
    1c14:	66 0f       	add	r22, r22
    1c16:	77 1f       	adc	r23, r23
    1c18:	88 1f       	adc	r24, r24
    1c1a:	bb 1f       	adc	r27, r27
    1c1c:	26 17       	cp	r18, r22
    1c1e:	37 07       	cpc	r19, r23
    1c20:	48 07       	cpc	r20, r24
    1c22:	ab 07       	cpc	r26, r27
    1c24:	b0 e8       	ldi	r27, 0x80	; 128
    1c26:	09 f0       	breq	.+2      	; 0x1c2a <__divsf3_pse+0x56>
    1c28:	bb 0b       	sbc	r27, r27
    1c2a:	80 2d       	mov	r24, r0
    1c2c:	bf 01       	movw	r22, r30
    1c2e:	ff 27       	eor	r31, r31
    1c30:	93 58       	subi	r25, 0x83	; 131
    1c32:	5f 4f       	sbci	r21, 0xFF	; 255
    1c34:	2a f0       	brmi	.+10     	; 0x1c40 <__divsf3_pse+0x6c>
    1c36:	9e 3f       	cpi	r25, 0xFE	; 254
    1c38:	51 05       	cpc	r21, r1
    1c3a:	68 f0       	brcs	.+26     	; 0x1c56 <__divsf3_pse+0x82>
    1c3c:	c9 c0       	rjmp	.+402    	; 0x1dd0 <__fp_inf>
    1c3e:	53 c1       	rjmp	.+678    	; 0x1ee6 <__fp_szero>
    1c40:	5f 3f       	cpi	r21, 0xFF	; 255
    1c42:	ec f3       	brlt	.-6      	; 0x1c3e <__divsf3_pse+0x6a>
    1c44:	98 3e       	cpi	r25, 0xE8	; 232
    1c46:	dc f3       	brlt	.-10     	; 0x1c3e <__divsf3_pse+0x6a>
    1c48:	86 95       	lsr	r24
    1c4a:	77 95       	ror	r23
    1c4c:	67 95       	ror	r22
    1c4e:	b7 95       	ror	r27
    1c50:	f7 95       	ror	r31
    1c52:	9f 5f       	subi	r25, 0xFF	; 255
    1c54:	c9 f7       	brne	.-14     	; 0x1c48 <__divsf3_pse+0x74>
    1c56:	88 0f       	add	r24, r24
    1c58:	91 1d       	adc	r25, r1
    1c5a:	96 95       	lsr	r25
    1c5c:	87 95       	ror	r24
    1c5e:	97 f9       	bld	r25, 7
    1c60:	08 95       	ret
    1c62:	e1 e0       	ldi	r30, 0x01	; 1
    1c64:	66 0f       	add	r22, r22
    1c66:	77 1f       	adc	r23, r23
    1c68:	88 1f       	adc	r24, r24
    1c6a:	bb 1f       	adc	r27, r27
    1c6c:	62 17       	cp	r22, r18
    1c6e:	73 07       	cpc	r23, r19
    1c70:	84 07       	cpc	r24, r20
    1c72:	ba 07       	cpc	r27, r26
    1c74:	20 f0       	brcs	.+8      	; 0x1c7e <__divsf3_pse+0xaa>
    1c76:	62 1b       	sub	r22, r18
    1c78:	73 0b       	sbc	r23, r19
    1c7a:	84 0b       	sbc	r24, r20
    1c7c:	ba 0b       	sbc	r27, r26
    1c7e:	ee 1f       	adc	r30, r30
    1c80:	88 f7       	brcc	.-30     	; 0x1c64 <__divsf3_pse+0x90>
    1c82:	e0 95       	com	r30
    1c84:	08 95       	ret

00001c86 <__fixsfsi>:
    1c86:	04 d0       	rcall	.+8      	; 0x1c90 <__fixunssfsi>
    1c88:	68 94       	set
    1c8a:	b1 11       	cpse	r27, r1
    1c8c:	2c c1       	rjmp	.+600    	; 0x1ee6 <__fp_szero>
    1c8e:	08 95       	ret

00001c90 <__fixunssfsi>:
    1c90:	f8 d0       	rcall	.+496    	; 0x1e82 <__fp_splitA>
    1c92:	88 f0       	brcs	.+34     	; 0x1cb6 <__fixunssfsi+0x26>
    1c94:	9f 57       	subi	r25, 0x7F	; 127
    1c96:	90 f0       	brcs	.+36     	; 0x1cbc <__fixunssfsi+0x2c>
    1c98:	b9 2f       	mov	r27, r25
    1c9a:	99 27       	eor	r25, r25
    1c9c:	b7 51       	subi	r27, 0x17	; 23
    1c9e:	a0 f0       	brcs	.+40     	; 0x1cc8 <__fixunssfsi+0x38>
    1ca0:	d1 f0       	breq	.+52     	; 0x1cd6 <__fixunssfsi+0x46>
    1ca2:	66 0f       	add	r22, r22
    1ca4:	77 1f       	adc	r23, r23
    1ca6:	88 1f       	adc	r24, r24
    1ca8:	99 1f       	adc	r25, r25
    1caa:	1a f0       	brmi	.+6      	; 0x1cb2 <__fixunssfsi+0x22>
    1cac:	ba 95       	dec	r27
    1cae:	c9 f7       	brne	.-14     	; 0x1ca2 <__fixunssfsi+0x12>
    1cb0:	12 c0       	rjmp	.+36     	; 0x1cd6 <__fixunssfsi+0x46>
    1cb2:	b1 30       	cpi	r27, 0x01	; 1
    1cb4:	81 f0       	breq	.+32     	; 0x1cd6 <__fixunssfsi+0x46>
    1cb6:	16 d1       	rcall	.+556    	; 0x1ee4 <__fp_zero>
    1cb8:	b1 e0       	ldi	r27, 0x01	; 1
    1cba:	08 95       	ret
    1cbc:	13 c1       	rjmp	.+550    	; 0x1ee4 <__fp_zero>
    1cbe:	67 2f       	mov	r22, r23
    1cc0:	78 2f       	mov	r23, r24
    1cc2:	88 27       	eor	r24, r24
    1cc4:	b8 5f       	subi	r27, 0xF8	; 248
    1cc6:	39 f0       	breq	.+14     	; 0x1cd6 <__fixunssfsi+0x46>
    1cc8:	b9 3f       	cpi	r27, 0xF9	; 249
    1cca:	cc f3       	brlt	.-14     	; 0x1cbe <__fixunssfsi+0x2e>
    1ccc:	86 95       	lsr	r24
    1cce:	77 95       	ror	r23
    1cd0:	67 95       	ror	r22
    1cd2:	b3 95       	inc	r27
    1cd4:	d9 f7       	brne	.-10     	; 0x1ccc <__fixunssfsi+0x3c>
    1cd6:	3e f4       	brtc	.+14     	; 0x1ce6 <__fixunssfsi+0x56>
    1cd8:	90 95       	com	r25
    1cda:	80 95       	com	r24
    1cdc:	70 95       	com	r23
    1cde:	61 95       	neg	r22
    1ce0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ce4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce6:	08 95       	ret

00001ce8 <__floatunsisf>:
    1ce8:	e8 94       	clt
    1cea:	09 c0       	rjmp	.+18     	; 0x1cfe <__floatsisf+0x12>

00001cec <__floatsisf>:
    1cec:	97 fb       	bst	r25, 7
    1cee:	3e f4       	brtc	.+14     	; 0x1cfe <__floatsisf+0x12>
    1cf0:	90 95       	com	r25
    1cf2:	80 95       	com	r24
    1cf4:	70 95       	com	r23
    1cf6:	61 95       	neg	r22
    1cf8:	7f 4f       	sbci	r23, 0xFF	; 255
    1cfa:	8f 4f       	sbci	r24, 0xFF	; 255
    1cfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cfe:	99 23       	and	r25, r25
    1d00:	a9 f0       	breq	.+42     	; 0x1d2c <__floatsisf+0x40>
    1d02:	f9 2f       	mov	r31, r25
    1d04:	96 e9       	ldi	r25, 0x96	; 150
    1d06:	bb 27       	eor	r27, r27
    1d08:	93 95       	inc	r25
    1d0a:	f6 95       	lsr	r31
    1d0c:	87 95       	ror	r24
    1d0e:	77 95       	ror	r23
    1d10:	67 95       	ror	r22
    1d12:	b7 95       	ror	r27
    1d14:	f1 11       	cpse	r31, r1
    1d16:	f8 cf       	rjmp	.-16     	; 0x1d08 <__floatsisf+0x1c>
    1d18:	fa f4       	brpl	.+62     	; 0x1d58 <__floatsisf+0x6c>
    1d1a:	bb 0f       	add	r27, r27
    1d1c:	11 f4       	brne	.+4      	; 0x1d22 <__floatsisf+0x36>
    1d1e:	60 ff       	sbrs	r22, 0
    1d20:	1b c0       	rjmp	.+54     	; 0x1d58 <__floatsisf+0x6c>
    1d22:	6f 5f       	subi	r22, 0xFF	; 255
    1d24:	7f 4f       	sbci	r23, 0xFF	; 255
    1d26:	8f 4f       	sbci	r24, 0xFF	; 255
    1d28:	9f 4f       	sbci	r25, 0xFF	; 255
    1d2a:	16 c0       	rjmp	.+44     	; 0x1d58 <__floatsisf+0x6c>
    1d2c:	88 23       	and	r24, r24
    1d2e:	11 f0       	breq	.+4      	; 0x1d34 <__floatsisf+0x48>
    1d30:	96 e9       	ldi	r25, 0x96	; 150
    1d32:	11 c0       	rjmp	.+34     	; 0x1d56 <__floatsisf+0x6a>
    1d34:	77 23       	and	r23, r23
    1d36:	21 f0       	breq	.+8      	; 0x1d40 <__floatsisf+0x54>
    1d38:	9e e8       	ldi	r25, 0x8E	; 142
    1d3a:	87 2f       	mov	r24, r23
    1d3c:	76 2f       	mov	r23, r22
    1d3e:	05 c0       	rjmp	.+10     	; 0x1d4a <__floatsisf+0x5e>
    1d40:	66 23       	and	r22, r22
    1d42:	71 f0       	breq	.+28     	; 0x1d60 <__floatsisf+0x74>
    1d44:	96 e8       	ldi	r25, 0x86	; 134
    1d46:	86 2f       	mov	r24, r22
    1d48:	70 e0       	ldi	r23, 0x00	; 0
    1d4a:	60 e0       	ldi	r22, 0x00	; 0
    1d4c:	2a f0       	brmi	.+10     	; 0x1d58 <__floatsisf+0x6c>
    1d4e:	9a 95       	dec	r25
    1d50:	66 0f       	add	r22, r22
    1d52:	77 1f       	adc	r23, r23
    1d54:	88 1f       	adc	r24, r24
    1d56:	da f7       	brpl	.-10     	; 0x1d4e <__floatsisf+0x62>
    1d58:	88 0f       	add	r24, r24
    1d5a:	96 95       	lsr	r25
    1d5c:	87 95       	ror	r24
    1d5e:	97 f9       	bld	r25, 7
    1d60:	08 95       	ret

00001d62 <floor>:
    1d62:	a9 d0       	rcall	.+338    	; 0x1eb6 <__fp_trunc>
    1d64:	80 f0       	brcs	.+32     	; 0x1d86 <floor+0x24>
    1d66:	9f 37       	cpi	r25, 0x7F	; 127
    1d68:	40 f4       	brcc	.+16     	; 0x1d7a <floor+0x18>
    1d6a:	91 11       	cpse	r25, r1
    1d6c:	0e f0       	brts	.+2      	; 0x1d70 <floor+0xe>
    1d6e:	bb c0       	rjmp	.+374    	; 0x1ee6 <__fp_szero>
    1d70:	60 e0       	ldi	r22, 0x00	; 0
    1d72:	70 e0       	ldi	r23, 0x00	; 0
    1d74:	80 e8       	ldi	r24, 0x80	; 128
    1d76:	9f eb       	ldi	r25, 0xBF	; 191
    1d78:	08 95       	ret
    1d7a:	26 f4       	brtc	.+8      	; 0x1d84 <floor+0x22>
    1d7c:	1b 16       	cp	r1, r27
    1d7e:	61 1d       	adc	r22, r1
    1d80:	71 1d       	adc	r23, r1
    1d82:	81 1d       	adc	r24, r1
    1d84:	2b c0       	rjmp	.+86     	; 0x1ddc <__fp_mintl>
    1d86:	45 c0       	rjmp	.+138    	; 0x1e12 <__fp_mpack>

00001d88 <__fp_cmp>:
    1d88:	99 0f       	add	r25, r25
    1d8a:	00 08       	sbc	r0, r0
    1d8c:	55 0f       	add	r21, r21
    1d8e:	aa 0b       	sbc	r26, r26
    1d90:	e0 e8       	ldi	r30, 0x80	; 128
    1d92:	fe ef       	ldi	r31, 0xFE	; 254
    1d94:	16 16       	cp	r1, r22
    1d96:	17 06       	cpc	r1, r23
    1d98:	e8 07       	cpc	r30, r24
    1d9a:	f9 07       	cpc	r31, r25
    1d9c:	c0 f0       	brcs	.+48     	; 0x1dce <__fp_cmp+0x46>
    1d9e:	12 16       	cp	r1, r18
    1da0:	13 06       	cpc	r1, r19
    1da2:	e4 07       	cpc	r30, r20
    1da4:	f5 07       	cpc	r31, r21
    1da6:	98 f0       	brcs	.+38     	; 0x1dce <__fp_cmp+0x46>
    1da8:	62 1b       	sub	r22, r18
    1daa:	73 0b       	sbc	r23, r19
    1dac:	84 0b       	sbc	r24, r20
    1dae:	95 0b       	sbc	r25, r21
    1db0:	39 f4       	brne	.+14     	; 0x1dc0 <__fp_cmp+0x38>
    1db2:	0a 26       	eor	r0, r26
    1db4:	61 f0       	breq	.+24     	; 0x1dce <__fp_cmp+0x46>
    1db6:	23 2b       	or	r18, r19
    1db8:	24 2b       	or	r18, r20
    1dba:	25 2b       	or	r18, r21
    1dbc:	21 f4       	brne	.+8      	; 0x1dc6 <__fp_cmp+0x3e>
    1dbe:	08 95       	ret
    1dc0:	0a 26       	eor	r0, r26
    1dc2:	09 f4       	brne	.+2      	; 0x1dc6 <__fp_cmp+0x3e>
    1dc4:	a1 40       	sbci	r26, 0x01	; 1
    1dc6:	a6 95       	lsr	r26
    1dc8:	8f ef       	ldi	r24, 0xFF	; 255
    1dca:	81 1d       	adc	r24, r1
    1dcc:	81 1d       	adc	r24, r1
    1dce:	08 95       	ret

00001dd0 <__fp_inf>:
    1dd0:	97 f9       	bld	r25, 7
    1dd2:	9f 67       	ori	r25, 0x7F	; 127
    1dd4:	80 e8       	ldi	r24, 0x80	; 128
    1dd6:	70 e0       	ldi	r23, 0x00	; 0
    1dd8:	60 e0       	ldi	r22, 0x00	; 0
    1dda:	08 95       	ret

00001ddc <__fp_mintl>:
    1ddc:	88 23       	and	r24, r24
    1dde:	71 f4       	brne	.+28     	; 0x1dfc <__fp_mintl+0x20>
    1de0:	77 23       	and	r23, r23
    1de2:	21 f0       	breq	.+8      	; 0x1dec <__fp_mintl+0x10>
    1de4:	98 50       	subi	r25, 0x08	; 8
    1de6:	87 2b       	or	r24, r23
    1de8:	76 2f       	mov	r23, r22
    1dea:	07 c0       	rjmp	.+14     	; 0x1dfa <__fp_mintl+0x1e>
    1dec:	66 23       	and	r22, r22
    1dee:	11 f4       	brne	.+4      	; 0x1df4 <__fp_mintl+0x18>
    1df0:	99 27       	eor	r25, r25
    1df2:	0d c0       	rjmp	.+26     	; 0x1e0e <__fp_mintl+0x32>
    1df4:	90 51       	subi	r25, 0x10	; 16
    1df6:	86 2b       	or	r24, r22
    1df8:	70 e0       	ldi	r23, 0x00	; 0
    1dfa:	60 e0       	ldi	r22, 0x00	; 0
    1dfc:	2a f0       	brmi	.+10     	; 0x1e08 <__fp_mintl+0x2c>
    1dfe:	9a 95       	dec	r25
    1e00:	66 0f       	add	r22, r22
    1e02:	77 1f       	adc	r23, r23
    1e04:	88 1f       	adc	r24, r24
    1e06:	da f7       	brpl	.-10     	; 0x1dfe <__fp_mintl+0x22>
    1e08:	88 0f       	add	r24, r24
    1e0a:	96 95       	lsr	r25
    1e0c:	87 95       	ror	r24
    1e0e:	97 f9       	bld	r25, 7
    1e10:	08 95       	ret

00001e12 <__fp_mpack>:
    1e12:	9f 3f       	cpi	r25, 0xFF	; 255
    1e14:	31 f0       	breq	.+12     	; 0x1e22 <__fp_mpack_finite+0xc>

00001e16 <__fp_mpack_finite>:
    1e16:	91 50       	subi	r25, 0x01	; 1
    1e18:	20 f4       	brcc	.+8      	; 0x1e22 <__fp_mpack_finite+0xc>
    1e1a:	87 95       	ror	r24
    1e1c:	77 95       	ror	r23
    1e1e:	67 95       	ror	r22
    1e20:	b7 95       	ror	r27
    1e22:	88 0f       	add	r24, r24
    1e24:	91 1d       	adc	r25, r1
    1e26:	96 95       	lsr	r25
    1e28:	87 95       	ror	r24
    1e2a:	97 f9       	bld	r25, 7
    1e2c:	08 95       	ret

00001e2e <__fp_nan>:
    1e2e:	9f ef       	ldi	r25, 0xFF	; 255
    1e30:	80 ec       	ldi	r24, 0xC0	; 192
    1e32:	08 95       	ret

00001e34 <__fp_pscA>:
    1e34:	00 24       	eor	r0, r0
    1e36:	0a 94       	dec	r0
    1e38:	16 16       	cp	r1, r22
    1e3a:	17 06       	cpc	r1, r23
    1e3c:	18 06       	cpc	r1, r24
    1e3e:	09 06       	cpc	r0, r25
    1e40:	08 95       	ret

00001e42 <__fp_pscB>:
    1e42:	00 24       	eor	r0, r0
    1e44:	0a 94       	dec	r0
    1e46:	12 16       	cp	r1, r18
    1e48:	13 06       	cpc	r1, r19
    1e4a:	14 06       	cpc	r1, r20
    1e4c:	05 06       	cpc	r0, r21
    1e4e:	08 95       	ret

00001e50 <__fp_round>:
    1e50:	09 2e       	mov	r0, r25
    1e52:	03 94       	inc	r0
    1e54:	00 0c       	add	r0, r0
    1e56:	11 f4       	brne	.+4      	; 0x1e5c <__fp_round+0xc>
    1e58:	88 23       	and	r24, r24
    1e5a:	52 f0       	brmi	.+20     	; 0x1e70 <__fp_round+0x20>
    1e5c:	bb 0f       	add	r27, r27
    1e5e:	40 f4       	brcc	.+16     	; 0x1e70 <__fp_round+0x20>
    1e60:	bf 2b       	or	r27, r31
    1e62:	11 f4       	brne	.+4      	; 0x1e68 <__fp_round+0x18>
    1e64:	60 ff       	sbrs	r22, 0
    1e66:	04 c0       	rjmp	.+8      	; 0x1e70 <__fp_round+0x20>
    1e68:	6f 5f       	subi	r22, 0xFF	; 255
    1e6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e6c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e70:	08 95       	ret

00001e72 <__fp_split3>:
    1e72:	57 fd       	sbrc	r21, 7
    1e74:	90 58       	subi	r25, 0x80	; 128
    1e76:	44 0f       	add	r20, r20
    1e78:	55 1f       	adc	r21, r21
    1e7a:	59 f0       	breq	.+22     	; 0x1e92 <__fp_splitA+0x10>
    1e7c:	5f 3f       	cpi	r21, 0xFF	; 255
    1e7e:	71 f0       	breq	.+28     	; 0x1e9c <__fp_splitA+0x1a>
    1e80:	47 95       	ror	r20

00001e82 <__fp_splitA>:
    1e82:	88 0f       	add	r24, r24
    1e84:	97 fb       	bst	r25, 7
    1e86:	99 1f       	adc	r25, r25
    1e88:	61 f0       	breq	.+24     	; 0x1ea2 <__fp_splitA+0x20>
    1e8a:	9f 3f       	cpi	r25, 0xFF	; 255
    1e8c:	79 f0       	breq	.+30     	; 0x1eac <__fp_splitA+0x2a>
    1e8e:	87 95       	ror	r24
    1e90:	08 95       	ret
    1e92:	12 16       	cp	r1, r18
    1e94:	13 06       	cpc	r1, r19
    1e96:	14 06       	cpc	r1, r20
    1e98:	55 1f       	adc	r21, r21
    1e9a:	f2 cf       	rjmp	.-28     	; 0x1e80 <__fp_split3+0xe>
    1e9c:	46 95       	lsr	r20
    1e9e:	f1 df       	rcall	.-30     	; 0x1e82 <__fp_splitA>
    1ea0:	08 c0       	rjmp	.+16     	; 0x1eb2 <__fp_splitA+0x30>
    1ea2:	16 16       	cp	r1, r22
    1ea4:	17 06       	cpc	r1, r23
    1ea6:	18 06       	cpc	r1, r24
    1ea8:	99 1f       	adc	r25, r25
    1eaa:	f1 cf       	rjmp	.-30     	; 0x1e8e <__fp_splitA+0xc>
    1eac:	86 95       	lsr	r24
    1eae:	71 05       	cpc	r23, r1
    1eb0:	61 05       	cpc	r22, r1
    1eb2:	08 94       	sec
    1eb4:	08 95       	ret

00001eb6 <__fp_trunc>:
    1eb6:	e5 df       	rcall	.-54     	; 0x1e82 <__fp_splitA>
    1eb8:	a0 f0       	brcs	.+40     	; 0x1ee2 <__fp_trunc+0x2c>
    1eba:	be e7       	ldi	r27, 0x7E	; 126
    1ebc:	b9 17       	cp	r27, r25
    1ebe:	88 f4       	brcc	.+34     	; 0x1ee2 <__fp_trunc+0x2c>
    1ec0:	bb 27       	eor	r27, r27
    1ec2:	9f 38       	cpi	r25, 0x8F	; 143
    1ec4:	60 f4       	brcc	.+24     	; 0x1ede <__fp_trunc+0x28>
    1ec6:	16 16       	cp	r1, r22
    1ec8:	b1 1d       	adc	r27, r1
    1eca:	67 2f       	mov	r22, r23
    1ecc:	78 2f       	mov	r23, r24
    1ece:	88 27       	eor	r24, r24
    1ed0:	98 5f       	subi	r25, 0xF8	; 248
    1ed2:	f7 cf       	rjmp	.-18     	; 0x1ec2 <__fp_trunc+0xc>
    1ed4:	86 95       	lsr	r24
    1ed6:	77 95       	ror	r23
    1ed8:	67 95       	ror	r22
    1eda:	b1 1d       	adc	r27, r1
    1edc:	93 95       	inc	r25
    1ede:	96 39       	cpi	r25, 0x96	; 150
    1ee0:	c8 f3       	brcs	.-14     	; 0x1ed4 <__fp_trunc+0x1e>
    1ee2:	08 95       	ret

00001ee4 <__fp_zero>:
    1ee4:	e8 94       	clt

00001ee6 <__fp_szero>:
    1ee6:	bb 27       	eor	r27, r27
    1ee8:	66 27       	eor	r22, r22
    1eea:	77 27       	eor	r23, r23
    1eec:	cb 01       	movw	r24, r22
    1eee:	97 f9       	bld	r25, 7
    1ef0:	08 95       	ret

00001ef2 <__divmodhi4>:
    1ef2:	97 fb       	bst	r25, 7
    1ef4:	09 2e       	mov	r0, r25
    1ef6:	07 26       	eor	r0, r23
    1ef8:	0a d0       	rcall	.+20     	; 0x1f0e <__divmodhi4_neg1>
    1efa:	77 fd       	sbrc	r23, 7
    1efc:	04 d0       	rcall	.+8      	; 0x1f06 <__divmodhi4_neg2>
    1efe:	43 d0       	rcall	.+134    	; 0x1f86 <__udivmodhi4>
    1f00:	06 d0       	rcall	.+12     	; 0x1f0e <__divmodhi4_neg1>
    1f02:	00 20       	and	r0, r0
    1f04:	1a f4       	brpl	.+6      	; 0x1f0c <__divmodhi4_exit>

00001f06 <__divmodhi4_neg2>:
    1f06:	70 95       	com	r23
    1f08:	61 95       	neg	r22
    1f0a:	7f 4f       	sbci	r23, 0xFF	; 255

00001f0c <__divmodhi4_exit>:
    1f0c:	08 95       	ret

00001f0e <__divmodhi4_neg1>:
    1f0e:	f6 f7       	brtc	.-4      	; 0x1f0c <__divmodhi4_exit>
    1f10:	90 95       	com	r25
    1f12:	81 95       	neg	r24
    1f14:	9f 4f       	sbci	r25, 0xFF	; 255
    1f16:	08 95       	ret

00001f18 <__prologue_saves__>:
    1f18:	2f 92       	push	r2
    1f1a:	3f 92       	push	r3
    1f1c:	4f 92       	push	r4
    1f1e:	5f 92       	push	r5
    1f20:	6f 92       	push	r6
    1f22:	7f 92       	push	r7
    1f24:	8f 92       	push	r8
    1f26:	9f 92       	push	r9
    1f28:	af 92       	push	r10
    1f2a:	bf 92       	push	r11
    1f2c:	cf 92       	push	r12
    1f2e:	df 92       	push	r13
    1f30:	ef 92       	push	r14
    1f32:	ff 92       	push	r15
    1f34:	0f 93       	push	r16
    1f36:	1f 93       	push	r17
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	cd b7       	in	r28, 0x3d	; 61
    1f3e:	de b7       	in	r29, 0x3e	; 62
    1f40:	ca 1b       	sub	r28, r26
    1f42:	db 0b       	sbc	r29, r27
    1f44:	0f b6       	in	r0, 0x3f	; 63
    1f46:	f8 94       	cli
    1f48:	de bf       	out	0x3e, r29	; 62
    1f4a:	0f be       	out	0x3f, r0	; 63
    1f4c:	cd bf       	out	0x3d, r28	; 61
    1f4e:	09 94       	ijmp

00001f50 <__epilogue_restores__>:
    1f50:	2a 88       	ldd	r2, Y+18	; 0x12
    1f52:	39 88       	ldd	r3, Y+17	; 0x11
    1f54:	48 88       	ldd	r4, Y+16	; 0x10
    1f56:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f58:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f5a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f5c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f5e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f60:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f62:	b9 84       	ldd	r11, Y+9	; 0x09
    1f64:	c8 84       	ldd	r12, Y+8	; 0x08
    1f66:	df 80       	ldd	r13, Y+7	; 0x07
    1f68:	ee 80       	ldd	r14, Y+6	; 0x06
    1f6a:	fd 80       	ldd	r15, Y+5	; 0x05
    1f6c:	0c 81       	ldd	r16, Y+4	; 0x04
    1f6e:	1b 81       	ldd	r17, Y+3	; 0x03
    1f70:	aa 81       	ldd	r26, Y+2	; 0x02
    1f72:	b9 81       	ldd	r27, Y+1	; 0x01
    1f74:	ce 0f       	add	r28, r30
    1f76:	d1 1d       	adc	r29, r1
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	cd bf       	out	0x3d, r28	; 61
    1f82:	ed 01       	movw	r28, r26
    1f84:	08 95       	ret

00001f86 <__udivmodhi4>:
    1f86:	aa 1b       	sub	r26, r26
    1f88:	bb 1b       	sub	r27, r27
    1f8a:	51 e1       	ldi	r21, 0x11	; 17
    1f8c:	07 c0       	rjmp	.+14     	; 0x1f9c <__udivmodhi4_ep>

00001f8e <__udivmodhi4_loop>:
    1f8e:	aa 1f       	adc	r26, r26
    1f90:	bb 1f       	adc	r27, r27
    1f92:	a6 17       	cp	r26, r22
    1f94:	b7 07       	cpc	r27, r23
    1f96:	10 f0       	brcs	.+4      	; 0x1f9c <__udivmodhi4_ep>
    1f98:	a6 1b       	sub	r26, r22
    1f9a:	b7 0b       	sbc	r27, r23

00001f9c <__udivmodhi4_ep>:
    1f9c:	88 1f       	adc	r24, r24
    1f9e:	99 1f       	adc	r25, r25
    1fa0:	5a 95       	dec	r21
    1fa2:	a9 f7       	brne	.-22     	; 0x1f8e <__udivmodhi4_loop>
    1fa4:	80 95       	com	r24
    1fa6:	90 95       	com	r25
    1fa8:	bc 01       	movw	r22, r24
    1faa:	cd 01       	movw	r24, r26
    1fac:	08 95       	ret

00001fae <atof>:
    1fae:	66 27       	eor	r22, r22
    1fb0:	77 27       	eor	r23, r23
    1fb2:	0c 94 ad 11 	jmp	0x235a	; 0x235a <strtod>

00001fb6 <atoi>:
    1fb6:	fc 01       	movw	r30, r24
    1fb8:	88 27       	eor	r24, r24
    1fba:	99 27       	eor	r25, r25
    1fbc:	e8 94       	clt
    1fbe:	21 91       	ld	r18, Z+
    1fc0:	20 32       	cpi	r18, 0x20	; 32
    1fc2:	e9 f3       	breq	.-6      	; 0x1fbe <atoi+0x8>
    1fc4:	29 30       	cpi	r18, 0x09	; 9
    1fc6:	10 f0       	brcs	.+4      	; 0x1fcc <atoi+0x16>
    1fc8:	2e 30       	cpi	r18, 0x0E	; 14
    1fca:	c8 f3       	brcs	.-14     	; 0x1fbe <atoi+0x8>
    1fcc:	2b 32       	cpi	r18, 0x2B	; 43
    1fce:	41 f0       	breq	.+16     	; 0x1fe0 <atoi+0x2a>
    1fd0:	2d 32       	cpi	r18, 0x2D	; 45
    1fd2:	39 f4       	brne	.+14     	; 0x1fe2 <atoi+0x2c>
    1fd4:	68 94       	set
    1fd6:	04 c0       	rjmp	.+8      	; 0x1fe0 <atoi+0x2a>
    1fd8:	0e 94 f7 10 	call	0x21ee	; 0x21ee <__mulhi_const_10>
    1fdc:	82 0f       	add	r24, r18
    1fde:	91 1d       	adc	r25, r1
    1fe0:	21 91       	ld	r18, Z+
    1fe2:	20 53       	subi	r18, 0x30	; 48
    1fe4:	2a 30       	cpi	r18, 0x0A	; 10
    1fe6:	c0 f3       	brcs	.-16     	; 0x1fd8 <atoi+0x22>
    1fe8:	1e f4       	brtc	.+6      	; 0x1ff0 <atoi+0x3a>
    1fea:	90 95       	com	r25
    1fec:	81 95       	neg	r24
    1fee:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff0:	08 95       	ret

00001ff2 <__ftoa_engine>:
    1ff2:	28 30       	cpi	r18, 0x08	; 8
    1ff4:	08 f0       	brcs	.+2      	; 0x1ff8 <__ftoa_engine+0x6>
    1ff6:	27 e0       	ldi	r18, 0x07	; 7
    1ff8:	33 27       	eor	r19, r19
    1ffa:	da 01       	movw	r26, r20
    1ffc:	99 0f       	add	r25, r25
    1ffe:	31 1d       	adc	r19, r1
    2000:	87 fd       	sbrc	r24, 7
    2002:	91 60       	ori	r25, 0x01	; 1
    2004:	00 96       	adiw	r24, 0x00	; 0
    2006:	61 05       	cpc	r22, r1
    2008:	71 05       	cpc	r23, r1
    200a:	39 f4       	brne	.+14     	; 0x201a <__ftoa_engine+0x28>
    200c:	32 60       	ori	r19, 0x02	; 2
    200e:	2e 5f       	subi	r18, 0xFE	; 254
    2010:	3d 93       	st	X+, r19
    2012:	30 e3       	ldi	r19, 0x30	; 48
    2014:	2a 95       	dec	r18
    2016:	e1 f7       	brne	.-8      	; 0x2010 <__ftoa_engine+0x1e>
    2018:	08 95       	ret
    201a:	9f 3f       	cpi	r25, 0xFF	; 255
    201c:	30 f0       	brcs	.+12     	; 0x202a <__ftoa_engine+0x38>
    201e:	80 38       	cpi	r24, 0x80	; 128
    2020:	71 05       	cpc	r23, r1
    2022:	61 05       	cpc	r22, r1
    2024:	09 f0       	breq	.+2      	; 0x2028 <__ftoa_engine+0x36>
    2026:	3c 5f       	subi	r19, 0xFC	; 252
    2028:	3c 5f       	subi	r19, 0xFC	; 252
    202a:	3d 93       	st	X+, r19
    202c:	91 30       	cpi	r25, 0x01	; 1
    202e:	08 f0       	brcs	.+2      	; 0x2032 <__ftoa_engine+0x40>
    2030:	80 68       	ori	r24, 0x80	; 128
    2032:	91 1d       	adc	r25, r1
    2034:	df 93       	push	r29
    2036:	cf 93       	push	r28
    2038:	1f 93       	push	r17
    203a:	0f 93       	push	r16
    203c:	ff 92       	push	r15
    203e:	ef 92       	push	r14
    2040:	19 2f       	mov	r17, r25
    2042:	98 7f       	andi	r25, 0xF8	; 248
    2044:	96 95       	lsr	r25
    2046:	e9 2f       	mov	r30, r25
    2048:	96 95       	lsr	r25
    204a:	96 95       	lsr	r25
    204c:	e9 0f       	add	r30, r25
    204e:	ff 27       	eor	r31, r31
    2050:	ea 54       	subi	r30, 0x4A	; 74
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	99 27       	eor	r25, r25
    2056:	33 27       	eor	r19, r19
    2058:	ee 24       	eor	r14, r14
    205a:	ff 24       	eor	r15, r15
    205c:	a7 01       	movw	r20, r14
    205e:	e7 01       	movw	r28, r14
    2060:	05 90       	lpm	r0, Z+
    2062:	08 94       	sec
    2064:	07 94       	ror	r0
    2066:	28 f4       	brcc	.+10     	; 0x2072 <__ftoa_engine+0x80>
    2068:	36 0f       	add	r19, r22
    206a:	e7 1e       	adc	r14, r23
    206c:	f8 1e       	adc	r15, r24
    206e:	49 1f       	adc	r20, r25
    2070:	51 1d       	adc	r21, r1
    2072:	66 0f       	add	r22, r22
    2074:	77 1f       	adc	r23, r23
    2076:	88 1f       	adc	r24, r24
    2078:	99 1f       	adc	r25, r25
    207a:	06 94       	lsr	r0
    207c:	a1 f7       	brne	.-24     	; 0x2066 <__ftoa_engine+0x74>
    207e:	05 90       	lpm	r0, Z+
    2080:	07 94       	ror	r0
    2082:	28 f4       	brcc	.+10     	; 0x208e <__ftoa_engine+0x9c>
    2084:	e7 0e       	add	r14, r23
    2086:	f8 1e       	adc	r15, r24
    2088:	49 1f       	adc	r20, r25
    208a:	56 1f       	adc	r21, r22
    208c:	c1 1d       	adc	r28, r1
    208e:	77 0f       	add	r23, r23
    2090:	88 1f       	adc	r24, r24
    2092:	99 1f       	adc	r25, r25
    2094:	66 1f       	adc	r22, r22
    2096:	06 94       	lsr	r0
    2098:	a1 f7       	brne	.-24     	; 0x2082 <__ftoa_engine+0x90>
    209a:	05 90       	lpm	r0, Z+
    209c:	07 94       	ror	r0
    209e:	28 f4       	brcc	.+10     	; 0x20aa <__ftoa_engine+0xb8>
    20a0:	f8 0e       	add	r15, r24
    20a2:	49 1f       	adc	r20, r25
    20a4:	56 1f       	adc	r21, r22
    20a6:	c7 1f       	adc	r28, r23
    20a8:	d1 1d       	adc	r29, r1
    20aa:	88 0f       	add	r24, r24
    20ac:	99 1f       	adc	r25, r25
    20ae:	66 1f       	adc	r22, r22
    20b0:	77 1f       	adc	r23, r23
    20b2:	06 94       	lsr	r0
    20b4:	a1 f7       	brne	.-24     	; 0x209e <__ftoa_engine+0xac>
    20b6:	05 90       	lpm	r0, Z+
    20b8:	07 94       	ror	r0
    20ba:	20 f4       	brcc	.+8      	; 0x20c4 <__ftoa_engine+0xd2>
    20bc:	49 0f       	add	r20, r25
    20be:	56 1f       	adc	r21, r22
    20c0:	c7 1f       	adc	r28, r23
    20c2:	d8 1f       	adc	r29, r24
    20c4:	99 0f       	add	r25, r25
    20c6:	66 1f       	adc	r22, r22
    20c8:	77 1f       	adc	r23, r23
    20ca:	88 1f       	adc	r24, r24
    20cc:	06 94       	lsr	r0
    20ce:	a9 f7       	brne	.-22     	; 0x20ba <__ftoa_engine+0xc8>
    20d0:	84 91       	lpm	r24, Z+
    20d2:	10 95       	com	r17
    20d4:	17 70       	andi	r17, 0x07	; 7
    20d6:	41 f0       	breq	.+16     	; 0x20e8 <__ftoa_engine+0xf6>
    20d8:	d6 95       	lsr	r29
    20da:	c7 95       	ror	r28
    20dc:	57 95       	ror	r21
    20de:	47 95       	ror	r20
    20e0:	f7 94       	ror	r15
    20e2:	e7 94       	ror	r14
    20e4:	1a 95       	dec	r17
    20e6:	c1 f7       	brne	.-16     	; 0x20d8 <__ftoa_engine+0xe6>
    20e8:	ec e5       	ldi	r30, 0x5C	; 92
    20ea:	f0 e0       	ldi	r31, 0x00	; 0
    20ec:	68 94       	set
    20ee:	15 90       	lpm	r1, Z+
    20f0:	15 91       	lpm	r17, Z+
    20f2:	35 91       	lpm	r19, Z+
    20f4:	65 91       	lpm	r22, Z+
    20f6:	95 91       	lpm	r25, Z+
    20f8:	05 90       	lpm	r0, Z+
    20fa:	7f e2       	ldi	r23, 0x2F	; 47
    20fc:	73 95       	inc	r23
    20fe:	e1 18       	sub	r14, r1
    2100:	f1 0a       	sbc	r15, r17
    2102:	43 0b       	sbc	r20, r19
    2104:	56 0b       	sbc	r21, r22
    2106:	c9 0b       	sbc	r28, r25
    2108:	d0 09       	sbc	r29, r0
    210a:	c0 f7       	brcc	.-16     	; 0x20fc <__ftoa_engine+0x10a>
    210c:	e1 0c       	add	r14, r1
    210e:	f1 1e       	adc	r15, r17
    2110:	43 1f       	adc	r20, r19
    2112:	56 1f       	adc	r21, r22
    2114:	c9 1f       	adc	r28, r25
    2116:	d0 1d       	adc	r29, r0
    2118:	7e f4       	brtc	.+30     	; 0x2138 <__ftoa_engine+0x146>
    211a:	70 33       	cpi	r23, 0x30	; 48
    211c:	11 f4       	brne	.+4      	; 0x2122 <__ftoa_engine+0x130>
    211e:	8a 95       	dec	r24
    2120:	e6 cf       	rjmp	.-52     	; 0x20ee <__ftoa_engine+0xfc>
    2122:	e8 94       	clt
    2124:	01 50       	subi	r16, 0x01	; 1
    2126:	30 f0       	brcs	.+12     	; 0x2134 <__ftoa_engine+0x142>
    2128:	08 0f       	add	r16, r24
    212a:	0a f4       	brpl	.+2      	; 0x212e <__ftoa_engine+0x13c>
    212c:	00 27       	eor	r16, r16
    212e:	02 17       	cp	r16, r18
    2130:	08 f4       	brcc	.+2      	; 0x2134 <__ftoa_engine+0x142>
    2132:	20 2f       	mov	r18, r16
    2134:	23 95       	inc	r18
    2136:	02 2f       	mov	r16, r18
    2138:	7a 33       	cpi	r23, 0x3A	; 58
    213a:	28 f0       	brcs	.+10     	; 0x2146 <__ftoa_engine+0x154>
    213c:	79 e3       	ldi	r23, 0x39	; 57
    213e:	7d 93       	st	X+, r23
    2140:	2a 95       	dec	r18
    2142:	e9 f7       	brne	.-6      	; 0x213e <__ftoa_engine+0x14c>
    2144:	10 c0       	rjmp	.+32     	; 0x2166 <__ftoa_engine+0x174>
    2146:	7d 93       	st	X+, r23
    2148:	2a 95       	dec	r18
    214a:	89 f6       	brne	.-94     	; 0x20ee <__ftoa_engine+0xfc>
    214c:	06 94       	lsr	r0
    214e:	97 95       	ror	r25
    2150:	67 95       	ror	r22
    2152:	37 95       	ror	r19
    2154:	17 95       	ror	r17
    2156:	17 94       	ror	r1
    2158:	e1 18       	sub	r14, r1
    215a:	f1 0a       	sbc	r15, r17
    215c:	43 0b       	sbc	r20, r19
    215e:	56 0b       	sbc	r21, r22
    2160:	c9 0b       	sbc	r28, r25
    2162:	d0 09       	sbc	r29, r0
    2164:	98 f0       	brcs	.+38     	; 0x218c <__ftoa_engine+0x19a>
    2166:	23 95       	inc	r18
    2168:	7e 91       	ld	r23, -X
    216a:	73 95       	inc	r23
    216c:	7a 33       	cpi	r23, 0x3A	; 58
    216e:	08 f0       	brcs	.+2      	; 0x2172 <__ftoa_engine+0x180>
    2170:	70 e3       	ldi	r23, 0x30	; 48
    2172:	7c 93       	st	X, r23
    2174:	20 13       	cpse	r18, r16
    2176:	b8 f7       	brcc	.-18     	; 0x2166 <__ftoa_engine+0x174>
    2178:	7e 91       	ld	r23, -X
    217a:	70 61       	ori	r23, 0x10	; 16
    217c:	7d 93       	st	X+, r23
    217e:	30 f0       	brcs	.+12     	; 0x218c <__ftoa_engine+0x19a>
    2180:	83 95       	inc	r24
    2182:	71 e3       	ldi	r23, 0x31	; 49
    2184:	7d 93       	st	X+, r23
    2186:	70 e3       	ldi	r23, 0x30	; 48
    2188:	2a 95       	dec	r18
    218a:	e1 f7       	brne	.-8      	; 0x2184 <__ftoa_engine+0x192>
    218c:	11 24       	eor	r1, r1
    218e:	ef 90       	pop	r14
    2190:	ff 90       	pop	r15
    2192:	0f 91       	pop	r16
    2194:	1f 91       	pop	r17
    2196:	cf 91       	pop	r28
    2198:	df 91       	pop	r29
    219a:	99 27       	eor	r25, r25
    219c:	87 fd       	sbrc	r24, 7
    219e:	90 95       	com	r25
    21a0:	08 95       	ret

000021a2 <strnlen_P>:
    21a2:	fc 01       	movw	r30, r24
    21a4:	05 90       	lpm	r0, Z+
    21a6:	61 50       	subi	r22, 0x01	; 1
    21a8:	70 40       	sbci	r23, 0x00	; 0
    21aa:	01 10       	cpse	r0, r1
    21ac:	d8 f7       	brcc	.-10     	; 0x21a4 <strnlen_P+0x2>
    21ae:	80 95       	com	r24
    21b0:	90 95       	com	r25
    21b2:	8e 0f       	add	r24, r30
    21b4:	9f 1f       	adc	r25, r31
    21b6:	08 95       	ret

000021b8 <strcmp>:
    21b8:	fb 01       	movw	r30, r22
    21ba:	dc 01       	movw	r26, r24
    21bc:	8d 91       	ld	r24, X+
    21be:	01 90       	ld	r0, Z+
    21c0:	80 19       	sub	r24, r0
    21c2:	01 10       	cpse	r0, r1
    21c4:	d9 f3       	breq	.-10     	; 0x21bc <strcmp+0x4>
    21c6:	99 0b       	sbc	r25, r25
    21c8:	08 95       	ret

000021ca <strcpy>:
    21ca:	fb 01       	movw	r30, r22
    21cc:	dc 01       	movw	r26, r24
    21ce:	01 90       	ld	r0, Z+
    21d0:	0d 92       	st	X+, r0
    21d2:	00 20       	and	r0, r0
    21d4:	e1 f7       	brne	.-8      	; 0x21ce <strcpy+0x4>
    21d6:	08 95       	ret

000021d8 <strnlen>:
    21d8:	fc 01       	movw	r30, r24
    21da:	61 50       	subi	r22, 0x01	; 1
    21dc:	70 40       	sbci	r23, 0x00	; 0
    21de:	01 90       	ld	r0, Z+
    21e0:	01 10       	cpse	r0, r1
    21e2:	d8 f7       	brcc	.-10     	; 0x21da <strnlen+0x2>
    21e4:	80 95       	com	r24
    21e6:	90 95       	com	r25
    21e8:	8e 0f       	add	r24, r30
    21ea:	9f 1f       	adc	r25, r31
    21ec:	08 95       	ret

000021ee <__mulhi_const_10>:
    21ee:	7a e0       	ldi	r23, 0x0A	; 10
    21f0:	97 9f       	mul	r25, r23
    21f2:	90 2d       	mov	r25, r0
    21f4:	87 9f       	mul	r24, r23
    21f6:	80 2d       	mov	r24, r0
    21f8:	91 0d       	add	r25, r1
    21fa:	11 24       	eor	r1, r1
    21fc:	08 95       	ret

000021fe <fputc>:
    21fe:	0f 93       	push	r16
    2200:	1f 93       	push	r17
    2202:	cf 93       	push	r28
    2204:	df 93       	push	r29
    2206:	8c 01       	movw	r16, r24
    2208:	eb 01       	movw	r28, r22
    220a:	8b 81       	ldd	r24, Y+3	; 0x03
    220c:	81 ff       	sbrs	r24, 1
    220e:	1b c0       	rjmp	.+54     	; 0x2246 <fputc+0x48>
    2210:	82 ff       	sbrs	r24, 2
    2212:	0d c0       	rjmp	.+26     	; 0x222e <fputc+0x30>
    2214:	2e 81       	ldd	r18, Y+6	; 0x06
    2216:	3f 81       	ldd	r19, Y+7	; 0x07
    2218:	8c 81       	ldd	r24, Y+4	; 0x04
    221a:	9d 81       	ldd	r25, Y+5	; 0x05
    221c:	28 17       	cp	r18, r24
    221e:	39 07       	cpc	r19, r25
    2220:	64 f4       	brge	.+24     	; 0x223a <fputc+0x3c>
    2222:	e8 81       	ld	r30, Y
    2224:	f9 81       	ldd	r31, Y+1	; 0x01
    2226:	01 93       	st	Z+, r16
    2228:	f9 83       	std	Y+1, r31	; 0x01
    222a:	e8 83       	st	Y, r30
    222c:	06 c0       	rjmp	.+12     	; 0x223a <fputc+0x3c>
    222e:	e8 85       	ldd	r30, Y+8	; 0x08
    2230:	f9 85       	ldd	r31, Y+9	; 0x09
    2232:	80 2f       	mov	r24, r16
    2234:	09 95       	icall
    2236:	89 2b       	or	r24, r25
    2238:	31 f4       	brne	.+12     	; 0x2246 <fputc+0x48>
    223a:	8e 81       	ldd	r24, Y+6	; 0x06
    223c:	9f 81       	ldd	r25, Y+7	; 0x07
    223e:	01 96       	adiw	r24, 0x01	; 1
    2240:	9f 83       	std	Y+7, r25	; 0x07
    2242:	8e 83       	std	Y+6, r24	; 0x06
    2244:	02 c0       	rjmp	.+4      	; 0x224a <fputc+0x4c>
    2246:	0f ef       	ldi	r16, 0xFF	; 255
    2248:	1f ef       	ldi	r17, 0xFF	; 255
    224a:	c8 01       	movw	r24, r16
    224c:	df 91       	pop	r29
    224e:	cf 91       	pop	r28
    2250:	1f 91       	pop	r17
    2252:	0f 91       	pop	r16
    2254:	08 95       	ret

00002256 <sprintf>:
    2256:	ae e0       	ldi	r26, 0x0E	; 14
    2258:	b0 e0       	ldi	r27, 0x00	; 0
    225a:	e1 e3       	ldi	r30, 0x31	; 49
    225c:	f1 e1       	ldi	r31, 0x11	; 17
    225e:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__prologue_saves__+0x1c>
    2262:	0d 89       	ldd	r16, Y+21	; 0x15
    2264:	1e 89       	ldd	r17, Y+22	; 0x16
    2266:	86 e0       	ldi	r24, 0x06	; 6
    2268:	8c 83       	std	Y+4, r24	; 0x04
    226a:	1a 83       	std	Y+2, r17	; 0x02
    226c:	09 83       	std	Y+1, r16	; 0x01
    226e:	8f ef       	ldi	r24, 0xFF	; 255
    2270:	9f e7       	ldi	r25, 0x7F	; 127
    2272:	9e 83       	std	Y+6, r25	; 0x06
    2274:	8d 83       	std	Y+5, r24	; 0x05
    2276:	9e 01       	movw	r18, r28
    2278:	27 5e       	subi	r18, 0xE7	; 231
    227a:	3f 4f       	sbci	r19, 0xFF	; 255
    227c:	ce 01       	movw	r24, r28
    227e:	01 96       	adiw	r24, 0x01	; 1
    2280:	6f 89       	ldd	r22, Y+23	; 0x17
    2282:	78 8d       	ldd	r23, Y+24	; 0x18
    2284:	a9 01       	movw	r20, r18
    2286:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <vfprintf>
    228a:	2f 81       	ldd	r18, Y+7	; 0x07
    228c:	38 85       	ldd	r19, Y+8	; 0x08
    228e:	02 0f       	add	r16, r18
    2290:	13 1f       	adc	r17, r19
    2292:	f8 01       	movw	r30, r16
    2294:	10 82       	st	Z, r1
    2296:	2e 96       	adiw	r28, 0x0e	; 14
    2298:	e4 e0       	ldi	r30, 0x04	; 4
    229a:	0c 94 b6 0f 	jmp	0x1f6c	; 0x1f6c <__epilogue_restores__+0x1c>

0000229e <__ultoa_invert>:
    229e:	fa 01       	movw	r30, r20
    22a0:	aa 27       	eor	r26, r26
    22a2:	28 30       	cpi	r18, 0x08	; 8
    22a4:	51 f1       	breq	.+84     	; 0x22fa <__ultoa_invert+0x5c>
    22a6:	20 31       	cpi	r18, 0x10	; 16
    22a8:	81 f1       	breq	.+96     	; 0x230a <__ultoa_invert+0x6c>
    22aa:	e8 94       	clt
    22ac:	6f 93       	push	r22
    22ae:	6e 7f       	andi	r22, 0xFE	; 254
    22b0:	6e 5f       	subi	r22, 0xFE	; 254
    22b2:	7f 4f       	sbci	r23, 0xFF	; 255
    22b4:	8f 4f       	sbci	r24, 0xFF	; 255
    22b6:	9f 4f       	sbci	r25, 0xFF	; 255
    22b8:	af 4f       	sbci	r26, 0xFF	; 255
    22ba:	b1 e0       	ldi	r27, 0x01	; 1
    22bc:	3e d0       	rcall	.+124    	; 0x233a <__ultoa_invert+0x9c>
    22be:	b4 e0       	ldi	r27, 0x04	; 4
    22c0:	3c d0       	rcall	.+120    	; 0x233a <__ultoa_invert+0x9c>
    22c2:	67 0f       	add	r22, r23
    22c4:	78 1f       	adc	r23, r24
    22c6:	89 1f       	adc	r24, r25
    22c8:	9a 1f       	adc	r25, r26
    22ca:	a1 1d       	adc	r26, r1
    22cc:	68 0f       	add	r22, r24
    22ce:	79 1f       	adc	r23, r25
    22d0:	8a 1f       	adc	r24, r26
    22d2:	91 1d       	adc	r25, r1
    22d4:	a1 1d       	adc	r26, r1
    22d6:	6a 0f       	add	r22, r26
    22d8:	71 1d       	adc	r23, r1
    22da:	81 1d       	adc	r24, r1
    22dc:	91 1d       	adc	r25, r1
    22de:	a1 1d       	adc	r26, r1
    22e0:	20 d0       	rcall	.+64     	; 0x2322 <__ultoa_invert+0x84>
    22e2:	09 f4       	brne	.+2      	; 0x22e6 <__ultoa_invert+0x48>
    22e4:	68 94       	set
    22e6:	3f 91       	pop	r19
    22e8:	2a e0       	ldi	r18, 0x0A	; 10
    22ea:	26 9f       	mul	r18, r22
    22ec:	11 24       	eor	r1, r1
    22ee:	30 19       	sub	r19, r0
    22f0:	30 5d       	subi	r19, 0xD0	; 208
    22f2:	31 93       	st	Z+, r19
    22f4:	de f6       	brtc	.-74     	; 0x22ac <__ultoa_invert+0xe>
    22f6:	cf 01       	movw	r24, r30
    22f8:	08 95       	ret
    22fa:	46 2f       	mov	r20, r22
    22fc:	47 70       	andi	r20, 0x07	; 7
    22fe:	40 5d       	subi	r20, 0xD0	; 208
    2300:	41 93       	st	Z+, r20
    2302:	b3 e0       	ldi	r27, 0x03	; 3
    2304:	0f d0       	rcall	.+30     	; 0x2324 <__ultoa_invert+0x86>
    2306:	c9 f7       	brne	.-14     	; 0x22fa <__ultoa_invert+0x5c>
    2308:	f6 cf       	rjmp	.-20     	; 0x22f6 <__ultoa_invert+0x58>
    230a:	46 2f       	mov	r20, r22
    230c:	4f 70       	andi	r20, 0x0F	; 15
    230e:	40 5d       	subi	r20, 0xD0	; 208
    2310:	4a 33       	cpi	r20, 0x3A	; 58
    2312:	18 f0       	brcs	.+6      	; 0x231a <__ultoa_invert+0x7c>
    2314:	49 5d       	subi	r20, 0xD9	; 217
    2316:	31 fd       	sbrc	r19, 1
    2318:	40 52       	subi	r20, 0x20	; 32
    231a:	41 93       	st	Z+, r20
    231c:	02 d0       	rcall	.+4      	; 0x2322 <__ultoa_invert+0x84>
    231e:	a9 f7       	brne	.-22     	; 0x230a <__ultoa_invert+0x6c>
    2320:	ea cf       	rjmp	.-44     	; 0x22f6 <__ultoa_invert+0x58>
    2322:	b4 e0       	ldi	r27, 0x04	; 4
    2324:	a6 95       	lsr	r26
    2326:	97 95       	ror	r25
    2328:	87 95       	ror	r24
    232a:	77 95       	ror	r23
    232c:	67 95       	ror	r22
    232e:	ba 95       	dec	r27
    2330:	c9 f7       	brne	.-14     	; 0x2324 <__ultoa_invert+0x86>
    2332:	00 97       	sbiw	r24, 0x00	; 0
    2334:	61 05       	cpc	r22, r1
    2336:	71 05       	cpc	r23, r1
    2338:	08 95       	ret
    233a:	9b 01       	movw	r18, r22
    233c:	ac 01       	movw	r20, r24
    233e:	0a 2e       	mov	r0, r26
    2340:	06 94       	lsr	r0
    2342:	57 95       	ror	r21
    2344:	47 95       	ror	r20
    2346:	37 95       	ror	r19
    2348:	27 95       	ror	r18
    234a:	ba 95       	dec	r27
    234c:	c9 f7       	brne	.-14     	; 0x2340 <__ultoa_invert+0xa2>
    234e:	62 0f       	add	r22, r18
    2350:	73 1f       	adc	r23, r19
    2352:	84 1f       	adc	r24, r20
    2354:	95 1f       	adc	r25, r21
    2356:	a0 1d       	adc	r26, r0
    2358:	08 95       	ret

0000235a <strtod>:
    235a:	a0 e0       	ldi	r26, 0x00	; 0
    235c:	b0 e0       	ldi	r27, 0x00	; 0
    235e:	e3 eb       	ldi	r30, 0xB3	; 179
    2360:	f1 e1       	ldi	r31, 0x11	; 17
    2362:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <__prologue_saves__+0xc>
    2366:	ec 01       	movw	r28, r24
    2368:	5b 01       	movw	r10, r22
    236a:	61 15       	cp	r22, r1
    236c:	71 05       	cpc	r23, r1
    236e:	19 f0       	breq	.+6      	; 0x2376 <strtod+0x1c>
    2370:	fb 01       	movw	r30, r22
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	80 83       	st	Z, r24
    2376:	f9 90       	ld	r15, Y+
    2378:	8f 2d       	mov	r24, r15
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	0e 94 0d 13 	call	0x261a	; 0x261a <isspace>
    2380:	89 2b       	or	r24, r25
    2382:	c9 f7       	brne	.-14     	; 0x2376 <strtod+0x1c>
    2384:	fd e2       	ldi	r31, 0x2D	; 45
    2386:	ff 16       	cp	r15, r31
    2388:	21 f4       	brne	.+8      	; 0x2392 <strtod+0x38>
    238a:	f9 90       	ld	r15, Y+
    238c:	ee 24       	eor	r14, r14
    238e:	e3 94       	inc	r14
    2390:	05 c0       	rjmp	.+10     	; 0x239c <strtod+0x42>
    2392:	2b e2       	ldi	r18, 0x2B	; 43
    2394:	f2 16       	cp	r15, r18
    2396:	09 f4       	brne	.+2      	; 0x239a <strtod+0x40>
    2398:	f9 90       	ld	r15, Y+
    239a:	ee 24       	eor	r14, r14
    239c:	8e 01       	movw	r16, r28
    239e:	01 50       	subi	r16, 0x01	; 1
    23a0:	10 40       	sbci	r17, 0x00	; 0
    23a2:	c8 01       	movw	r24, r16
    23a4:	66 e5       	ldi	r22, 0x56	; 86
    23a6:	71 e0       	ldi	r23, 0x01	; 1
    23a8:	43 e0       	ldi	r20, 0x03	; 3
    23aa:	50 e0       	ldi	r21, 0x00	; 0
    23ac:	0e 94 15 13 	call	0x262a	; 0x262a <strncasecmp_P>
    23b0:	89 2b       	or	r24, r25
    23b2:	01 f5       	brne	.+64     	; 0x23f4 <strtod+0x9a>
    23b4:	8e 01       	movw	r16, r28
    23b6:	0e 5f       	subi	r16, 0xFE	; 254
    23b8:	1f 4f       	sbci	r17, 0xFF	; 255
    23ba:	c8 01       	movw	r24, r16
    23bc:	69 e5       	ldi	r22, 0x59	; 89
    23be:	71 e0       	ldi	r23, 0x01	; 1
    23c0:	45 e0       	ldi	r20, 0x05	; 5
    23c2:	50 e0       	ldi	r21, 0x00	; 0
    23c4:	0e 94 15 13 	call	0x262a	; 0x262a <strncasecmp_P>
    23c8:	89 2b       	or	r24, r25
    23ca:	19 f4       	brne	.+6      	; 0x23d2 <strtod+0x78>
    23cc:	8e 01       	movw	r16, r28
    23ce:	09 5f       	subi	r16, 0xF9	; 249
    23d0:	1f 4f       	sbci	r17, 0xFF	; 255
    23d2:	a1 14       	cp	r10, r1
    23d4:	b1 04       	cpc	r11, r1
    23d6:	19 f0       	breq	.+6      	; 0x23de <strtod+0x84>
    23d8:	f5 01       	movw	r30, r10
    23da:	11 83       	std	Z+1, r17	; 0x01
    23dc:	00 83       	st	Z, r16
    23de:	e0 fc       	sbrc	r14, 0
    23e0:	04 c0       	rjmp	.+8      	; 0x23ea <strtod+0x90>
    23e2:	70 e0       	ldi	r23, 0x00	; 0
    23e4:	90 e0       	ldi	r25, 0x00	; 0
    23e6:	80 e8       	ldi	r24, 0x80	; 128
    23e8:	14 c0       	rjmp	.+40     	; 0x2412 <strtod+0xb8>
    23ea:	70 e0       	ldi	r23, 0x00	; 0
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	80 e8       	ldi	r24, 0x80	; 128
    23f0:	6f ef       	ldi	r22, 0xFF	; 255
    23f2:	08 c1       	rjmp	.+528    	; 0x2604 <strtod+0x2aa>
    23f4:	c8 01       	movw	r24, r16
    23f6:	6e e5       	ldi	r22, 0x5E	; 94
    23f8:	71 e0       	ldi	r23, 0x01	; 1
    23fa:	43 e0       	ldi	r20, 0x03	; 3
    23fc:	50 e0       	ldi	r21, 0x00	; 0
    23fe:	0e 94 15 13 	call	0x262a	; 0x262a <strncasecmp_P>
    2402:	89 2b       	or	r24, r25
    2404:	69 f4       	brne	.+26     	; 0x2420 <strtod+0xc6>
    2406:	a1 14       	cp	r10, r1
    2408:	b1 04       	cpc	r11, r1
    240a:	29 f4       	brne	.+10     	; 0x2416 <strtod+0xbc>
    240c:	70 e0       	ldi	r23, 0x00	; 0
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	80 ec       	ldi	r24, 0xC0	; 192
    2412:	6f e7       	ldi	r22, 0x7F	; 127
    2414:	f7 c0       	rjmp	.+494    	; 0x2604 <strtod+0x2aa>
    2416:	22 96       	adiw	r28, 0x02	; 2
    2418:	f5 01       	movw	r30, r10
    241a:	d1 83       	std	Z+1, r29	; 0x01
    241c:	c0 83       	st	Z, r28
    241e:	f6 cf       	rjmp	.-20     	; 0x240c <strtod+0xb2>
    2420:	88 24       	eor	r8, r8
    2422:	99 24       	eor	r9, r9
    2424:	40 e0       	ldi	r20, 0x00	; 0
    2426:	50 e0       	ldi	r21, 0x00	; 0
    2428:	60 e0       	ldi	r22, 0x00	; 0
    242a:	70 e0       	ldi	r23, 0x00	; 0
    242c:	ef 2d       	mov	r30, r15
    242e:	e0 53       	subi	r30, 0x30	; 48
    2430:	ea 30       	cpi	r30, 0x0A	; 10
    2432:	a0 f5       	brcc	.+104    	; 0x249c <strtod+0x142>
    2434:	f2 e0       	ldi	r31, 0x02	; 2
    2436:	ef 2a       	or	r14, r31
    2438:	8e 2d       	mov	r24, r14
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	9c 01       	movw	r18, r24
    243e:	28 70       	andi	r18, 0x08	; 8
    2440:	30 70       	andi	r19, 0x00	; 0
    2442:	e2 fe       	sbrs	r14, 2
    2444:	06 c0       	rjmp	.+12     	; 0x2452 <strtod+0xf8>
    2446:	23 2b       	or	r18, r19
    2448:	79 f5       	brne	.+94     	; 0x24a8 <strtod+0x14e>
    244a:	08 94       	sec
    244c:	81 1c       	adc	r8, r1
    244e:	91 1c       	adc	r9, r1
    2450:	2b c0       	rjmp	.+86     	; 0x24a8 <strtod+0x14e>
    2452:	23 2b       	or	r18, r19
    2454:	19 f0       	breq	.+6      	; 0x245c <strtod+0x102>
    2456:	08 94       	sec
    2458:	81 08       	sbc	r8, r1
    245a:	91 08       	sbc	r9, r1
    245c:	db 01       	movw	r26, r22
    245e:	ca 01       	movw	r24, r20
    2460:	12 e0       	ldi	r17, 0x02	; 2
    2462:	88 0f       	add	r24, r24
    2464:	99 1f       	adc	r25, r25
    2466:	aa 1f       	adc	r26, r26
    2468:	bb 1f       	adc	r27, r27
    246a:	1a 95       	dec	r17
    246c:	d1 f7       	brne	.-12     	; 0x2462 <strtod+0x108>
    246e:	48 0f       	add	r20, r24
    2470:	59 1f       	adc	r21, r25
    2472:	6a 1f       	adc	r22, r26
    2474:	7b 1f       	adc	r23, r27
    2476:	44 0f       	add	r20, r20
    2478:	55 1f       	adc	r21, r21
    247a:	66 1f       	adc	r22, r22
    247c:	77 1f       	adc	r23, r23
    247e:	4e 0f       	add	r20, r30
    2480:	51 1d       	adc	r21, r1
    2482:	61 1d       	adc	r22, r1
    2484:	71 1d       	adc	r23, r1
    2486:	48 39       	cpi	r20, 0x98	; 152
    2488:	29 e9       	ldi	r18, 0x99	; 153
    248a:	52 07       	cpc	r21, r18
    248c:	29 e9       	ldi	r18, 0x99	; 153
    248e:	62 07       	cpc	r22, r18
    2490:	29 e1       	ldi	r18, 0x19	; 25
    2492:	72 07       	cpc	r23, r18
    2494:	48 f0       	brcs	.+18     	; 0x24a8 <strtod+0x14e>
    2496:	84 e0       	ldi	r24, 0x04	; 4
    2498:	e8 2a       	or	r14, r24
    249a:	06 c0       	rjmp	.+12     	; 0x24a8 <strtod+0x14e>
    249c:	ee 3f       	cpi	r30, 0xFE	; 254
    249e:	31 f4       	brne	.+12     	; 0x24ac <strtod+0x152>
    24a0:	e3 fc       	sbrc	r14, 3
    24a2:	39 c0       	rjmp	.+114    	; 0x2516 <strtod+0x1bc>
    24a4:	98 e0       	ldi	r25, 0x08	; 8
    24a6:	e9 2a       	or	r14, r25
    24a8:	f9 90       	ld	r15, Y+
    24aa:	c0 cf       	rjmp	.-128    	; 0x242c <strtod+0xd2>
    24ac:	e5 33       	cpi	r30, 0x35	; 53
    24ae:	11 f0       	breq	.+4      	; 0x24b4 <strtod+0x15a>
    24b0:	e5 31       	cpi	r30, 0x15	; 21
    24b2:	89 f5       	brne	.+98     	; 0x2516 <strtod+0x1bc>
    24b4:	29 91       	ld	r18, Y+
    24b6:	2d 32       	cpi	r18, 0x2D	; 45
    24b8:	19 f4       	brne	.+6      	; 0x24c0 <strtod+0x166>
    24ba:	e0 e1       	ldi	r30, 0x10	; 16
    24bc:	ee 2a       	or	r14, r30
    24be:	05 c0       	rjmp	.+10     	; 0x24ca <strtod+0x170>
    24c0:	2b 32       	cpi	r18, 0x2B	; 43
    24c2:	19 f0       	breq	.+6      	; 0x24ca <strtod+0x170>
    24c4:	81 e0       	ldi	r24, 0x01	; 1
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	03 c0       	rjmp	.+6      	; 0x24d0 <strtod+0x176>
    24ca:	29 91       	ld	r18, Y+
    24cc:	82 e0       	ldi	r24, 0x02	; 2
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	e2 2f       	mov	r30, r18
    24d2:	e0 53       	subi	r30, 0x30	; 48
    24d4:	ea 30       	cpi	r30, 0x0A	; 10
    24d6:	18 f0       	brcs	.+6      	; 0x24de <strtod+0x184>
    24d8:	c8 1b       	sub	r28, r24
    24da:	d9 0b       	sbc	r29, r25
    24dc:	1c c0       	rjmp	.+56     	; 0x2516 <strtod+0x1bc>
    24de:	20 e0       	ldi	r18, 0x00	; 0
    24e0:	30 e0       	ldi	r19, 0x00	; 0
    24e2:	fc e0       	ldi	r31, 0x0C	; 12
    24e4:	20 38       	cpi	r18, 0x80	; 128
    24e6:	3f 07       	cpc	r19, r31
    24e8:	5c f4       	brge	.+22     	; 0x2500 <strtod+0x1a6>
    24ea:	c9 01       	movw	r24, r18
    24ec:	88 0f       	add	r24, r24
    24ee:	99 1f       	adc	r25, r25
    24f0:	88 0f       	add	r24, r24
    24f2:	99 1f       	adc	r25, r25
    24f4:	28 0f       	add	r18, r24
    24f6:	39 1f       	adc	r19, r25
    24f8:	22 0f       	add	r18, r18
    24fa:	33 1f       	adc	r19, r19
    24fc:	2e 0f       	add	r18, r30
    24fe:	31 1d       	adc	r19, r1
    2500:	e9 91       	ld	r30, Y+
    2502:	e0 53       	subi	r30, 0x30	; 48
    2504:	ea 30       	cpi	r30, 0x0A	; 10
    2506:	68 f3       	brcs	.-38     	; 0x24e2 <strtod+0x188>
    2508:	e4 fe       	sbrs	r14, 4
    250a:	03 c0       	rjmp	.+6      	; 0x2512 <strtod+0x1b8>
    250c:	30 95       	com	r19
    250e:	21 95       	neg	r18
    2510:	3f 4f       	sbci	r19, 0xFF	; 255
    2512:	82 0e       	add	r8, r18
    2514:	93 1e       	adc	r9, r19
    2516:	ce 2c       	mov	r12, r14
    2518:	dd 24       	eor	r13, r13
    251a:	e1 fe       	sbrs	r14, 1
    251c:	07 c0       	rjmp	.+14     	; 0x252c <strtod+0x1d2>
    251e:	a1 14       	cp	r10, r1
    2520:	b1 04       	cpc	r11, r1
    2522:	21 f0       	breq	.+8      	; 0x252c <strtod+0x1d2>
    2524:	21 97       	sbiw	r28, 0x01	; 1
    2526:	f5 01       	movw	r30, r10
    2528:	d1 83       	std	Z+1, r29	; 0x01
    252a:	c0 83       	st	Z, r28
    252c:	cb 01       	movw	r24, r22
    252e:	ba 01       	movw	r22, r20
    2530:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <__floatunsisf>
    2534:	7b 01       	movw	r14, r22
    2536:	8c 01       	movw	r16, r24
    2538:	f3 e0       	ldi	r31, 0x03	; 3
    253a:	cf 22       	and	r12, r31
    253c:	dd 24       	eor	r13, r13
    253e:	23 e0       	ldi	r18, 0x03	; 3
    2540:	c2 16       	cp	r12, r18
    2542:	d1 04       	cpc	r13, r1
    2544:	21 f4       	brne	.+8      	; 0x254e <strtod+0x1f4>
    2546:	17 fb       	bst	r17, 7
    2548:	10 95       	com	r17
    254a:	17 f9       	bld	r17, 7
    254c:	10 95       	com	r17
    254e:	57 01       	movw	r10, r14
    2550:	68 01       	movw	r12, r16
    2552:	c8 01       	movw	r24, r16
    2554:	b7 01       	movw	r22, r14
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e0       	ldi	r20, 0x00	; 0
    255c:	50 e0       	ldi	r21, 0x00	; 0
    255e:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__cmpsf2>
    2562:	88 23       	and	r24, r24
    2564:	09 f4       	brne	.+2      	; 0x2568 <strtod+0x20e>
    2566:	4a c0       	rjmp	.+148    	; 0x25fc <strtod+0x2a2>
    2568:	97 fe       	sbrs	r9, 7
    256a:	0d c0       	rjmp	.+26     	; 0x2586 <strtod+0x22c>
    256c:	25 e7       	ldi	r18, 0x75	; 117
    256e:	e2 2e       	mov	r14, r18
    2570:	21 e0       	ldi	r18, 0x01	; 1
    2572:	f2 2e       	mov	r15, r18
    2574:	90 94       	com	r9
    2576:	81 94       	neg	r8
    2578:	91 08       	sbc	r9, r1
    257a:	93 94       	inc	r9
    257c:	c0 e2       	ldi	r28, 0x20	; 32
    257e:	d0 e0       	ldi	r29, 0x00	; 0
    2580:	00 e0       	ldi	r16, 0x00	; 0
    2582:	10 e0       	ldi	r17, 0x00	; 0
    2584:	12 c0       	rjmp	.+36     	; 0x25aa <strtod+0x250>
    2586:	9d e8       	ldi	r25, 0x8D	; 141
    2588:	e9 2e       	mov	r14, r25
    258a:	91 e0       	ldi	r25, 0x01	; 1
    258c:	f9 2e       	mov	r15, r25
    258e:	f6 cf       	rjmp	.-20     	; 0x257c <strtod+0x222>
    2590:	f7 01       	movw	r30, r14
    2592:	25 91       	lpm	r18, Z+
    2594:	35 91       	lpm	r19, Z+
    2596:	45 91       	lpm	r20, Z+
    2598:	54 91       	lpm	r21, Z+
    259a:	c6 01       	movw	r24, r12
    259c:	b5 01       	movw	r22, r10
    259e:	0e 94 2d 13 	call	0x265a	; 0x265a <__mulsf3>
    25a2:	5b 01       	movw	r10, r22
    25a4:	6c 01       	movw	r12, r24
    25a6:	8c 1a       	sub	r8, r28
    25a8:	9d 0a       	sbc	r9, r29
    25aa:	8c 16       	cp	r8, r28
    25ac:	9d 06       	cpc	r9, r29
    25ae:	84 f7       	brge	.-32     	; 0x2590 <strtod+0x236>
    25b0:	d5 95       	asr	r29
    25b2:	c7 95       	ror	r28
    25b4:	0f 5f       	subi	r16, 0xFF	; 255
    25b6:	1f 4f       	sbci	r17, 0xFF	; 255
    25b8:	06 30       	cpi	r16, 0x06	; 6
    25ba:	11 05       	cpc	r17, r1
    25bc:	29 f0       	breq	.+10     	; 0x25c8 <strtod+0x26e>
    25be:	8c ef       	ldi	r24, 0xFC	; 252
    25c0:	9f ef       	ldi	r25, 0xFF	; 255
    25c2:	e8 0e       	add	r14, r24
    25c4:	f9 1e       	adc	r15, r25
    25c6:	f1 cf       	rjmp	.-30     	; 0x25aa <strtod+0x250>
    25c8:	c5 01       	movw	r24, r10
    25ca:	d6 01       	movw	r26, r12
    25cc:	7c 01       	movw	r14, r24
    25ce:	8d 01       	movw	r16, r26
    25d0:	8c 2d       	mov	r24, r12
    25d2:	88 0f       	add	r24, r24
    25d4:	8d 2d       	mov	r24, r13
    25d6:	88 1f       	adc	r24, r24
    25d8:	8f 3f       	cpi	r24, 0xFF	; 255
    25da:	51 f0       	breq	.+20     	; 0x25f0 <strtod+0x296>
    25dc:	c6 01       	movw	r24, r12
    25de:	b5 01       	movw	r22, r10
    25e0:	20 e0       	ldi	r18, 0x00	; 0
    25e2:	30 e0       	ldi	r19, 0x00	; 0
    25e4:	40 e0       	ldi	r20, 0x00	; 0
    25e6:	50 e0       	ldi	r21, 0x00	; 0
    25e8:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__cmpsf2>
    25ec:	88 23       	and	r24, r24
    25ee:	31 f4       	brne	.+12     	; 0x25fc <strtod+0x2a2>
    25f0:	82 e2       	ldi	r24, 0x22	; 34
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	90 93 7b 03 	sts	0x037B, r25
    25f8:	80 93 7a 03 	sts	0x037A, r24
    25fc:	7e 2d       	mov	r23, r14
    25fe:	9f 2d       	mov	r25, r15
    2600:	80 2f       	mov	r24, r16
    2602:	61 2f       	mov	r22, r17
    2604:	27 2f       	mov	r18, r23
    2606:	39 2f       	mov	r19, r25
    2608:	48 2f       	mov	r20, r24
    260a:	56 2f       	mov	r21, r22
    260c:	b9 01       	movw	r22, r18
    260e:	ca 01       	movw	r24, r20
    2610:	cd b7       	in	r28, 0x3d	; 61
    2612:	de b7       	in	r29, 0x3e	; 62
    2614:	ec e0       	ldi	r30, 0x0C	; 12
    2616:	0c 94 ae 0f 	jmp	0x1f5c	; 0x1f5c <__epilogue_restores__+0xc>

0000261a <isspace>:
    261a:	91 11       	cpse	r25, r1
    261c:	81 c0       	rjmp	.+258    	; 0x2720 <__ctype_isfalse>
    261e:	80 32       	cpi	r24, 0x20	; 32
    2620:	19 f0       	breq	.+6      	; 0x2628 <isspace+0xe>
    2622:	89 50       	subi	r24, 0x09	; 9
    2624:	85 50       	subi	r24, 0x05	; 5
    2626:	d0 f7       	brcc	.-12     	; 0x261c <isspace+0x2>
    2628:	08 95       	ret

0000262a <strncasecmp_P>:
    262a:	fb 01       	movw	r30, r22
    262c:	dc 01       	movw	r26, r24
    262e:	41 50       	subi	r20, 0x01	; 1
    2630:	50 40       	sbci	r21, 0x00	; 0
    2632:	88 f0       	brcs	.+34     	; 0x2656 <strncasecmp_P+0x2c>
    2634:	8d 91       	ld	r24, X+
    2636:	81 34       	cpi	r24, 0x41	; 65
    2638:	1c f0       	brlt	.+6      	; 0x2640 <strncasecmp_P+0x16>
    263a:	8b 35       	cpi	r24, 0x5B	; 91
    263c:	0c f4       	brge	.+2      	; 0x2640 <strncasecmp_P+0x16>
    263e:	80 5e       	subi	r24, 0xE0	; 224
    2640:	65 91       	lpm	r22, Z+
    2642:	61 34       	cpi	r22, 0x41	; 65
    2644:	1c f0       	brlt	.+6      	; 0x264c <strncasecmp_P+0x22>
    2646:	6b 35       	cpi	r22, 0x5B	; 91
    2648:	0c f4       	brge	.+2      	; 0x264c <strncasecmp_P+0x22>
    264a:	60 5e       	subi	r22, 0xE0	; 224
    264c:	86 1b       	sub	r24, r22
    264e:	61 11       	cpse	r22, r1
    2650:	71 f3       	breq	.-36     	; 0x262e <strncasecmp_P+0x4>
    2652:	99 0b       	sbc	r25, r25
    2654:	08 95       	ret
    2656:	88 1b       	sub	r24, r24
    2658:	fc cf       	rjmp	.-8      	; 0x2652 <strncasecmp_P+0x28>

0000265a <__mulsf3>:
    265a:	0b d0       	rcall	.+22     	; 0x2672 <__mulsf3x>
    265c:	f9 cb       	rjmp	.-2062   	; 0x1e50 <__fp_round>
    265e:	ea db       	rcall	.-2092   	; 0x1e34 <__fp_pscA>
    2660:	28 f0       	brcs	.+10     	; 0x266c <__mulsf3+0x12>
    2662:	ef db       	rcall	.-2082   	; 0x1e42 <__fp_pscB>
    2664:	18 f0       	brcs	.+6      	; 0x266c <__mulsf3+0x12>
    2666:	95 23       	and	r25, r21
    2668:	09 f0       	breq	.+2      	; 0x266c <__mulsf3+0x12>
    266a:	b2 cb       	rjmp	.-2204   	; 0x1dd0 <__fp_inf>
    266c:	e0 cb       	rjmp	.-2112   	; 0x1e2e <__fp_nan>
    266e:	11 24       	eor	r1, r1
    2670:	3a cc       	rjmp	.-1932   	; 0x1ee6 <__fp_szero>

00002672 <__mulsf3x>:
    2672:	ff db       	rcall	.-2050   	; 0x1e72 <__fp_split3>
    2674:	a0 f3       	brcs	.-24     	; 0x265e <__mulsf3+0x4>

00002676 <__mulsf3_pse>:
    2676:	95 9f       	mul	r25, r21
    2678:	d1 f3       	breq	.-12     	; 0x266e <__mulsf3+0x14>
    267a:	95 0f       	add	r25, r21
    267c:	50 e0       	ldi	r21, 0x00	; 0
    267e:	55 1f       	adc	r21, r21
    2680:	62 9f       	mul	r22, r18
    2682:	f0 01       	movw	r30, r0
    2684:	72 9f       	mul	r23, r18
    2686:	bb 27       	eor	r27, r27
    2688:	f0 0d       	add	r31, r0
    268a:	b1 1d       	adc	r27, r1
    268c:	63 9f       	mul	r22, r19
    268e:	aa 27       	eor	r26, r26
    2690:	f0 0d       	add	r31, r0
    2692:	b1 1d       	adc	r27, r1
    2694:	aa 1f       	adc	r26, r26
    2696:	64 9f       	mul	r22, r20
    2698:	66 27       	eor	r22, r22
    269a:	b0 0d       	add	r27, r0
    269c:	a1 1d       	adc	r26, r1
    269e:	66 1f       	adc	r22, r22
    26a0:	82 9f       	mul	r24, r18
    26a2:	22 27       	eor	r18, r18
    26a4:	b0 0d       	add	r27, r0
    26a6:	a1 1d       	adc	r26, r1
    26a8:	62 1f       	adc	r22, r18
    26aa:	73 9f       	mul	r23, r19
    26ac:	b0 0d       	add	r27, r0
    26ae:	a1 1d       	adc	r26, r1
    26b0:	62 1f       	adc	r22, r18
    26b2:	83 9f       	mul	r24, r19
    26b4:	a0 0d       	add	r26, r0
    26b6:	61 1d       	adc	r22, r1
    26b8:	22 1f       	adc	r18, r18
    26ba:	74 9f       	mul	r23, r20
    26bc:	33 27       	eor	r19, r19
    26be:	a0 0d       	add	r26, r0
    26c0:	61 1d       	adc	r22, r1
    26c2:	23 1f       	adc	r18, r19
    26c4:	84 9f       	mul	r24, r20
    26c6:	60 0d       	add	r22, r0
    26c8:	21 1d       	adc	r18, r1
    26ca:	82 2f       	mov	r24, r18
    26cc:	76 2f       	mov	r23, r22
    26ce:	6a 2f       	mov	r22, r26
    26d0:	11 24       	eor	r1, r1
    26d2:	9f 57       	subi	r25, 0x7F	; 127
    26d4:	50 40       	sbci	r21, 0x00	; 0
    26d6:	8a f0       	brmi	.+34     	; 0x26fa <__mulsf3_pse+0x84>
    26d8:	e1 f0       	breq	.+56     	; 0x2712 <__mulsf3_pse+0x9c>
    26da:	88 23       	and	r24, r24
    26dc:	4a f0       	brmi	.+18     	; 0x26f0 <__mulsf3_pse+0x7a>
    26de:	ee 0f       	add	r30, r30
    26e0:	ff 1f       	adc	r31, r31
    26e2:	bb 1f       	adc	r27, r27
    26e4:	66 1f       	adc	r22, r22
    26e6:	77 1f       	adc	r23, r23
    26e8:	88 1f       	adc	r24, r24
    26ea:	91 50       	subi	r25, 0x01	; 1
    26ec:	50 40       	sbci	r21, 0x00	; 0
    26ee:	a9 f7       	brne	.-22     	; 0x26da <__mulsf3_pse+0x64>
    26f0:	9e 3f       	cpi	r25, 0xFE	; 254
    26f2:	51 05       	cpc	r21, r1
    26f4:	70 f0       	brcs	.+28     	; 0x2712 <__mulsf3_pse+0x9c>
    26f6:	6c cb       	rjmp	.-2344   	; 0x1dd0 <__fp_inf>
    26f8:	f6 cb       	rjmp	.-2068   	; 0x1ee6 <__fp_szero>
    26fa:	5f 3f       	cpi	r21, 0xFF	; 255
    26fc:	ec f3       	brlt	.-6      	; 0x26f8 <__mulsf3_pse+0x82>
    26fe:	98 3e       	cpi	r25, 0xE8	; 232
    2700:	dc f3       	brlt	.-10     	; 0x26f8 <__mulsf3_pse+0x82>
    2702:	86 95       	lsr	r24
    2704:	77 95       	ror	r23
    2706:	67 95       	ror	r22
    2708:	b7 95       	ror	r27
    270a:	f7 95       	ror	r31
    270c:	e7 95       	ror	r30
    270e:	9f 5f       	subi	r25, 0xFF	; 255
    2710:	c1 f7       	brne	.-16     	; 0x2702 <__mulsf3_pse+0x8c>
    2712:	fe 2b       	or	r31, r30
    2714:	88 0f       	add	r24, r24
    2716:	91 1d       	adc	r25, r1
    2718:	96 95       	lsr	r25
    271a:	87 95       	ror	r24
    271c:	97 f9       	bld	r25, 7
    271e:	08 95       	ret

00002720 <__ctype_isfalse>:
    2720:	99 27       	eor	r25, r25
    2722:	88 27       	eor	r24, r24

00002724 <__ctype_istrue>:
    2724:	08 95       	ret

00002726 <_exit>:
    2726:	f8 94       	cli

00002728 <__stop_program>:
    2728:	ff cf       	rjmp	.-2      	; 0x2728 <__stop_program>
